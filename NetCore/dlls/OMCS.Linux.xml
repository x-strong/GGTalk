<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OMCS.Linux</name>
    </assembly>
    <members>
        <member name="T:OMCS.Communication.Basic.AgileTcpListener">
            <summary>
            用于封装TCP监听者及监听线程。支持IPV6。
            zhuweisky 2005.05.23
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.AgileTcpListener.TcpConnectionEstablished">
            <summary>
            当新的Tcp连接成功建立时，会触发此事件	
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.AgileTcpListener.SocketSendBuffSize">
            <summary>
            Socket(网卡)发送缓冲区的大小。默认为64K。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.AgileTcpListener.SocketReceiveBuffSize">
            <summary>
            SockeetReceiveBuffSize 网卡接收缓冲区大小。默认为64K。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.AgileTcpListener.FillKeepAliveStruct(System.Int32,System.Int32,System.Int32)">
            <summary>
            FillKeepAliveStruct 得到Keep-Alive结构值
            </summary>
            <param name="onOff">是否启用Keep-Alive</param>
            <param name="keepAliveTimeInMSec">多长时间后开始第一次探测ms</param>
            <param name="keepAliveIntervalInMSec">探测时间间隔ms</param>
            <returns></returns>
        </member>
        <member name="T:OMCS.Communication.Basic.IConnectionCountGetter">
            <summary>
            获取当前已经存在的TCP连接数
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.AuthorizeType.NormalInstance">
            <summary>
            如果在封闭的局网，可正常启动；一旦连接到公网，则验证授权，授权通过后，才能继续正常工作。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.AuthorizeType.JustOnInternet">
            <summary>
            只能在公网运行（必须通过授权服务器验证后，才能启动）
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.AuthorizeType.SecurityDog">
            <summary>
            使用加密狗才可启动。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.AuthorizeType.AuthorizedSN">
            <summary>
            授权序列（硬盘和mac相关信息）
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.AuthorizeType.JustInLAN">
            <summary>
            局网买断
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.AuthorizeType.SecurityDogAndSN">
            <summary>
            加密狗结合SN。可支持在指定SN的服务器上无加密狗运行24小时。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.AuthorizationVerifier">
            <summary>
            OMCS.Communication.Basic授权验证。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.AuthorizationVerifier.SetAuthorizedUser(System.String,System.String)">
            <summary>
            被授权的用户需要在程序初始化开始时先调用该方法注册。如果不调用此方法注册，则将以Free版本运行。        
            </summary>       
        </member>
        <member name="F:OMCS.Communication.Basic.AuthorizationVerifyMode.UserID">
            <summary>
            用于按实例授权。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.AuthorizationVerifyMode.PublicTokenKey">
            <summary>
            用于买断的情况。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.AuthorizedSNChecker.CheckAuthorizedSN(System.String,System.String@,System.String@)">
            <summary>
            验证机器信息（硬盘ID、MAC地址）
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.AuthorizedSNChecker.GetSystemUUID">
            <summary>
            获取系统UUID信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:OMCS.Communication.Basic.CycleVerifier.#ctor">
            <summary>
            给客户端BasicPassiveProcesser调用。 2015.05.04
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.CycleVerifier.IsOnInternet">
            <summary>
            连接授权服务器验证是否已经授权。如果网络异常、调用异常、或未授权都将返回false。
            适用场合:只能在公网使用，不能用于封闭的局域网。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.RemoteDogChecker.ReceiveData(System.Net.Sockets.NetworkStream,System.Int32)">
            <summary>
            ReceiveData 从网络读取指定长度的数据。当读取的字节数为0时，表示连接断开，并抛出IOException异常。
            </summary>	
        </member>
        <member name="M:OMCS.Communication.Basic.RemoteDogChecker.ReceiveData(System.Net.Sockets.NetworkStream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            ReceiveData 从网络读取指定长度的数据 ，存放在buff中offset处。当读取的字节数为0时，表示连接断开，并抛出IOException异常。
            </summary>	
        </member>
        <member name="M:OMCS.Communication.Basic.WebServiceCaller.QueryPostWebService(System.String,System.String,System.Collections.Hashtable)">
            <summary>
            需要WebService支持Post调用
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.WebServiceCaller.QueryGetWebService(System.String,System.String,System.Collections.Hashtable)">
            <summary>
            需要WebService支持Get调用
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.WebServiceCaller.QuerySoapWebService(System.String,System.String,System.Collections.Hashtable)">
            <summary>
            通用WebService调用(Soap),参数Pars为String类型的参数名、参数值
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.WebServiceCaller.SetWebRequest(System.Net.HttpWebRequest)">
            <summary>
            设置凭证与超时时间
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:OMCS.Communication.Basic.WSHelper.InvokeWebService(System.String,System.String,System.Object[])">
            <summary>
            InvokeWebService 动态调用web服务
            </summary>
            <param name="wsUrl">WebService 地址</param>
            <param name="methodname">方法名</param>
            <param name="args">参数，仅仅支持简单类型</param>		
        </member>
        <member name="F:OMCS.Communication.Basic.PasswordLevel.Administrator">
            <summary>
            管理密码 0 
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.PasswordLevel.NormalUser">
            <summary>
            普通用户密码 1
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.PasswordLevel.AuthenticUser">
            <summary>
            认证密码 2
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ResultCode.SUCCESS">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ResultCode.OPEN_DEVICE_FAILED">
            <summary>
            打开设备失败 1
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ResultCode.FIND_DEVICE_FAILED">
            <summary>
            未找到符合条件的设备 2
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ResultCode.INVALID_PARAMETER">
            <summary>
            参数错误 3
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ResultCode.INVALID_BLOCK_NUMBER">
            <summary>
            块号错误 4
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ResultCode.HARDWARE_COMMUNICATE_ERROR">
            <summary>
            与硬件通信错误 5
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ResultCode.INVALID_PASSWORD">
            <summary>
            密码错误 6
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ResultCode.ACCESS_DENIED">
            <summary>
            没有权限 7
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ResultCode.ALREADY_OPENED">
            <summary>
            设备已经打开 8
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ResultCode.ALLOCATE_MEMORY_FAILED">
            <summary>
            内存分配失败 9
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ResultCode.INVALID_UPDATE_PACKAGE">
            <summary>
            不合法的升级包 10
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ResultCode.SYN_ERROR">
            <summary>
            线程同步错误 11
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ResultCode.OTHER_ERROR">
            <summary>
            其它未知异常、错误 12
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_OPEN_SHARE_MODE">
            共享打开  
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_OPEN_EXCLUSIVE_MODE">
            独占打开 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_ALG_TYPE_AES">
            算法类型AES 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_ALG_TYPE_DES">
            算法类型DES 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_ALG_TYPE_TDES">
            算法类型TDES 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_ALG_TYPE_ECC">
            算法类型ECC 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_ALG_TYPE_RSA">
            算法类型RSA 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_SYM_ALGO_MODE_ECB">
            对称算法模式 ECB mode 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_SYM_ALGO_MODE_CBC">
            对称算法模式 CBC mode 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_FILE_TYPE_BINARY">
            二进制文件 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_FILE_TYPE_KEY">
            密钥文件 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_FILE_PRIV_TYPE_USE">
            密钥文件权限类型 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_FILE_PRIV_TYPE_READ">
            数据文件用户只读权限类型 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_FILE_PRIV_TYPE_READ_WRITE">
            数据文件用户读写权限类型 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_GET_INFO_ITEM_PID">
            获取PID     返回4字节PID 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_GET_INFO_ITEM_SN">
            获取序列号  返回16字节获取序列号 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_GET_INFO_ITEM_PRODUCE_DATE">
            获取生产日期 返回4字节生产日期 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_GET_INFO_ITEM_ALL_CAPACITY">
            获取总容量   返回4字节总容量 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_GET_INFO_ITEM_FREE_CAPACITY">
            获取剩余容量 返回4字节剩余容量 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_GET_INFO_ITEM_VERSION">
            获取设备版本 返回4字节设备版本 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_GET_INFO_ITEM_SHELL_SN">
            获取外壳号   返回第一字节为外壳号长度，后面是外壳号数据。注：最大256字节。 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_GET_INFO_ITEM_STATUS">
            获取设置状态 返回1字节的标识，参见宏定义MW_STATUS_FLAG_PID、MW_STATUS_FLAG_PIN 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_GET_INFO_ITEM_UPDATE_CODE">
            获取设备远程升级码      返回4 字节设备远程升级码 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_GET_INFO_ITEM_UPDATE_CTRL_CODE">
            获取远程升级控制锁标识  返回1字节标识 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_GET_INFO_ITEM_ALL">
            获取所有信息，返回MW_DEVICE_ALL_ITEM_INFO结构体的大小 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_STATUS_FLAG_DEFAULT">
            默认状态 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_STATUS_FLAG_PID">
            已经设置PID状态 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_STATUS_FLAG_PIN">
            已经修改PIN状态 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_CTRL_CODE_ITEM_RESET">
            复位设备，清除登陆状态。 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_CTRL_CODE_ITEM_LED">
            控制LED。  注：数据第一字节非0标识LED亮，0表示灭 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_PIN_TYPE_NONE">
            默认PIN类型 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_PIN_TYPE_USER">
            用户PIN类型 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_PIN_TYPE_DEVELOPER">
            开发商PIN类型 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_PIN_LENGTH_USER">
            用户PIN长度 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_PIN_LENGTH_DEVELOPER">
            开发商PIN长度 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_RSA_MODE_NORMAL">
            RSA不填充加密模式 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_RSA_MODE_PKCS1_V1_5">
            RSA PKCS1 V1_5 填充加密模式 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_RSA_1024_BYTE_SIZE">
            RSA-1024加密数据长度 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_RSA_2048_BYTE_SIZE">
            RSA-2048加密数据长度 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_HASH_ALGO_MD5">
            签名MD5 hash算法 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_HASH_ALGO_SHA1">
            签名SHA1 hash算法 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_HASH_ALGO_SHA256">
            签名SHA256 hash算法 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_HASH_ALGO_NONE">
            签名时不做Hash运算，由调用函数者自己做Hash运算 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_UPDATE_FILE_COUNT_MAX">
            一个升级包最大包含升级文件个数 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_UPDATE_MOD_FLAG_DELETE">
            升级文件时的操作标志 删除文件 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_UPDATE_MOD_FLAG_WRITE">
            升级文件时的操作标志 写文件 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_UPDATE_MOD_FLAG_CREATE">
            升级文件时的操作标志 创建文件 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_LANGUAGE_ID_EN">
            英文 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_LANGUAGE_ID_CH">
            中文 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_PATH_LEN">
            最大路径 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_SYM_ALG_IV_LENGTH">
            对称加密算法向量长度 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_SN_LENGTH">
            设备唯一序列号长度 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_FILE_NAME_LENGTH_MAX">
            文件名最大长度 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_HMAC_MD5_DIGEST_LENGTH">
            HMAC MD5计算结果长度 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_HMAC_SHA1_DIGEST_LENGTH">
            HMAC SHA1计算结果长度 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_HMAC_SHA256_DIGEST_LENGTH">
            HMAC SHA256计算结果长度 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_INPUT_DATA_LENGTH_MAX">
            一次最大转输数据长度 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_SEED_LENGTH_MAX">
            最大种子码长度 
        </member>
        <member name="F:OMCS.Communication.Basic.MowayCS.MW_SEED_LENGTH_MIN">
            最小种子码长度 
        </member>
        <member name="T:OMCS.Communication.Basic.MW_DEVICE_INFO_CTX">
            设备信息结构体 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_INFO_CTX.uiPID">
            产品ID 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_INFO_CTX.ucSerialNum">
            唯一序列号 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_INFO_CTX.ucDevPath">
            设备的路径 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_INFO_CTX.uiProtocol">
            通讯协议 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_INFO_CTX.uiLocationID">
            Mac OS 系统 LocationID 
        </member>
        <member name="T:OMCS.Communication.Basic.MW_FILE_PROPERTY">
            文件属性结构体 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_FILE_PROPERTY.ucType">
            文件类型：二进制文件或者密钥文件。 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_FILE_PROPERTY.usPrivilege">
            文件权限 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_FILE_PROPERTY.uiSize">
            文件大小 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_FILE_PROPERTY.uiTime">
            创建时间 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_FILE_PROPERTY.acName">
            文件名称 
        </member>
        <member name="T:OMCS.Communication.Basic.MW_DEVICE_STATUS">
            系统工作状态结构体 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_STATUS.uiSysTime">
            系统时间 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_STATUS.uiSysStatus">
            系统状态 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_STATUS.usReserved">
            保留 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_STATUS.ucLoginStatus">
            登录状态 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_STATUS.ucLedStatus">
            灯的状态 
        </member>
        <member name="T:OMCS.Communication.Basic.MW_UPDADE_FILE_CTX">
            远程升级结构体 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_UPDADE_FILE_CTX.stFileProperty">
            文件属性结构体 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_UPDADE_FILE_CTX.pData">
            升级文件的数据内容（拷贝数据时需要进行非托管内存拷贝处理） 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_UPDADE_FILE_CTX.uiDateSize">
            升级文件的数据大小 
        </member>
        <member name="T:OMCS.Communication.Basic.MW_DEVICE_ALL_ITEM_INFO">
            设备信息子项结构体 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_ALL_ITEM_INFO.PID">
            产品号 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_ALL_ITEM_INFO.SN">
            唯一序列号 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_ALL_ITEM_INFO.produce_date">
            生产时间 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_ALL_ITEM_INFO.all_capacity">
            总容量 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_ALL_ITEM_INFO.free_capacity">
            可用容量 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_ALL_ITEM_INFO.version">
            版本号 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_ALL_ITEM_INFO.update_code">
            升级码 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_ALL_ITEM_INFO.status">
            状态 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_ALL_ITEM_INFO.update_ctrl_code">
            升级控制码 
        </member>
        <member name="F:OMCS.Communication.Basic.MW_DEVICE_ALL_ITEM_INFO.reserved">
            保留 
        </member>
        <member name="T:OMCS.Communication.Basic.AgileIPE">
            <summary>
            可xml配置的IPEndPoint。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.VersionType">
            <summary>
            版本类型。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.VersionType.Free">
            <summary>
            免费版
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.VersionType.Professional">
            <summary>
            专业版
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.VersionType.Extended">
            <summary>
            扩展版
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.VersionType.Enterprise">
            <summary>
            企业版
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.ActionTypeOnChannelIsBusy">
            <summary>
            当通道繁忙时，发送数据所采取的操作。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ActionTypeOnChannelIsBusy.Continue">
            <summary>
            继续发送（排队）。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ActionTypeOnChannelIsBusy.Discard">
            <summary>
            丢弃消息
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.ClientType">
            <summary>
            客户端设备的类型。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.ClientType.ServerSide">
            <summary>
            非客户端，而是服务端。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.AgileTcpClient">
            <summary>
            可xml配置的TcpClient。支持IPV6。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.AgileTcpClient.Port">
            <summary>
            Port 通信采用的本地端口，其值可能在GetNetworkStream方法中被修改。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.AgileTcpClient.LocalIPAddress">
            <summary>
            LocalIPAddress 从哪个IP发出TCP连接。如果不设置，则选用第一块网卡的地址(此时，其值在GetNetworkStream方法中被修改)
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.AgileTcpClient.SocketSendBuffSize">
            <summary>
            SocketSendBuffSize 网卡发送缓冲区大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.AgileTcpClient.SocketReceiveBuffSize">
            <summary>
            SockeetReceiveBuffSize 网卡接收缓冲区大小。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.AgileTcpClient.FillKeepAliveStruct(System.Int32,System.Int32,System.Int32)">
            <summary>
            FillKeepAliveStruct 得到Keep-Alive结构值
            </summary>
            <param name="onOff">是否启用Keep-Alive</param>
            <param name="keepAliveTimeInMSec">多长时间后开始第一次探测ms</param>
            <param name="keepAliveIntervalInMSec">探测时间间隔ms</param>
            <returns></returns>
        </member>
        <member name="T:OMCS.Communication.Basic.TcpClientWithTimeout">
            <summary>
            TcpClientWithTimeout 用来设置一个带连接超时功能的类
            使用者可以设置毫秒级的等待超时时间 (1000=1second)
            例如:
            TcpClient connection = new TcpClientWithTimeout('127.0.0.1',80,1000).Connect();
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.AsynOrderedExecutor`1">
            <summary>
            异步顺序执行器。使用Enqueue的调用线程来处理对象，保证处理的顺序为加入的顺序。
            </summary>    
        </member>
        <member name="M:OMCS.Communication.Basic.AsynOrderedExecutor`1.WaitOnFull">
            <summary>
            当队列中的消息数达到最大时，则一直阻塞。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.AsynOrderedExecutor`1.Enqueue(`0)">
            <summary>
            将消息放入到队列中，等待处理。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Basic.NetworkHelper">
            <summary>
            网络基础功能帮助类。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.NetworkHelper.GetIPList">
            <summary>
            获取本地的IP地址列表。根据EnableIPv6属性决定返回的IP列表中是否包含IPv6地址。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.NetworkHelper.GetIPList(System.Net.Sockets.AddressFamily)">
            <summary>
            获取本地的IP地址列表。参数指定IPV4或IPV6
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.NetworkHelper.GetFirstIP">
            <summary>
            获取本地IP列表中的第一个IP地址。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.NetworkHelper.ReceiveData(System.IO.Stream,System.Int32)">
            <summary>
            ReceiveData 从网络读取指定长度的数据。当读取的字节数为0时，表示连接断开，并抛出IOException异常。
            </summary>	
        </member>
        <member name="M:OMCS.Communication.Basic.NetworkHelper.ReceiveData(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            ReceiveData 从网络读取指定长度的数据 ，存放在buff中offset处。当读取的字节数为0时，表示连接断开，并抛出IOException异常。
            </summary>	
        </member>
        <member name="M:OMCS.Communication.Basic.NetworkHelper.GetMinMTU">
            <summary>
            获取本机所有网卡的最小的MTU。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.NetworkHelper.IsIPAddress(System.String)">
            <summary>
            文本是否为IP地址。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Basic.PortListenerState">
            <summary>
            端口监听器的状态
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.PortListenerState.LastDetectTime">
            <summary>
            最后一次检测新TCP连接的时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.PortListenerState.IsListening">
            <summary>
            是否正在监听端口？
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.PortListenerState.IsAuthorized">
            <summary>
            是否授权？
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.PortListenerState.IsMaxConnection">
            <summary>
            已经到达最大连接数？
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.PortListenerState.ListenThreadRunning">
            <summary>
            监听线程是否运行中？
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.ServerConfiguration">
            <summary>
            服务器的基础配置信息。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IResponseManager">
            <summary>
            用于管理接收到的待提取的回复消息。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IResponseManager.PushResponse(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            将需要被提取的消息压入到管理器中，等待调用线程的提取。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IResponseManager.RegisterCallback(System.Int32,System.Int32,OMCS.Communication.Basic.Core.ResponseHandler,System.Object)">
            <summary>
            注册回复对应的回调函数。
            </summary>
            <param name="resMessageType">回复的消息类型</param>
            <param name="messageID">回复消息的ID</param>
            <param name="handler">回复处理器</param>
            <param name="state">状态数据</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IResponseManager.PickupResponse(System.Int32,System.Int32)">
            <summary>
            在TimeoutSec时间内不断的PopRespose，直到找到符合条件的消息，或者抛出超时异常。
            </summary>        
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IResponseManager.ResponseTTL">
            <summary>
            如果一个回复在管理器中存在的时间超过ResponseTTL，则会被删除。单位为s。
            如果ResponseTTL为0，则表示不进行生存期管理
            </summary>		
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IResponseManager.TimeoutSec">
            <summary>
            如果在TimeoutSec内，PickupResponse仍然接收不到期望的回复，则抛出异常。为0时，表示不设置超时
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.ResponseHandler">
            <summary>
            用于处理回复消息的方法委托。
            </summary>
            <param name="ee">如果为TimeoutException，表示超时没有回复。只有为null时，response参数才有效。</param>
            <param name="response">回复消息</param>
            <param name="state">状态数据</param>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.ResponseManager">
            <summary>
            IResponseManager的参考实现。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.ResponseManager.#ctor(System.Int32,System.Int32)">
            <summary>
            构造函数。
            </summary>
            <param name="responseTTL_Secs">如果一个回复在管理器中存在的时间超过ResponseTTL，则会被删除。单位为秒。如果ResponseTTL为0，则表示不进行生存期管理。</param>
            <param name="timeout_Sec">如果在TimeoutSec内，PickupResponse仍然接收不到期望的回复，则将抛出异常。单位为秒。为0时，表示不设置超时。一般设为30。</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.ResponseManager.Dispose">
            <summary>
            释放超时检测线程。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.ContractFormatStyle">
            <summary>
            协议的格式。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.ContractFormatStyle.Stream">
            <summary>
            流协议或称二进制协议。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.ContractFormatStyle.Text">
            <summary>
            文本协议，如基于xml的。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IContractHelper">
            <summary>
            与消息协议相关的决策。
            2005.10.07
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.NullBodyContract">
            <summary>
            NullBodyContract IContractHelper.CreateMessage方法泛型参数的占位符，表示没有消息体。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IMessage">
            <summary>
            在网络上传递的消息的基础接口。 注意，不要将一个消息分为多段发送，在多线程环境中，会导致片段交叉。   
            </summary>	
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessage.SourceAddress">
            <summary>
            消息的源地址。任何一个NetEngine都会保证，在接收完一条消息的时候，会为该字段正确地赋值。
            如果是服务器接收到来自客户端的消息，则该字段表示用户的地址；
            如果是客户端接收到来自服务器的消息，则该字段表示服务器的地址。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessage.Header">
            <summary>
            消息头。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessage.GetMessageLength">
            <summary>
            获取整个消息的长度。如果为文本消息，则为整个文本的长度；如果为流消息，则为消息转化为流之后流的长度。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessage.ToStream">
            <summary>
            将消息转化为字节流，以备发送或持久化。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IMessageHeader">
            <summary>
            消息头接口，规定了消息头中至少包含的信息：发送者、接收者、消息类型、消息ID。
            zhuweisky 2005.12.07 
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessageHeader.UserID">
            <summary>
            发出本消息的用户编号。注意，普通用户编号只能由数字和字母组成，并且其最大长度会由IMessageHeader的实现类给出具体规定。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessageHeader.DestUserID">
            <summary>
            接收消息的目标用户编号。注意，普通用户编号只能由数字和字母组成，并且其最大长度会由IMessageHeader的实现类给出具体规定。		
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessageHeader.MessageType">
            <summary>
            消息的类型。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessageHeader.MessageID">
            <summary>
            每个消息实例的唯一标志（也可用于将功能请求与其回复一一对应起来）
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IStringEncoder">
            <summary>
            字符串编解码器接口。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IStringEncoder.GetStrFromStream(System.Byte[],System.Int32,System.Int32)">
            <summary>
            将字节流解码为字符串。
            </summary>     
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IStringEncoder.GetBytesFromStr(System.String)">
            <summary>
            对字符串进行编码返回字节数组。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Basic.Core.DefaultStringEncoder">
            <summary>
            OMCS.Communication.Basic内置提供的默认的字符串编解码器，采用UTF-8对字符串进行编解码。Singleton模式。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IMessageDispatcher">
            <summary>
            消息分派器，核心的消息组件，通过MessagePipe聚合了MessageFilter、MessageSpy。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessageDispatcher.DispatchMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            分派并处理消息。该方法不允许抛出异常！内部异常信息可记录到日志！
            </summary>		
        </member>
        <member name="T:OMCS.Communication.Basic.Core.INakeDispatcher">
            <summary>
            内层分派器，消息到达INakeDispatcher内部，就不再与Spy或Hook相关。
            zhuweisky 2006.05.25
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.INakeDispatcher.DispatchMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            在最内部分配消息给最终的消息处理器去处理，并返回处理的结果。
            </summary>     
        </member>
        <member name="T:OMCS.Communication.Basic.Core.MessageDispatcher">
            <summary>
            IMessageDispatcher接口的默认实现。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.NakeDispatcher">
            <summary>
            INakeDispatcher接口的默认实现。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.INetworkEngine">
            <summary>
            所有网络引擎（包括服务端引擎、客户端引擎、TCP引擎、UDP引擎、二进制引擎、文本引擎）的基础接口。    
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.ProtocolType">
            <summary>            
            传输层协议类型，TCP或UDP
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.ContractFormatStyle">
            <summary>
            引擎所采用的协议类型（二进制、文本）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.CreateTime">
            <summary>
            引擎实例的创建时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.Port">
            <summary>
            表示要监听本地的哪个端口。如果设定其值小于等于0，则表示由系统自动分配。      
            注意，引擎初始化完成后，不能再修改该属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.IPAddress">
            <summary>
            对于服务端引擎，表示要绑定本地的哪个IP，如果设为null，则表示绑定本地所有IP。
            对于客户端引擎，表示要绑定本地的哪个IP与服务器进行通信。如果设为null（其值会在初始化完成后被修改，断线重连后也可能改变），则自动选择地址列表中的某一个。
            注意，引擎初始化完成后，不能再修改该属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.EsfLogger">
            <summary>
            OMCS.Communication.Basic 规定的标准的日志记录器。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.SocketSendBuffSize">
            <summary>
            Socket(网卡)发送缓冲区的大小。默认为64K。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.SocketReceiveBuffSize">
            <summary>
            Socket(网卡)接收缓冲区的大小。默认为64K。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.MaxMessageSize">
            <summary>
            网络引擎能够接收的最大的消息尺寸。据此网络引擎可以为每个Session/Connection开辟适当大小的接收缓冲区。
            默认为1k。当接收到的消息尺寸超过MaxMessageSize时，将会关闭对应的连接（对TCP）或丢弃数据（对UDP）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.MessageDispatcher">
            <summary>
            消息分派器。网络引擎将调用它来分派接收到的消息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.ContractHelper">
            <summary>
            依据ContractFormatStyle属性，注入相应的ContractHelper。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.Disposed">
            <summary>
            引擎实例是否已经被释放。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.INetworkEngine.UncompletedSendingCount4Busy">
            <summary>
            当通道上尚未发送完成的消息个数大于该值时，判定通道为繁忙（配合发送方法的ActionTypeOnChannelIsBusy参数使用）？默认值为：0。（小于0，表示始终判定为不繁忙）
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.INetworkEngine.Initialize">
            <summary>
            初始化并启动网络引擎。如果修改了引擎配置参数，在应用新参数之前必须先重新调用该方法初始化引擎。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.INetworkEngine.DisposeAsyn">
            <summary>
            当不再使用当前引擎实例时，释放它。（异步方式）
            注意：对于UDP或客户端引擎，如果消息是同步处理的，请不要在消息处理器中调用Dispose方法，否则，会导致死锁。因为停止引擎要等到最后一条消息处理完毕才会返回。
            可以转向调用异步的DisposeAsyn方法。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Core.INetworkEngine.EngineDisposed">
            <summary>
            当引擎实例被释放时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Core.INetworkEngine.MessageReceived">
            <summary>
            接收到一个完整的消息时触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Core.INetworkEngine.MessageSent">
            <summary>
            将消息成功发送之后触发该事件
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Core.INetworkEngine.InvalidMessageReceived">
            <summary>
            当接收到不完整或无法解析的数据时触发该事件
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.ProtocolType">
            <summary>
            传输层协议类型。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.MessageInvalidType">
            <summary>
            接收到的无效的消息分类。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.MessageInvalidType.Valid">
            <summary>
            正常消息。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.MessageInvalidType.MessageSizeOverflow">
            <summary>
            消息尺寸溢出。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.MessageInvalidType.InvalidHeader">
            <summary>
            无效的消息头
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.MessageInvalidType.InvalidToken">
            <summary>
            无效的标识符
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.MessageInvalidType.DataLacked">
            <summary>
            数据包长度不够
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.MessageInvalidType.InvalidClientType">
            <summary>
            无效的客户端类型
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IMessagePipe">
            <summary>
            消息管道，由Filter和Spy组合而成，将多个MessageFilter和MessageSpy组合成一个有序的管道。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessagePipe.GatewayMessageSpy">
            <summary>
            工作于网关层，网络组件收到的消息需要经过的第一个组件就是GatewayMessageSpy，
            发送的消息在到达网络组件前经过的最后一个组件也是GatewayMessageSpy
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Core.IMessagePipe.InnerMessageSpy">
            <summary>
            接收的消息到达处理器之前经过的最后一个组件就是InnerMessageSpy，
            处理器返回的结果消息经过的第一个组件也是InnerMessageSpy
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessagePipe.PipeOutMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            消息在发送之前经过管道处理。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessagePipe.PipeInMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            接收到的消息在被NakeDispatcher分派之前经过管道处理。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Core.IMessagePipe.MessageForbidden">
            <summary>
            当消息在Pipe中传递被Pipe丢弃时，触发此事件。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.EmptyMessagePipe">
            <summary>
            对消息不做任何处理/监控的消息管道。NullObject模式。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.MessagePipe">
            <summary>
            IMessagePipe接口的默认实现。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IMessageProcesser">
            <summary>
            消息处理器基础接口。
            2005.07.12
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessageProcesser.CanProcess(System.Int32)">
            <summary>
            该消息处理器是否能够处理类型为messageType的消息。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessageProcesser.ProcessMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            处理消息并返回回复消息，如果返回null，表示没有回复消息。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IProcesserFactory">
            <summary>
            请求处理器工厂，根据请求的类型创建对应的处理器 。
            2005.07.12
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IProcesserFactory.CreateProcesser(System.Int32)">
            <summary>
            根据消息的类型创建对应的处理器 。
            </summary>
            <param name="messageType">消息的类型</param>       
        </member>
        <member name="T:OMCS.Communication.Basic.Core.ProcesserFactory">
            <summary>
            IProcesserFactory接口的默认实现，用于挂接多个消息处理器，然后根据要处理的消息类型返回正确的处理器。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.ContainerStyleMessageSpy">
            <summary>
            用于将多个InnerMessageSpy实例包装成一个整体，且也实现了IInnerMessageSpy接口。ContainerStyle模式。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IMessageSpy">
            <summary>
            用于监控所有的请求/回复消息(例如，可以记录最新接收到的N条消息)。
            (1)IMessageSpy与IMessageFilter的区别在于，IMessageSpy不修改消息，而IMessageFilter可能修改消息（如加密/解密）
            (2)IMessageSpy的SpyMessageReceived/SpyMessageToBeSent方法可以丢弃收到的某些消息
            zhuweisky 2006.05.17
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessageSpy.SpyMessageReceived(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            监控所有收到的消息，如请求消息，返回false表明丢弃消息。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessageSpy.SpyMessageToBeSent(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            监控所有即将发送的消息，如回复消息，返回false表明丢弃消息。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Basic.Core.EmptyMessageSpy">
            <summary>
            不对消息做任何监控的MessageSpy。NullObject模式。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.BaseMessageTransformer">
            <summary>
            消息变换器的基类。使得可以配置要捕获哪些类型消息或不捕获哪些类型的消息。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.BaseMessageTransformer.MessageCapturedStyle">
            <summary>
            消息捕获的模式。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.BaseMessageTransformer.MessageCapturedStyle.Default">
            <summary>
            默认截获所有消息。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.BaseMessageTransformer.MessageCapturedStyle.CapturedList">
            <summary>
            配置的列表为捕获列表，只捕获列表中列出的消息类型。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Core.BaseMessageTransformer.MessageCapturedStyle.NotCapturedList">
            <summary>
            配置的列表为不捕获列表，只捕获列表中没有列出的消息类型。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.ContainerStyleTransformer">
            <summary>
            封装多个IMessageTransformer实例，将多个Transformer当作一个整体，并且此整体也实现了IMessageTransformer接口。ContainerStyle模式。
            </summary>	
        </member>
        <member name="T:OMCS.Communication.Basic.Core.IMessageTransformer">
            <summary>
            消息变换器。用于对请求消息和回复消息进行截获,然后处理转换这些消息，比如加密/解密、记录、追踪等。
            将接收到的消息交给CaptureReceivedMessage处理，将要发送的消息交给CaptureBeforeSendMessage处理即可。
            zhuweisky 2005.12.28
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessageTransformer.CaptureBeforeSendMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            截获即将发出去的消息，可以对截获到的消息进行转换，比如加密、压缩等。
            </summary>
            <param name="msg">即将发送的消息</param>
            <returns>经过截获转换得到的结果</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Core.IMessageTransformer.CaptureReceivedMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            截获收到的消息，可以对截获到的消息进行转换，比如解密、解压缩等。
            </summary>      
            <param name="msg">从网络接收到的消息</param>
            <returns>经过截获转换得到的结果</returns>
        </member>
        <member name="T:OMCS.Communication.Basic.Core.EmptyMessageTransformer">
            <summary>
            不对消息做任何处理的MessageTransformer。NullObject模式。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.ContractStyle.Stream.BaseSerializeContract">
            <summary>
            如果流协议Body采用.NET二进制序列化的方式与网络流相互转换，则Body的Contract可使用此作为基类。
            具体的协议主体类，只需要添加协议成员即可。
            在大多数情况下，可以被ESBasic.Serialization.CompactPropertySerializer取代。
            注意：使用.NET二进制序列化会对加密的Contract的dll有限制，各个通信端必须使用同一个加密的dll，否则将可能导致反序列化失败。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.ContractStyle.Stream.BaseSerializeContract.ParseBodyContract``1(OMCS.Communication.Basic.Engine.ContractStyle.Stream.StreamMessage)">
            <summary>
            将NetMessage的Body部分使用二进制反序列化为IContract对象
            注意：目标Contract必须是通过二进制反序列化实现的ToStream方法
            </summary>		
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamContractHelper">
            <summary>
            与二进制协议相关的决策。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamContractHelper.MessageStartToken">
            <summary>
            消息头中的起始标志，用于验证IMessageHeader.StartToken是否正确。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamContractHelper.MessageHeaderLength">
            <summary>
            消息头的长度
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamContractHelper.ParseMessageHeader(System.Byte[],System.Int32)">
            <summary>
            将字节流解析为消息头。如果消息头非法，则返回null。
            确保此方法不会抛出异常。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamContractHelper.ParseMessage(System.Byte[],System.Int32)">
            <summary>
            将字节流解析为消息。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamMessageHeader">
            <summary>
            采用二进制协议进行通信时的消息头接口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamMessageHeader.StartToken">
            <summary>
            消息的起始标志。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamMessageHeader.HeaderLength">
            <summary>
            消息头的长度，对于二进制协议来说，消息头的长度是一个固定值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamMessageHeader.MessageBodyLength">
            <summary>
            本消息中消息体的长度。
            </summary>  
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamMessageHeader.ToStream">
            <summary>
            将消息头转化为字节数组。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.ContractStyle.Stream.IStreamMessageHeader.ToStream(System.Byte[],System.Int32)">
            <summary>
            将消息头转化为字节数组并填充到buff中。
            </summary>
            <param name="buff">被填充的缓冲区</param>
            <param name="offset">从缓冲区的偏移位置开始填充</param>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.ContractStyle.Stream.StreamMessage">
            <summary>
            基于二进制的消息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Stream.StreamMessage.Body">
            <summary>
            如果不为null，则其DataBuffer.Length值必须与streamMessageHeader.MessageBodyLength相等。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.ContractStyle.Text.ITextContractHelper">
            <summary>
            用于基于文本消息的协议决策。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Text.ITextContractHelper.EndToken">
            <summary>
            消息的结束标识符（经过编码后得到的字节数组）。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.ContractStyle.Text.ITextContractHelper.ParseMessageHeader(System.String)">
            <summary>
            解析消息头。如果消息头非法，请返回null。
            确保此方法不会抛出异常。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.ContractStyle.Text.ITextContractHelper.IsRightFormatMessage(System.String)">
            <summary>
            验证消息的起始符和结束符是否正确。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.ContractStyle.Text.TextMessage">
            <summary>
            基于文本的消息。TextMessage.Content属性的值即是整个消息内容。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.ContractStyle.Text.TextMessage.Content">
            <summary>
            文本消息的所有内容
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.NetworkEngineFactory">
            <summary>
            网络引擎工厂。用于创建各种类型的网络引擎实例。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine">
            <summary>
            客户端TCP引擎。 封装了数据接收线程，完全向客户端隐藏了网络通信细节。
            Client所有的通过网络发送/接收数据都通过ITcpPassiveEngine进行。
            zhuweisky 2006.01.12
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.ConnectionInterrupted">
            <summary>
            当客户端与服务器的TCP连接断开时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.ConnectionRebuildStart">
            <summary>
            自动重连开始时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.ConnectionRebuildSucceed">
            <summary>
            自动重连成功后，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.ConnectionRebuildFailure">
            <summary>
            自动重连超过最大重试次数时，表明重连失败，将触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.Sock5ProxyInfo">
            <summary>
            Sock5代理服务器信息。如果不需要代理，则设置为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.Connected">
            <summary>
            当前是否处于连接状态。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.ConnectionVerified">
            <summary>
            连接已验证（如登录通过）？如果未连接，则直接返回false；每次连接断开后，也将设置为false。当通过验证后，请调用VerifyConnectionSucceed方法。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.AutoReconnect">
            <summary>
            当与服务器断开连接时，是否自动重连。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.WriteTimeoutInMSecs">
            <summary>
            给每个连接发送数据超时时间（默认为-1，无限）。如果在指定的时间内未将数据发送完（即数据还未提交到Socket缓冲区），则将记录异常到日志，并关闭对应的连接。
            该属性只对同步模式发送数据有效，异步发送数据则无法设定超时时间。
            最好给该属性赋一个有限值，因为在某些情况下，发送数据可能会导致无限阻塞。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.FirstCallbackOnConnectionRebuildSucceed">
            <summary>
            重连成功后，第一个调用的方法。在触发ConnectionRebuildSucceed事件之前。可以通过注入该属性，确保重连成功后发送的第一个消息的类型。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.CloseConnection(System.Boolean)">
            <summary>
            主动关闭与服务器的连接。如果AutoReconnect为true，将引发自动重连。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.Reconnect(System.Int32)">
            <summary>
            手动重连。如果当前处于连接状态，则直接返回。
            </summary>        
            <param name="retrySpanInMSecs">重试间隔时间，毫秒</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Passive.ITcpPassiveEngine.VerifyConnectionSucceed">
            <summary>
            当连接通过验证（比如登录成功）后，调用该方法将连接设置为已验证状态。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine">
            <summary>
            客户端的Tcp引擎，通过ContractFormatStyle属性指定采用的协议类型。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine.MaxMessageSize">
            <summary>
            ReceiveBuffSize 应用程序开辟的接收缓冲区的大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine.ContractHelper">
            <summary>
            ContractHelper 依据ContractFormatStyle属性，注入相应的ContractHelper
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine.WriteTimeoutInMSecs">
            <summary>
            给每个连接发送数据超时时间（默认为-1，无限）。如果在指定的时间内未将数据发送完（即数据还未提交到Socket缓冲区），则将记录异常到日志，并关闭对应的连接。
            该属性只对同步模式发送数据有效，异步发送数据则无法设定超时时间。
            最好给该属性赋一个有限值，因为在某些情况下，发送数据可能会导致无限阻塞。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine.Sock5ProxyInfo">
            <summary>
            Sock5代理服务器信息
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine.IPAddress">
            <summary>
            绑定当前哪个IP地址。如果为null，则自动选择地址列表中的第一个。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine.FirstCallbackOnConnectionRebuildSucceed">
            <summary>
            重连成功后，第一个调用的方法。在触发ConnectionRebuildSucceed事件之前。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Passive.PassiveBaseTcpEngine.CloseConnection(System.Boolean)">
            <summary>
            主动关闭与服务器的连接。如果AutoReconnect为true，将引发自动重连。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Passive.Sock5ProxyInfo">
            <summary>
            Sock5代理服务器的信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.Sock5ProxyInfo.ProxyServerIP">
            <summary>
            代理服务器IP
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.Sock5ProxyInfo.ProxyServerPort">
            <summary>
            代理服务器端口
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.Sock5ProxyInfo.UserName">
            <summary>
            登陆代理服务器的用户名。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Passive.Sock5ProxyInfo.Password">
            <summary>
            登陆代理服务器的密码。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine">
            <summary>
            tcp服务端引擎基础组件。  
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.MessageVerifier">
            <summary>
            如果不需要验证连接上收到的消息，则设为null即可。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.SocketSendBuffSize">
            <summary>
            SocketSendBuffSize 网卡发送缓冲区大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.SocketReceiveBuffSize">
            <summary>
            SockeetReceiveBuffSize 网卡接收缓冲区大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.WriteTimeoutInMSecs">
            <summary>
            给每个连接发送数据超时时间（默认为-1，无限）。如果在指定的时间内未将数据发送完，则将记录异常到日志，并关闭对应的连接。
            该属性只对同步模式发送数据有效，异步发送数据则无法设定超时时间。
            最好给该属性赋一个有限值，因为在某些情况下，发送数据可能会导致无限阻塞。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.AsynMessageQueueEnabled">
            <summary>
            是否开启异步消息队列。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.MaxChannelCacheSize">
            <summary>
            每个通道连接上允许最大的等待发送【包括投递】以及正在发送的消息个数。
            当等待发送以及正在发送的消息个数超过该值时，将关闭对应的连接。如果设置为0，则表示不作限制。默认值为0。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.AsynConnectionEvent">
            <summary>
            异步引发连接成功的事件。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.PostMessageToClient(System.Net.IPEndPoint,OMCS.Communication.Basic.Core.IMessage,System.String,System.Int32,System.Boolean)">
            <summary>
            实现有依赖关系的可丢弃的消息发送。
            （1）如果等待发送的消息个数大于discardPostingCount时，则丢弃当前消息。
            （2）当前数据是否依赖上一次发送的数据。如果依赖，当上一次数据被丢弃时，则直接丢弃当前消息。
            token4RecordPosting - ( {sourceUserID#userID} - lastDiscarded)
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.DisposeUser(OMCS.Communication.Basic.Engine.Tcp.Server.IContextKey,OMCS.Communication.Basic.Server.DisconnectedType)">
            <summary>
            对于一个连接来说，可以保证SomeOneDisconnected事件只触发一次
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.CloseOneConnection(System.Net.IPEndPoint,OMCS.Communication.Basic.Server.DisconnectedType)">
            <summary>
            对于一个连接来说，只触发一次SomeOneDisconnected事件
            </summary>   
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.UseIpeAsUserID">
            <summary>
            是否使用客户端的IPE作为其UserID。默认值为false。通常，当客户端发过来的消息头中不包含UserID信息，将其设为true。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.BaseTcpEngine.HandleCrossServerMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            处理ACMS转发过来的跨服消息（消息的接收者是服务端）。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.BaseContextKey.MessageReceived">
            <summary>
            MessageReceived 用于验证是否为第一个消息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseContextKey.NetStreamDisposed">
            <summary>
            NetStreamDisposed tcp连接是否已经被释放。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseContextKey.UserAddress">
            <summary>
            UserAddress 当前连接的客户的IP地址信息
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.BaseContextKey.UserID">
            <summary>
            当前连接对应的UserID。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.ContextKeyManager">
            <summary>
            用于管理所有的ContextKey ,ContextKeyManager中的所有成员方法都是线程安全的。
            zhuweisky 
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ContextKeyManager.ExpiredSpanInSecs">
            <summary>
            ExpiredSpanInSecs 某个连接建立后，如果在ExpiredSpanInSecs时间内还未登录成功（ConnectionBoundState.Bound），则将触发ContextExpired事件。
            如果ExpiredSpanInSecs小于等于0，则不做过期检查。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.IContextKey">
            <summary>
            用于封装一个TCP连接的相关信息。一个IContextKey实例与一个Tcp连接对应。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.IContextKey.UserID">
            <summary>
            当前连接对应的UserID。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.IContextKey.BeforeSend(System.Byte[])">
            <summary>
            用于 WebSocketEngine。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.ConnectionBoundState">
            <summary>
            连接与用户帐号的绑定状态
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Tcp.Server.ConnectionBoundState.NotBound">
            <summary>
            连接建立时的状态，还未与UserID绑定。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Tcp.Server.ConnectionBoundState.Bound">
            <summary>
            连接已与用户ID绑定
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Tcp.Server.ConnectionBoundState.Invalid">
            <summary>
            连接已经失效，即将被释放。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.StreamContextKey">
            <summary>
            针对二进制协议，用于封装一个TCP连接的相关信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.StreamContextKey.HeaderBuffer">
            <summary>
            Buffer 用于接收消息头的缓冲区。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey">
            <summary>
            针对文本协议，用于封装一个TCP连接的相关信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey.Buffer">
            <summary>
            Buffer 当前连接所使用的的接收缓冲区。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey.OffsetForReceive">
            <summary>
            OffsetForReceive 从当前连接所使用的接收缓冲区的哪个偏移位置开始继续接收新来的字节。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey.MaxSizeForReceive">
            <summary>
            MaxSizeForReceive 当前连接所使用的接收缓冲区最多还可以接纳多少字节的数据。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey.JustReadBytes(System.Int32)">
            <summary>
            JustReadBytes 当一次数据接收完毕时，通知ContextKey本次接收了多少字节。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey.GetNextRoundedMessage2">
            <summary>
            从当前缓冲区中提取一条完整的消息。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey.IsBufferFull">
            <summary>
            IsBufferFull 当前连接所使用的的接收缓冲区是否已经没有空位接收新的数据了。（这通常在接收缓冲区的尺寸比最大消息的尺寸要小所导致）
            </summary>
            <returns></returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKey.Reset">
            <summary>
            Reset 将接收新数据的偏移重置到接收缓冲区的起始处。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.TextContextKeyParameters.EndToken">
            <summary>
            消息结束标志经过编码后得到的字节数组，
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.IMessageVerifier">
            <summary>
            消息验证器，用于验证每个TCP连接上接收到消息。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.IMessageVerifier.VerifyMessage(System.Net.IPEndPoint,OMCS.Communication.Basic.Engine.Tcp.Server.ConnectionBoundState,OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            验证每个TCP连接上接收到消息。如果通不过验证，服务端TCP引擎将会关闭对应的连接。
            </summary>
            <param name="message">将被验证的消息</param>
            <param name="address">TCP连接的客户端地址</param>
            <param name="state">TCP连接的状态</param>
            <returns>验证是否通过</returns>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine">
            <summary>
            TCP服务端引擎。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.MessageVerifier">
            <summary>
            服务端引擎会使用MessageVerifier来验证从每个连接上接收到的消息。如果通不过验证，引擎将会关闭对应的连接。
            如果不需要验证连接上收到的消息，则设为null即可。
            （1）通常我们可以验证处于ConnectionBoundState.NotBound状态的连接上收到的所有消息的类型，如果不是期望的，则关闭对应的连接。
            （2）对于大多数应用，前面的几个消息通常是尝试登陆消息（包含了登陆密码），如果有的应用需要在客户端登陆失败时，立即关闭其对应的连接，则可以利用该机制 -- 即在IMessageVerifier的实现中，解析登录消息，并验证登陆密码。
            （3）登录通过之后，可以调用BindIPE方法，使连接进入已绑定状态。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.ExpiredSpanInSecs">
            <summary>
            某个连接连上后，如果在ExpiredSpanInSecs时间内还未登录成功，则将关闭该连接。
            如果ExpiredSpanInSecs小于等于0，则不做过期检查。默认值为15。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.ConnectionCount">
            <summary>
            当前在线连接的数量。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.AsynConnectionEvent">
            <summary>
            异步引发连接成功的事件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.MaxConnectionCount">
            <summary>
            服务器允许最大的同时连接数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.WriteTimeoutInMSecs">
            <summary>
            给每个连接发送数据超时时间（默认为-1，无限）。如果在指定的时间内未将数据发送完，则将记录异常到日志，并关闭对应的连接。
            该属性只对同步模式发送数据有效，异步发送数据则无法设定超时时间。
            最好给该属性赋一个有限值，因为在某些情况下，发送数据可能会导致无限阻塞。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.AsynMessageQueueEnabled">
            <summary>
            是否开启异步消息队列。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.MaxChannelCacheSize">
            <summary>
            每个通道连接上允许最大的等待发送【包括投递】以及正在发送的消息个数。
            当等待发送以及正在发送的消息个数超过该值时，将关闭对应的连接。如果设置为0，则表示不作限制。默认值为0。
            【该设置用于防止服务器为速度慢的通道缓存太多的消息，而导致服务器内存无限制增长】
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.UseIpeAsUserID">
            <summary>
            是否使用客户端的IPE作为其UserID。默认值为false。通常，当客户端发过来的消息头中不包含UserID信息，将其设为true。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.IsListening">
            <summary>
            监听器是否开启。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.IPv6Enabled">
            <summary>
            是否开启对IPv6的支持。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.IsInPlatform">
            <summary>
            【跨服】当前服务端是否作为AS节点位于群集平台中？默认值：false。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.CloseOneConnection(System.Net.IPEndPoint,OMCS.Communication.Basic.Server.DisconnectedType)">
            <summary>
            主动关闭连接，将触发SomeOneDisconnected事件。
            </summary>     
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.CloseAllConnection">
            <summary>
            关闭所有连接。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.InvalidateConnection(System.Net.IPEndPoint)">
            <summary>
            使连接失效。如果再收到该连接上的后续消息时，则自动断开连接。（比如，用于被挤掉线）
            </summary>
            <param name="address">目标连接的客户端地址</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.BindConnection(System.Net.IPEndPoint,System.String)">
            <summary>
            将UserID与对应的连接绑定起来。(比如，通过登录验证后，才将其绑定)
            </summary>
            <param name="address">要绑定的连接的客户端地址。</param>
            <param name="userID">要绑定的用户帐号</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.GetConnectionBoundState(System.Net.IPEndPoint)">
            <summary>
            获取连接的绑定状态。
            </summary>
            <param name="address">目标连接的客户端地址。</param>
            <returns>如果目标连接不存在，则返回null。</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.GetAddressList">
            <summary>
            获取所有在线连接的客户端的地址。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.GetPortListenerState">
            <summary>
            获取监听器的状态。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.HandleCrossServerMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            【跨服】处理ACMS转发过来的跨服消息（消息的接收者是服务端）。
            </summary>   
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.ConnectionBound">
            <summary>
            当连接与具体的UserID绑定起来时（表明已经通过验证），触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.SomeOneDisconnected">
            <summary>
            当某连接断开或者从该连接上接收非法/无效的消息时，触发该事件
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.SomeOneConnected">
            <summary>
            当tcp连接建立成功时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.ConnectionCountChanged">
            <summary>
            当tcp连接数量发生变化时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.MessageReceived2">
            <summary>
            当引擎接收到消息时触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Tcp.Server.ITcpServerEngine.CrossServerMessageReceived">
            <summary>
            【跨服】当收到要被其它AS服务器处理的消息时，触发此事件。只有当IsInPlatform时，才会检查跨服消息。
             2021.06.22
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.StreamTcpEngine">
            <summary>
            基于流协议的TCP服务端引擎。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.TextTcpEngine">
            <summary>
            基于文本的TCP服务端引擎。    
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrameHeader">
            <summary>
            WebSocket 数据帧头。（2个字节）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrameHeader.FIN">
            <summary>
            FIN
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrameHeader.RSV1">
            <summary>
            RSV1
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrameHeader.RSV2">
            <summary>
            RSV2
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrameHeader.RSV3">
            <summary>
            RSV3
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrameHeader.OpCode">
            <summary>
            OpCode
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrameHeader.HasMask">
            <summary>
            是否有掩码
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrameHeader.Length">
            <summary>
            Payload Length
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrameHeader.#ctor(System.Byte[])">
            <summary>
            构造函数
            </summary>
            <remarks>主要用于解析接收数据</remarks>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrameHeader.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.SByte,System.Boolean,System.Int32)">
            <summary>
            构造函数
            </summary>
            <remarks>主要用于发送封装数据</remarks>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrameHeader.GetBytes">
            <summary>
            返回帧头字节
            </summary>
            <returns></returns>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrame">
            <summary>
            WebSocket 数据帧
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrame.Parse(System.Byte[],System.Int32,System.Int32@)">
            <summary>
            构造函数
            </summary>
            <remarks>主要用于解析接收数据</remarks>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrame.Mask(System.Byte[],System.Byte[])">
            <summary>
            加掩码运算
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrame.#ctor(System.Byte[],System.Boolean)">
            <summary>
            构造函数
            </summary>
            <remarks>主要用于发送封装数据</remarks>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrame.ToStream">
            <summary>
            获取适合传送的字节数据
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.Web.DataFrame.Content">
            <summary>
            获取真正的内容数据。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.Web.Handshake">
            <summary>
            WebSokect 握手协议。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.Web.Handshake.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="request">请求串</param>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.Web.Handshake.KeyAccept">
            <summary>
            返回的验证码
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.Web.Handshake.GetValue(System.String)">
            <summary>
            根据键获取对应值
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.Web.Handshake.Response">
            <summary>
            响应串
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.Server.WebSocketEngine">
            <summary>
            兼容WebSocket（支持wss）的TCP服务端二进制引擎。    
            </summary>>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.WebSocketContextKey.IsWebClient">
            <summary>
            客户端是否为WebSocket。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.WebSocketContextKey.Buffer">
            <summary>
            Buffer 当前连接所使用的的接收缓冲区。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.WebSocketContextKey.OffsetForReceive">
            <summary>
            OffsetForReceive 从当前连接所使用的接收缓冲区的哪个偏移位置开始继续接收新来的字节。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.Server.WebSocketContextKey.MaxSizeForReceive">
            <summary>
            当前连接所使用的接收缓冲区最多还可以接纳多少字节的数据。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.WebSocketContextKey.JustReadBytes(System.Int32)">
            <summary>
            JustReadBytes 当一次数据接收完毕时，通知ContextKey本次接收了多少字节。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.WebSocketContextKey.IsBufferFull">
            <summary>
            IsBufferFull 当前连接所使用的的接收缓冲区是否已经没有空位接收新的数据了。（这通常在接收缓冲区的尺寸比最大消息的尺寸要小所导致）
            </summary>
            <returns></returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.Server.WebSocketContextKey.Reset">
            <summary>
            Reset 将接收新数据的偏移重置到接收缓冲区的起始处。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.StriveServer.BaseTcpEngine">
            <summary>
            tcp服务端引擎基础组件。  
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.StriveServer.BaseTcpEngine.SocketSendBuffSize">
            <summary>
            SocketSendBuffSize 网卡发送缓冲区大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.StriveServer.BaseTcpEngine.SocketReceiveBuffSize">
            <summary>
            SockeetReceiveBuffSize 网卡接收缓冲区大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.StriveServer.BaseTcpEngine.WriteTimeoutInMSecs">
            <summary>
            给每个连接发送数据超时时间（默认为-1，无限）。如果在指定的时间内未将数据发送完，则将记录异常到日志，并关闭对应的连接。
            该属性只对同步模式发送数据有效，异步发送数据则无法设定超时时间。
            最好给该属性赋一个有限值，因为在某些情况下，发送数据可能会导致无限阻塞。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.StriveServer.BaseTcpEngine.AsynMessageQueueEnabled">
            <summary>
            是否开启异步消息队列。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.StriveServer.BaseTcpEngine.MaxChannelCacheSize">
            <summary>
            每个通道连接上允许最大的等待发送【包括投递】以及正在发送的消息个数。
            当等待发送以及正在发送的消息个数超过该值时，将关闭对应的连接。如果设置为0，则表示不作限制。默认值为0。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.StriveServer.BaseTcpEngine.DisposeUser(OMCS.Communication.Basic.Engine.Tcp.StriveServer.IContextKey)">
            <summary>
            对于一个连接来说，可以保证ClientDisconnected事件只触发一次
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.StriveServer.BaseTcpEngine.CloseClient(System.Net.IPEndPoint)">
            <summary>
            对于一个连接来说，只触发一次ClientDisconnected事件
            </summary>   
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.StriveServer.ContextKeyManager">
            <summary>
            用于管理所有的ContextKey ,ContextKeyManager中的所有成员方法都是线程安全的。
            zhuweisky 
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.StriveServer.IContextKey">
            <summary>
            用于封装一个TCP连接的相关信息。一个IContextKey实例与一个Tcp连接对应。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.StriveServer.BaseContextKey.NetStreamDisposed">
            <summary>
            NetStreamDisposed tcp连接是否已经被释放。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.StriveServer.BaseContextKey.UserAddress">
            <summary>
            UserAddress 当前连接的客户的IP地址信息
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.StriveServer.StreamContextKey">
            <summary>
            针对二进制协议，用于封装一个TCP连接的相关信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.StriveServer.StreamContextKey.HeaderBuffer">
            <summary>
            Buffer 用于接收消息头的缓冲区。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.StriveServer.TextContextKey">
            <summary>
            针对文本协议，用于封装一个TCP连接的相关信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.StriveServer.TextContextKey.Buffer">
            <summary>
            Buffer 当前连接所使用的的接收缓冲区。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.StriveServer.TextContextKey.OffsetForReceive">
            <summary>
            OffsetForReceive 从当前连接所使用的接收缓冲区的哪个偏移位置开始继续接收新来的字节。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.StriveServer.TextContextKey.IsWebClient">
            <summary>
            客户端是否为WebSocket。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.StriveServer.TextContextKey.MaxSizeForReceive">
            <summary>
            MaxSizeForReceive 当前连接所使用的接收缓冲区最多还可以接纳多少字节的数据。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.StriveServer.TextContextKey.JustReadBytes(System.Int32)">
            <summary>
            JustReadBytes 当一次数据接收完毕时，通知ContextKey本次接收了多少字节。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.StriveServer.TextContextKey.IsBufferFull">
            <summary>
            IsBufferFull 当前连接所使用的的接收缓冲区是否已经没有空位接收新的数据了。（这通常在接收缓冲区的尺寸比最大消息的尺寸要小所导致）
            </summary>
            <returns></returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.StriveServer.TextContextKey.Reset">
            <summary>
            Reset 将接收新数据的偏移重置到接收缓冲区的起始处。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.StriveServer.TextContextKeyParameters.EndTokens">
            <summary>
            消息结束标志经过编码后得到的字节数组，
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.StriveServer.GenericKMP">
            <summary>
            泛型KMP算法。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.StriveServer.GenericKMP.Next``1(``0[])">
            <summary>
            Next函数。之所以将Next函数暴露为public，是为了在外部可以缓存回溯函数，以供多次使用。 
            </summary>
            <param name="pattern">模式串</param>
            <returns>回溯函数</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.StriveServer.GenericKMP.ExecuteKMP``1(``0[],``0[])">
            <summary>
            KMP计算
            </summary>
            <param name="source">主串</param>       
            <param name="pattern">模式串</param>
            <returns>匹配的第一个元素的索引。-1表示没有匹配</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.StriveServer.GenericKMP.ExecuteKMP``1(``0[],System.Int32,System.Int32,``0[])">
            <summary>
            KMP计算
            </summary>
            <param name="source">主串</param>
            <param name="sourceOffset">主串起始偏移</param>
            <param name="sourceCount">被查找的主串的元素个数</param>
            <param name="pattern">模式串</param>
            <returns>匹配的第一个元素的索引。-1表示没有匹配</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.StriveServer.GenericKMP.ExecuteKMP``1(``0[],``0[],System.Int32[])">
            <summary>
            KMP计算
            </summary>
            <param name="source">主串</param>       
            <param name="pattern">模式串</param>
            <param name="next">回溯函数</param>
            <returns>匹配的第一个元素的索引。-1表示没有匹配</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Tcp.StriveServer.GenericKMP.ExecuteKMP``1(``0[],System.Int32,System.Int32,``0[],System.Int32[])">
            <summary>
            KMP计算
            </summary>
            <param name="source">主串</param>
            <param name="sourceOffset">主串起始偏移</param>
            <param name="sourceCount">被查找的主串的元素个数</param>
            <param name="pattern">模式串</param>
            <param name="next">回溯函数</param>
            <returns>匹配的第一个元素的索引。-1表示没有匹配</returns>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.StriveServer.TextTcpEngine">
            <summary>
            基于文本的TCP服务端引擎（兼容WebSocket）。    
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.StriveServer.ITextContractHelper">
            <summary>
            文本协议助手接口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Tcp.StriveServer.ITextContractHelper.EndTokens">
            <summary>
            消息结束标识符（经过编码后得到的字节数组）的集合。
            比如一般应用使用"\0"作为消息结束标志，那么，集合中只有一个元素（"\0"的二进制）。
            有的应用可能有多个标识符（如"\0"、"\n"及其它）都可以作为消息的结束标志，则集合中就有多个元素。
            如果设置为null，引擎则不进行消息完整性识别及构造，每次接收到数据，就直接触发MessageReceived事件。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Tcp.StriveServer.DefaultTextContractHelper">
            <summary>
            StriveEngine内置的ITextContractHelper实现。使用UTF-8对EndToken进行编码。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.BaseUdpEngine">
            <summary>
            BaseUdpEngine Udp引擎的基类，支持增强型的UDP。由ContractFormatStyle属性指定采用的协议类型。
            注意：理论上网络支持的最大的udp数据报为65507(64k减去各协议头)，由MaxUdpDatagramSize常量表示。 
            MaxUdpDatagramLength 属性可以设置拆分后得到的UDP数据报的最大尺寸。当要发送的消息大于MaxUdpDatagramLength时，BaseUdpEngine会将其拆分为多个小的UDP数据报发送（异步发送不会拆分消息）。
            zhuweisky 2007.04.06
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.BaseUdpEngine.Port">
            <summary>
            绑定的Udp端口。对于服务端，将会精确的绑定到指定的端口，如果端口已经被占用，则在初始化时将抛出异常；
            对于客户端，如果指定的端口被占用，则会选取相邻的端口进行绑定，此时可以通过get属性得到其绑定的端口号。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.BaseUdpEngine.ContractHelper">
            <summary>
            依据ContractFormatStyle属性，注入相应的ContractHelper
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.BaseUdpEngine.SocketSendBuffSize">
            <summary>
            网卡发送缓冲区大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.BaseUdpEngine.SocketReceiveBuffSize">
            <summary>
            网卡接收缓冲区大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.BaseUdpEngine.ReliableUdpEngine">
            <summary>
            引擎内部采用的EnhancedUdpClient实例。        
            get方法：如果UseEnhancedUdp为false，则返回null。暴露该属性使得应用可以监控增强型的EnhancedUdpClient的运行状态。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Receiver.IMessagBagParser">
            <summary>
            用于在指定的连接或端口上接收数据。用于UDP引擎（服务端和客户端）以及客户端的Tcp引擎。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Receiver.IMessagBagParser.ParseMessageBag(System.Net.IPEndPoint,System.Byte[])">
            <summary>
            执行一次接收操作，如果没有完整的消息，则返回null。      
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Receiver.MessageBag">
            <summary>
            如果是一个有效消息，则Valid属性为true，且Message属性可用；如果是一个无效消息，则Valid属性为false，且ValidData属性可用。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.IPv6UdpClient">
            <summary>
            兼容IPv6的UdpClient。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.IPv6UdpClient.SecurityLogEnabled">
            <summary>
            是否记录安全日志。默认值为false。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.IUdpClient.Send(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            向指定的端点发送UDP数据报。
            </summary>
            <param name="rudeData">要发送的数据报</param>
            <param name="endPoint">目标端点</param>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.IUdpClient.Post(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            向指定的端点投递UDP数据报。
            </summary>
            <param name="rudeData">要投递的数据报</param>
            <param name="endPoint">目标端点</param>        
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.IUdpEngine">
            <summary>
            IUdpEngine Udp引擎基础接口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.IUdpEngine.ContractFormatStyle">
            <summary>
            引擎所采用的协议类型（二进制、文本）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.IUdpEngine.Reliable">
            <summary>
            内部是否使用可靠的UDP。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.IUdpEngine.ReliableUdpEngine">
            <summary>
            引擎内部采用的EnhancedUdpClient实例。       
            get方法：如果UseEnhancedUdp为false，则返回null。暴露该属性使得应用可以监控增强型的EnhancedUdpClient的运行状态。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Passive.IUdpPassiveEngine">
            <summary>
            基于UDP的客户端引擎接口。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Passive.IUdpPassiveEngine.SendMessage(OMCS.Communication.Basic.Core.IMessage,System.Net.IPEndPoint)">
            <summary>
            向指定的端点发送UDP消息。注意：如果引擎已经停止，则直接返回。
            </summary>
            <param name="message">要发送的消息</param>
            <param name="address">目标端点</param>           
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Passive.IUdpPassiveEngine.PostMessage(OMCS.Communication.Basic.Core.IMessage,System.Net.IPEndPoint)">
            <summary>
            向指定的端点投递UDP消息。注意：如果引擎已经停止，则直接返回。
            </summary>
            <param name="message">要投递的消息</param>
            <param name="address">目标端点</param>           
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Passive.UdpPassiveEngine">
            <summary>
            客户端Udp引擎。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.ReliableDatagramType.Data">
            <summary>
            包含了应用层数据的数据报。并且该应用层的数据必须保证被正序地传送给接收方。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.ReliableDatagramType.LostableData">
            <summary>
            可被丢弃数据报。
            </summary> 
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.ReliableDatagramType.FeedbackVacancy">
            <summary>
            接收方定时发送期望接收的数据报的ID给发送方。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.ReliableDatagramType.Exit">
            <summary>
            当前进程要退出时，调用此方法通知对方。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Reliable.SessionClosedCause">
            <summary>
            UDP Session关闭的原因。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.SessionClosedCause.FeedbackTimeout">
            <summary>
            （从OutUdpSession的角度）反馈超时
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.SessionClosedCause.ResendTimeout">
            <summary>
            （从OutUdpSession的角度）重发超时关闭
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.SessionClosedCause.SocketException">
            <summary>
            （从OutUdpSession的角度）发送数据时，遭遇异常而关闭
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.SessionClosedCause.DestExit">
            <summary>
            对方退出进程
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.SessionClosedCause.HeartBeatTimeout">
            <summary>
            （从InUdpSession的角度）来自对方的心跳超时。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.SessionClosedCause.ActiveClose">
            <summary>
            主动关闭
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.SessionClosedCause.DestClose">
            <summary>
            对方关闭了Session
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.SessionClosedCause.DestIdentityChanged">
            <summary>
            对方进程的标志发生了变化
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.NotAckedDatagram.TimeSended">
            <summary>
            首次发送的时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.ReliableUdpHeader.Identity">
            <summary>
            用于标志消息发送者的身份。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.ReliableUdpHeader.BodyLength">
            <summary>
            消息体的长度。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Reliable.MTUs">
            <summary>
            常见的网络的最大传输单元值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.MTUs.MTUValueArrayInAscOrder">
            <summary>
            常见的MTU值的数组，升序排列
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.MTUs.SuperChannel">
            <summary>
            超通道。65535
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.MTUs.TokenRing16M">
            <summary>
            16M令牌环。17914
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.MTUs.TokenRing4M">
            <summary>
            4M令牌环。4464
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.MTUs.FDDI">
            <summary>
            4352
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.MTUs.Ethernet">
            <summary>
            以太网。1500
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.MTUs.IEEE802_3">
            <summary>
            IEEE802.3/802.2。1492
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.MTUs.X_25">
            <summary>
            X.25。576
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.MTUs.LowDelay">
            <summary>
            点对点，低时延。296
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSessionState.DestIPE">
            <summary>
            当前session对方的端点。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSessionState.OpenTime">
            <summary>
            UdpSession打开的时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSessionState.SlideWindowSize">
            <summary>
            滑动窗口的大小
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSessionState.WaitAckCount">
            <summary>
            发送之后等待确认的数据报个数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSessionState.ResendCount">
            <summary>
            重发的次数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSessionState.MaxDatagramIDSended">
            <summary>
            已经发送的最大的数据报ID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSessionState.MaxDatagramIDReceivedOtherSide">
            <summary>
            对方已经接收的最大的数据报ID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSessionState.CountInRecieveCacheOtherSide">
            <summary>
            对方接收缓存中数据报的个数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSessionState.PMTU">
            <summary>
            当前使用的PMTU的值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSessionState.PingCount">
            <summary>
            已经发送的ping个数
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSessionState.PingReceivedCount">
            <summary>
            接收到对方的ping的个数
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSessionState.PingAckCount">
            <summary>
            已经接收的pingAck个数
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.InUdpSessionState.DestIdentity">
            <summary>
            对方的身份标志
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.InUdpSessionState.DestIPE">
            <summary>
            当前session对方的端点。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.InUdpSessionState.OpenTime">
            <summary>
            UdpSession打开的时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.InUdpSessionState.MaxDatagramIDReceived">
            <summary>
            已经发送的最大的数据报ID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.InUdpSessionState.FeedbackVacancySpanInMSecs">
            <summary>
            快速重传请求的时间间隔
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.InUdpSessionState.CountInRecieveCache">
            <summary>
            接收缓存中数据报的个数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.FeedbackVacancyBody.MinIDInReceivedCache">
            <summary>
            缓存中未被提取的数据报的最小ID
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.FeedbackVacancyBody.MaxIDInReceivedCache">
            <summary>
            缓存中未被提取的数据报的最大ID
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.FeedbackVacancyBody.VacancyIDArray">
            <summary>
            空缺的ID,升序排列
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Reliable.DataBody">
            <summary>
            DataBody 包含了不可丢弃的数据或可丢弃的数据的消息体。 附加消息为8字节。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.LostableDataBody.Data">
            <summary>
            rudeData，未增强的
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Reliable.DataFragmentType">
            <summary>
            数据块分片的类型。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.DataFragmentType.Single">
            <summary>
            没有分片
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.DataFragmentType.Begin">
            <summary>
            数据块的第一个分片
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.DataFragmentType.Middle">
            <summary>
            数据块的中间个分片
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.DataFragmentType.End">
            <summary>
            数据块的最后一个分片
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Reliable.WrongDataFragmentTypeException">
            <summary>
            当接收到错误的数据片段类型时，将触发该事件。通常是因为对方在发送后续片段时，session被重置导致的。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.PingAckBody.MaxDatagramIDReceived">
            <summary>
            MaxDatagramIDReceived 已经接收的最大的数据报ID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.PingAckBody.ReceiveCacheCount">
            <summary>
            接收缓存中未被提取的数据报个数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.PingAckBody.SlideWindowSize">
            <summary>
            滑动窗口的大小。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.ReliableUdpDatagram.Identity">
            <summary>
            当前用户的UDP身份标记。在进程生命周期内，不会被改变。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.InUdpSession.DestIdentity">
            <summary>
            对方的进程标志
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.InUdpSession.OpenTime">
            <summary>
            UdpSession打开的时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.InUdpSession.DestIPEndPoint">
            <summary>
            当前session对方的端点。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.InUdpSession.FeedbackVacancySpanInMSecs">
            <summary>
            定时反馈的时间间隔。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.InUdpSession.LastHeartBeatTime">
            <summary>
            最后收到对方消息（任何数据）的时间。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Reliable.InUdpSession.DoPickRudeData">
            <summary>
            提取下一个正序的数据报。如果当前缓存没有数据报或没有正序的数据报，则返回null。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Reliable.InUdpSession.FeedbackVacancy(System.Int32)">
            <summary>
            向发送方反馈当前接收缓存中的空缺状态。
            </summary>
            <param name="spanInMsecs">距离上一次调用该方法的时间间隔。不能超过10ms</param>
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Udp.Reliable.IReliableHelper.SynAckReceived">
            <summary>
            第一个参数为接收到Syn的IPE。（由于客户端有NAT之前的IPE和NAT之后的IPE，所以要加以区分）   
            第二个参数为接收到Syn的SecondID
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Reliable.IReliableHelper.Exit(System.String)">
            <summary>
            当前进程要退出时，调用此方法，通知对方，及时释放UdpSession。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Reliable.IReliableUdpEngine.Syn(System.Net.IPEndPoint)">
            <summary>
            向目标端点发送尝试连接的Syn消息。
            </summary> 
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSession.OpenTime">
            <summary>
            UdpSession打开的时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSession.DestIPEndPoint">
            <summary>
            当前session对方的端点。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSession.SlideWindowSize">
            <summary>
            当WaitAckCount到达该设定值时，再次调用Send方法，将阻塞线程，直至WaitAckCount低于该设定值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSession.FeedbackFromUdp">
            <summary>
            从UDP通道收到了接收方的反馈信息？即反向的UDP通道是否能通？
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSession.SendFragment(System.Byte[],System.Int32,System.Int32,OMCS.Communication.Basic.Engine.Udp.Reliable.DataFragmentType)">
            <summary>
            将数据报经过增强后，发送到网络，并缓存。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSession.Resend(System.Int32)">
            <summary>
            定时重发ID最小的未确认数据报。（并检查对方的重发是否超时）
            </summary>
            <param name="spanInMsecs">距离上一次调用该方法的时间间隔</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Reliable.OutUdpSession.CheckFeedback">
            <summary>
            检测反馈是否超时。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Reliable.ReceivingCircleBuffer`1">
            <summary>
            根据数据报ID与初始ID的差值，定位数据报应该存放的位置。
            </summary>   
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.ReceivingCircleBuffer`1.MaxID">
            <summary>
            曾加入过缓存中的最大ID值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.ReceivingCircleBuffer`1.Capacity">
            <summary>
            缓存的最大容量
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.ReceivingCircleBuffer`1.HeadID">
            <summary>
            头元素的ID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.ReceivingCircleBuffer`1.Count">
            <summary>
            缓存中元素的个数
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Reliable.ReceivingCircleBuffer`1.GetVacancyIDs(System.Int32,System.UInt64@,System.UInt64@)">
            <summary>
            获取所有空缺的ID，包括期望接收的下一个ID（比maxID大1）。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Reliable.ReceivingCircleBuffer`1.GetDescendingVacancyIDs(System.Int32,System.UInt64@,System.UInt64@)">
            <summary>
            从大到小获取空缺的数据报ID。
            </summary>       
        </member>
        <member name="F:OMCS.Communication.Basic.Engine.Udp.Reliable.ReliableUdpEngine.TimeoutInSecs">
            <summary>
            重发超时、Vacancy反馈超时、心跳超时
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.ReliableUdpEngine.SecondID">
            <summary>
            IPEndPoint作为第一ID，第二ID作为辅助标志，非必须。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Reliable.ReliableUdpEngine.OnSynAck(System.Net.IPEndPoint,System.String)">
            <summary>
             接收到了来自对方的SynAck。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Reliable.ReliableUdpEngine.Syn(System.Net.IPEndPoint)">
            <summary>
            向目标端点发送尝试连接的Syn消息。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Reliable.ReliableUdpEngine.OnSyn(System.Byte,System.String,System.Net.IPEndPoint,OMCS.Communication.Basic.AgileIPE)">
            <summary>
            接收到了来自对方的Syn消息。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Reliable.ReliableUdpEngine.Send(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            将数据报增强后发送到网络。（采用可靠模式）
            </summary>
            <param name="rudeData">要发送的数据报</param>
            <param name="endPoint">接收数据报的目标端点</param>        
        </member>
        <member name="E:OMCS.Communication.Basic.Engine.Udp.Reliable.SendingCircleBuffer`1.SessionResetted">
            <summary>
            当MaxID为0，而AckID大于0时，则认为当前session已重置，触发该事件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.SendingCircleBuffer`1.MaxID">
            <summary>
            曾加入过缓存中的最大ID值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.SendingCircleBuffer`1.Capacity">
            <summary>
            缓存的最大容量
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Engine.Udp.Reliable.SendingCircleBuffer`1.Count">
            <summary>
            缓存中元素的个数
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Reliable.SendingCircleBuffer`1.RemoveSmaller(System.UInt64)">
            <summary>
            移除小于等于ackID的数据。（表明对方已经收到了标志为ackID的数据报）
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Engine.Udp.Reliable.SendingCircleBuffer`1.RemoveBetween(System.UInt64,System.UInt64)">
            <summary>
            移除startID-endID之间的数据，包含startID和endID。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Server.IUdpServerEngine">
            <summary>
            基于UDP的服务端引擎接口。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Engine.Udp.Server.UdpServerEngine">
            <summary>
            服务端Udp引擎。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.NetServer">
            <summary>
            规定：
            （1）普通用户编号只能由数字和字母组成（严格区分大小写），并且其最大长度会由IMessageHeader的实现类给出具体限制。
            （2）系统的虚拟账号使用"_"开头。    
            （3）以"_"开头的，并且不是"_0"，表示为群集中的其它的服务端的serverToken。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.NetServer.SystemUserID">
            <summary>
            当系统向客户发送消息时，消息头中source使用NetServer.SystemUserID
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.NetServer.MultiUserID">
            <summary>
            当服务端向多个客户发送同一个消息时，消息头中Dest使用NetServer.MultiUserID
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.NetServer.IsServerUser(System.String)">
            <summary>
            是否为代表服务器的虚拟用户ID，以"_"开头
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.ActionTypeOnNoP2PChannel">
            <summary>
            当要经过P2P发送消息而P2P通道又不存在时，采取的操作。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Passive.ActionTypeOnNoP2PChannel.TransferByServer">
            <summary>
            通过服务器中转
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Passive.ActionTypeOnNoP2PChannel.Discard">
            <summary>
            丢弃消息
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser">
            <summary>
            客户端通过此处理器来处理接收到的所有消息。2011.01.25最后修改。
            (1)将指定MessageType的消息进行Push到responseManager以等到以后提取。    
            (2)如果AsynMessageQueueEnabled为true，则启动消息队列，所有接收到的非push消息都先放到队列中，再由后台线程逐个取出处理。
            (3)如果AsynMessageQueueEnabled设为false，则将处理完一个消息后，才会接收下一个消息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.ProcesserList">
            <summary>
            挂接的所有客户端消息处理器的列表。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.ResponseManager">
            <summary>
            用于管理从服务器接收的待提取的回复消息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.PushKeyDispersiveKeyScope">
            <summary>
            增加待提取的消息类型的离散集合。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.EsfLogger">
            <summary>
            日志记录器。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.AsynMessageQueueEnabled">
            <summary>
            是否启用异步消息队列，默认值true。
            注意，如果需要在处理某个消息时，又要同步调用服务器，则必须设为true，否则，将会一直阻塞到调用超时。
            最好不要在消息处理线程中发出同步调用，因为即使开启了异步队列，如果同步调用的回复比较久，在这段时间内也会一直堵塞处理线程，导致后续的消息不能及时处理。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.MessageTransceiver">
            <summary>
            用于发送异步消息处理的结果。如果AsynMessageQueueEnabled为false，则该属性不需要设置。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.AddPushedMessageType(System.Int32)">
            <summary>
            增加待提取的消息类型。
            </summary>
            <param name="messageType">待提取的消息类型</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.ContainerStylePassiveProcesser.Dispose">
            <summary>
            释放异步消息队列线程。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.IP2PChannelManager">
            <summary>
            用于管理所有客户《＝》客户之间的P2P通道。
            zhuweisky 2006.06.02
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IP2PChannelManager.SendMessage(System.String,OMCS.Communication.Basic.Core.IMessage,System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            通过P2PChannel发送消息。
            </summary>
            <param name="destUserID">目标用户ID</param>
            <param name="msg">要发送的消息（注意，该消息已经过MessagePipe）</param>            
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="action">当通道繁忙时所采取的动作</param>  
            <returns>如果P2PChannel存在且可用，则返回true（即使P2P通道繁忙而被丢弃）；否则返回false。</returns>    
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IP2PChannelManager.IsP2PChannelExist(System.String)">
            <summary>
            到目标用户的P2P通道是否存在。
            </summary>
            <param name="destUserID">目标用户ID</param>        
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.IPassiveEngine">
            <summary>
            客户端引擎。封装了数据接收线程，完全向客户端隐藏了网络通信细节。
            Client所有的通过网络发送/接收数据都通过IPassiveEngine进行	
            zhuweisky 2006.01.12
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.IPassiveEngine.ServerIPEndPoint">
            <summary>
            服务器地址。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.IPassiveEngine.ChannelIsBusy">
            <summary>
            发送消息的通道是否正忙。使用者可以根据该属性决定是否要丢弃后续某些消息的发送。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IPassiveEngine.CommitMessageToServer(OMCS.Communication.Basic.Core.IMessage,System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息发送（同步）或投递（异步）给服务器，不经任何处理，直接发送。如果消息没有被成功发送（比如被丢弃），则返回false；否则，返回true。
            注意：如果引擎已经停止，则直接返回false。 
            </summary>
            <param name="msg">要发送的消息</param>
            <param name="action">当通道繁忙时，所采取的动作</param>
            <returns>如果成功发送，将返回true；否则，（比如丢弃）返回false。</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IPassiveEngine.GetSendingCount">
            <summary>
            获取尚未发送完成的消息个数。
            </summary>		
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.IMessageTransceiver">
            <summary>
            消息收发器。可将异步的消息请求/回复转化为同步调用。	
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.IMessageTransceiver.Connected">
            <summary>
            与服务器是否连接。如果是基于UDP，则返回null。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.IsP2PChannelExist(System.String)">
            <summary>
            到目标用户的P2P通道是否存在。
            </summary>
            <param name="destUserID">目标用户ID</param>        
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.Send(OMCS.Communication.Basic.Core.IMessage,System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
             发送数据。
            （1）如果为非P2P消息，则直接向服务器提交。
            （2）如果消息为P2P（即接收者是另一个在线用户），当目标用户的P2PChannel可用且可靠（比如TCP通道、或增强的UDP通道），则将通过P2PChannel向该用户发送。否则，也是直接向服务器提交。     
            </summary>
            <param name="msg">要提交的消息</param>   
            <param name="post">是否采用Post模式发送消息</param>  
            <returns>如果成功发送，将返回true；否则，（比如丢弃）返回false。</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.SendToServer(OMCS.Communication.Basic.Core.IMessage,System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            向服务器发送消息。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.SendByP2PChannel(OMCS.Communication.Basic.Core.IMessage,OMCS.Communication.Basic.Passive.ActionTypeOnNoP2PChannel,System.Boolean,System.String,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            使用P2P通道（不一定可靠）将消息发送给其他在线用户。
            </summary>
            <param name="p2pMessage">要提交的P2P消息</param>      
            <param name="actionType">当为P2P通道不存在时，采取的策略</param>
            <param name="msg">是否采用Post模式发送消息</param>  
            <param name="destUserID">接收P2P消息的用户ID</param>
            <returns>如果成功发送，将返回true；否则，（比如丢弃）返回false。</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.Commit(OMCS.Communication.Basic.Core.IMessage,System.Nullable{System.Int32})">
            <summary>
            提交数据并返回应答。如果resMessageType不为null，且超时仍然没有回复，则抛出超时异常TimeoutException。         
            （1）如果为非P2P消息（即接收者是服务端），则直接向服务器提交。
            （2）如果消息为P2P（即接收者是另一个在线用户），当目标用户的P2PChannel可用且可靠（比如TCP通道、或增强的UDP通道），则将通过P2PChannel向该用户发送。否则，也是直接向服务器提交。     
            </summary>
            <param name="msg">要提交的消息</param>      
            <param name="resMessageType">期望应答消息的类型</param>
            <returns>应答消息</returns>     
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.Commit(OMCS.Communication.Basic.Core.IMessage,System.Int32,OMCS.Communication.Basic.Core.ResponseHandler,System.Object)">
            <summary>
            提交请求，当框架接收到回复时，将自动回调responseHandler进行处理。        
            （1）如果为非P2P消息，则直接向服务器提交。
            （2）如果消息为P2P（即接收者是另一个在线用户），当目标用户的P2PChannel可用且可靠（比如TCP通道、或增强的UDP通道），则将通过P2PChannel向该用户发送。否则，也是直接向服务器提交。     
            </summary>
            <param name="msg">要提交的请求</param>      
            <param name="resMessageType">期望应答消息的类型</param>
            <param name="responseHandler">用于处理回复消息的方法</param>     
            <param name="state">携带的状态数据，将被传递给回调函数responseHandler</param>            
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.CommitToServer(OMCS.Communication.Basic.Core.IMessage,System.Nullable{System.Int32})">
            <summary>
            向服务器提交数据。该消息即使消息为P2P，也一定经过服务器中转。如果resMessageType不为null，且超时仍然没有回复，则抛出超时异常TimeoutException。（对于有些P2P消息，服务器可能必须要拦截处理）
            </summary>
            <param name="requestMsg">要提交的消息</param>      
            <param name="resMessageType">期望应答消息的类型</param>
            <returns>应答消息</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IMessageTransceiver.CommitToServer(OMCS.Communication.Basic.Core.IMessage,System.Int32,OMCS.Communication.Basic.Core.ResponseHandler,System.Object)">
            <summary>
            向服务器提交数据。该消息即使消息为P2P，也一定经过服务器中转。（对于有些P2P消息，服务器可能必须要拦截处理）
            </summary>
            <param name="requestMsg">要提交的消息</param>      
            <param name="resMessageType">期望应答消息的类型</param>
            <param name="responseHandler">用于处理回复消息的方法</param>   
            <param name="state">携带的状态数据，将被传递给回调函数responseHandler</param>        
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.MessageTransceiver">
            <summary>
            IMessageTransceiver 的默认实现。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.IRegularSender">
            <summary>
            客户端正规消息发送器。将消息发送给服务端或其他在线用户（可使用P2P通道），并保证消息在发送之前经过MessagePipe。  
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Passive.IRegularSender.Connected">
            <summary>
            与服务器是否连接。如果是基于UDP，则返回null。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IRegularSender.IsP2PChannelExist(System.String)">
            <summary>
            到目标用户的P2P通道是否存在。
            </summary>
            <param name="destUserID">目标用户ID</param>        
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IRegularSender.SendMessage(OMCS.Communication.Basic.Core.IMessage,System.Boolean,System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息发送给服务端或其他在线用户（如果P2P通道可用，且可靠（比如TCP通道、或增强的UDP通道），则将使用P2P通道发送），并保证消息在发送之前经过MessagePipe。
            </summary>
            <param name="msg">要发送的消息</param>      
            <param name="directToServer">如果值为true，当为P2P消息时，即使P2P Channel可用，是否也通过服务器中转</param>     
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="action">当通道繁忙时所采取的动作</param>  
            <returns>如果成功发送，将返回true；否则，（比如丢弃）返回false。</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Passive.IRegularSender.SendByP2PChannel(OMCS.Communication.Basic.Core.IMessage,OMCS.Communication.Basic.Passive.ActionTypeOnNoP2PChannel,System.Boolean,System.String,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            使用P2P通道（不一定可靠）将消息发送给其他在线用户，并保证消息在发送之前经过MessagePipe。
            </summary>
            <param name="p2pMessage">要发送的P2P消息</param>      
            <param name="actionType">当为P2P通道不存在时，采取的策略</param>    
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="destUserID">接收P2P消息的用户ID</param>
            <returns>如果成功发送，将返回true；否则，（比如丢弃）返回false。</returns>
        </member>
        <member name="T:OMCS.Communication.Basic.Passive.RegularSender">
            <summary>
            IRegularSender接口的默认实现。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.IServerEngine">
            <summary>
            服务端引擎接口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.IServerEngine.ServerID">
            <summary>
            当前服务器的唯一标识。该属性用于OMCS.Communication.Platform。       
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IServerEngine.ChannelIsBusy(System.Net.IPEndPoint)">
            <summary>
            到目标客户的通道是否繁忙？
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IServerEngine.SendMessageToClient(System.Net.IPEndPoint,OMCS.Communication.Basic.Core.IMessage,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            主动给某个客户同步发信息，不经任何处理，直接发送。注意：如果引擎已经停止，则直接返回false。如果消息没有被成功发送（比如被丢弃），则返回false；否则，返回true。      
            </summary>		
            <returns>如果成功发送，将返回true；否则，（比如丢弃）返回false。</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IServerEngine.PostMessageToClient(System.Net.IPEndPoint,OMCS.Communication.Basic.Core.IMessage,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            主动给某个客户异步投递信息，不经任何处理，直接发送。如果消息没有被成功发送（比如被丢弃），则返回false；否则，返回true。
            注意：如果引擎已经停止，则直接返回false。      
            </summary>		
            <returns>如果成功发送，将返回true；否则，（比如丢弃）返回false。</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IServerEngine.PostMessageToClient(System.Net.IPEndPoint,OMCS.Communication.Basic.Core.IMessage,System.String,System.Int32,System.Boolean)">
            <summary>
            实现有依赖关系的可丢弃的消息发送。
            （1）如果等待发送的消息个数大于discardPostingCount时，则丢弃当前消息。
            （2）当前数据是否依赖上一次发送的数据。如果依赖，当上一次数据被丢弃时，则直接丢弃当前消息。        
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IServerEngine.GetPostingMessageCount(System.Net.IPEndPoint,System.String)">
            <summary>
            获取正在发送给目标用户的消息个数（尚未发送完成的）。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Basic.Server.DisconnectedType">
            <summary>
            客户端连接断开的原因分类。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.NetworkInterrupted">
            <summary>
            网络连接中断。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.InvalidMessage">
            <summary>
            无效的消息。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.MessageWithWrongUserID">
            <summary>
            消息中的UserID与当前连接的OwnerID不一致。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.HeartBeatTimeout">
            <summary>
            心跳超时。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.BeingPushedOut">
            <summary>
            被同名用户挤掉线。（发生于RelogonMode为ReplaceOld）
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.NewConnectionIgnored">
            <summary>
            当已经有同名用户在线时，新的连接被忽略。（发生于RelogonMode为IgnoreNew） 
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.ChannelCacheOverflow">
            <summary>
            等待发送以及正在发送的消息个数超过了MaxChannelCacheSize的设定值。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.UnauthorizedClientType">
            <summary>
            未授权的客户端类型
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.DisconnectedType.MaxConnectionCountLimitted">
            <summary>
            已达到最大连接数限制
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.IRegularSender">
            <summary>
            服务端正规消息发送器。服务器主动将消息（如通知）发送给指定的目标用户，并保证消息在发送之前经过MessagePipe。
            有的应用可能需要考虑到：目标用户可能连接在其它服务器节点上，此时可以overrride SendMessageToForeigner方法。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IRegularSender.HandleCrossServerMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            【跨服】处理ACMS转发过来的跨服消息（消息的接收者是服务端）。
            </summary>   
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IRegularSender.SendMessage(System.Boolean,OMCS.Communication.Basic.Core.IMessage,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息经过MessagePipe后发送给目标用户(msg.Header.DestUserID)，采用同步方式。
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IRegularSender.SendMessage(System.Boolean,OMCS.Communication.Basic.Core.IMessage,System.String,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息经过MessagePipe后发送给目标用户，采用同步方式。
            </summary> 
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IRegularSender.SendMessage(System.Boolean,OMCS.Communication.Basic.Core.IMessage,System.Collections.Generic.IEnumerable{System.String},OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息经过MessagePipe后发送给多个目标用户，采用同步方式。
            </summary> 
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IRegularSender.SendMessage(System.Boolean,OMCS.Communication.Basic.Core.IMessage,System.Net.IPEndPoint,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息经过MessagePipe后发送到指定的地址。
            </summary> 
        </member>
        <member name="M:OMCS.Communication.Basic.Server.IRegularSender.PostMessage(OMCS.Communication.Basic.Core.IMessage,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            实现有依赖关系的可丢弃的消息发送。
            （1）如果等待发送的消息个数大于discardPostingCount时，则丢弃当前消息。
            （2）当前数据是否依赖上一次发送的数据。如果依赖，当上一次数据被丢弃时，则直接丢弃当前消息。
            </summary> 
            <param name="token4RecordPosting">消息计数标记。</param>     
            <param name="discardPostingCount">当等待投递的消息数大于该值时，就丢弃消息。</param>     
            <param name="dependOnPre">当前数据是否依赖上一次发送的数据。如果依赖，当上一次数据被丢弃时，直接丢弃当前数据。</param>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.RegularSender">
            <summary>
            服务端正规消息发送器IRegularSender接口的默认实现。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.RegularSender.SendMessageToForeigner(OMCS.Communication.Basic.Core.IMessage,System.Collections.Generic.IEnumerable{System.String},System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息发送给其它服务器上的用户。
            </summary>
            <param name="msg">未经过MesssagePipe的原始消息</param>
            <param name="foreigners">消息接受则的UserID的集合</param>      
        </member>
        <member name="M:OMCS.Communication.Basic.Server.RegularSender.SendMessageToForeigner(OMCS.Communication.Basic.Core.IMessage,System.String,System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            将消息发送给其它服务器上的用户。
            </summary>
            <param name="msg">未经过MesssagePipe的原始消息</param>
            <param name="foreigner">消息接受者的UserID</param>      
        </member>
        <member name="M:OMCS.Communication.Basic.Server.RegularSender.SendMessageToForeigner(OMCS.Communication.Basic.Core.IMessage,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            将可丢弃的依赖消息发送给其它服务器上的用户。
            </summary>
            <param name="msg">未经过MesssagePipe的原始消息</param>
            <param name="foreigner">消息接受者的UserID</param>   
        </member>
        <member name="M:OMCS.Communication.Basic.Server.RegularSender.SendMessageToOtherServer(OMCS.Communication.Basic.Core.IMessage)">
             <summary>
            【跨服】将消息发送给其它服务器去处理。
             </summary>
             <param name="msg">未经过MesssagePipe的原始消息</param>        
        </member>
        <member name="M:OMCS.Communication.Basic.Server.RegularSender.HandleCrossServerMessage(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            【跨服】处理ACMS转发过来的跨服消息（消息的接收者是服务端）。
            </summary>   
        </member>
        <member name="M:OMCS.Communication.Basic.Server.ServerTokenManager.IsCrossServer(System.String)">
            <summary>
            【跨服】serverToken是否表示为群集中的其它的服务端？
            </summary>      
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager">
            <summary>
            在OMCS.Communication.Platform群集中的用户管理器。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager.UserCount">
            <summary>
            当前在线用户的数量。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager.IsUserOnLine(System.String)">
            <summary>
            目标用户是否在线。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager.GetOnlineUserList">
            <summary>
            获取在线用户的ID列表。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager.GetUserData(System.String)">
            <summary>
            获取目标在线用户的基础信息。
            </summary>
            <param name="userID">目标用户的ID</param>
            <returns>如果目标用户不在线，则返回null</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager.SelectOnlineUserFrom(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            从目标用户集合中挑出在线用户的ID列表。
            </summary>        
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager.UserDisconnected">
            <summary>
            某个用户从群集系统退出时，触发此事件。参数：userID - serverID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IPlatformUserManager.UserConnected">
            <summary>
            某个用户登录到群集系统时，触发此事件。参数：userID - serverID
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.VirtualPlatformUserManager">
            <summary>
            在非OMCS.Communication.Platform环境中，虚拟的平台用户管理器。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.IUserDisplayer">
            <summary>
             用于显示所有在线用户的状态信息。	
             zhuweisky 2004.04.22
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserDisplayer.ClearAll">
            <summary>
            清除所有。通常是通信引擎停止时被调用。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserDisplayer.RemoveUser(System.String,System.String)">
            <summary>
            移除用户。通常在用户下线时被调用。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.EmptyUserDisplayer">
            <summary>
            不显示在线用户的状态信息。NullObject模式。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.IUserManager">
            <summary>
            在线用户管理器接口。注意，IUserManager仅仅管理当前AS上的所有在线用户，所以其暴露的所有事件、属性、方法都是针对当前AS上的用户的。
            如果要获取OMCS.Communication.Platform全局在线用户的信息，需要访问IPlatformUserManager接口。      
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.IUserManager.UserCount">
            <summary>
            当前在线用户的数量。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.IsUserOnLine(System.String)">
            <summary>
            目标用户是否在线。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.GetUserData(System.String)">
            <summary>
            获取目标在线用户的基础信息。
            </summary>
            <param name="userID">目标用户的ID</param>
            <returns>如果目标用户不在线，则返回null</returns>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.GetAllUserData">
            <summary>
            获取所有在线用户信息。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.SetP2PAddress(System.String,OMCS.Communication.Basic.Server.UserManagement.P2PAddress)">
            <summary>
            记录客户端上报的P2P地址。如果目标用户不在线，则忽略。
            </summary>
            <param name="userID">客户端用户的ID</param>
            <param name="addr">P2P地址</param>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.GetOnlineUserList">
            <summary>
            获取在线用户的ID列表。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.SelectOnlineUserFrom(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            从目标用户集合中挑出在线用户的ID列表。
            </summary>        
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.IUserManager.UserDisplayer">
            <summary>
            用户管理器依赖该属性显示所有在线用户的状态信息。	
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.IUserManager.RelogonMode">
            <summary>
            重登陆模式。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.Initialize">
            <summary>
            初始化用户管理器。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.GetUserAddress(System.String)">
            <summary>
            如果用户不在线，返回null	
            </summary>  
        </member>
        <member name="M:OMCS.Communication.Basic.Server.UserManagement.IUserManager.LogonOtherServer(System.String,System.String)">
            <summary>
            该方法用于Platform，用于接受平台的回调通知。当RelogonMode为ReplaceOld时，同名用户在同一群集的其它的应用服务器上登陆。将触发SomeOneBeingPushedOut事件。
            </summary>
            <param name="userID">同名登陆的用户ID。</param>
            <param name="newServerID">新登录到哪台服务器。</param>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.SomeOneDisconnected">
            <summary>
            客户端连接断开下线时，触发此事件。不要远程预定该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.SomeOneConnected">
            <summary>
            当客户端登录成功时，触发此事件。不要远程预定该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.SomeOneBeingPushedOut">
            <summary>
            如果RelogonMode为ReplaceOld，并且当从另外一个新连接上收到一个同名ID用户的消息时将触发此事件。
            注意，只有在该事件处理完毕后，才会真正关闭旧的连接并使用新的地址取代旧的地址。可以在该事件的处理函数中，将相关情况通知给旧连接的客户端。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.NewConnectionIgnored">
            <summary>
            如果RelogonMode为IgnoreNew，并且当从一个新连接上收到一个同名ID用户的消息时将触发此事件。   
            注意，只有在该事件处理完毕后，才会关闭新连接。可以在该事件的处理函数中，将相关情况通知给客户端。   
            【一般情况下，都会由登录回复告知客户端已经登录，而不会进入到这里触发该事件！】
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.SomeOneTimeOuted">
            <summary>
            用户心跳超时。
            只有在该事件处理完毕后，才关闭对应的连接，并将其从用户列表中删除。可以在该事件的处理函数中，将相关情况通知给客户端。            
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.UserCountChanged">
            <summary>
            当在线用户数发生变化时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.P2PAddressChanged">
            <summary>
            当某个用户的P2PAddress地址被修改时，将触发此事件。参数为 UserID - P2PAddress
            </summary>
        </member>
        <member name="E:OMCS.Communication.Basic.Server.UserManagement.IUserManager.UserTagChanged">
            <summary>
            当某个用户的携带数据被修改时，将触发此事件。参数为 UserID - tag
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.RelogonMode">
            <summary>
            重登陆模式。当从另外一个新连接上收到一个同名ID用户的消息时，地址管理器对旧的连接的处理模式。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.UserManagement.RelogonMode.IgnoreNew">
            <summary>
            忽略新的连接。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Basic.Server.UserManagement.RelogonMode.ReplaceOld">
            <summary>
            使用新的连接取代旧的连接。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.P2PAddress">
            <summary>
            客户端用于P2P通信的地址信息。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.TcpUserManager">
            <summary>
            IUserManager接口的默认实现。
            只有当UserID与TCP连接绑定了，才会进入用户管理器。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.TcpUserManager.UserDisplayer">
            <summary>
            用户管理器依赖该属性显示所有在线用户的状态信息。	
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.TcpUserManager.HeartbeatTimeoutInSecs">
            <summary>
            心跳超时间隔（秒）。即服务端多久没有收到客户端的心跳消息，则视客户端为超时掉线。默认值为30秒。如果设置小于等于0，则表示不做心跳检查。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.TcpUserManager.TcpServerEngine">
            <summary>
            要绑定的服务端引擎。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.TcpUserManager.ActivateUserAfterSentMessage">
            <summary>
            当给某个用户发送消息后，是否激活其心跳。默认值false。普通应用中，应设为false。该属性主要给OMCS.Communication.Platform的转发服务器TS使用。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Basic.Server.UserManagement.UserData">
            <summary>
            登陆用户的基础信息。即可用于独立的应用服务器、也可用于OMCS.Communication.Platform体系中。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.UserData.AppServerID">
            <summary>
            在OMCS.Communication.Platform群集环境中，目标用户所连接的应用服务器ID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.UserData.Address">
            <summary>
            服务器看到的客户端的地址（通常是经过NAT之后的地址）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.UserData.P2PAddress">
            <summary>
            客户端的私有地址信息
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.UserData.TimeLogon">
            <summary>
            上线时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.UserData.ClientType">
            <summary>
            客户端类型
            </summary>
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.UserData.Tag">
            <summary>
            用户的携带数据（应用程序可以使用该属性保存与当前用户相关的其它信息），该Tag会在ACMS和AS之间自动同步。该Tag指向的对象必须可序列化。
            </summary>        
        </member>
        <member name="P:OMCS.Communication.Basic.Server.UserManagement.UserData.LocalTag">
            <summary>
            用户的携带数据（应用程序可以使用该属性保存与当前用户相关的其它信息），仅在本地使用。不会在ACMS和AS之间同步。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Plus.Application.FileTransfering.Server.FileMessageProcesser">
            <summary>
            FileMessageProcesser 使服务端能够提供下载上传的服务。
            zhuweisky 2010.08.13
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.FileTransfering.Server.IFileController">
            <summary>
            服务端的OMCS.Communication.Plus.Application.FileTransfering.Server.FileMessageProcesser实现了该接口。    
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.FileTransfering.FileMessageTypeRoom">
            <summary>
            所有与文件传送相关的消息类型的空间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.FileMessageTypeRoom.BeginSendFile">
            <summary>
            通知对方准备发送文件。对应协议为BeginSendFileContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.FileMessageTypeRoom.RejectOrAcceptFile">
            <summary>
            RejectOrAcceptFile 同意/拒绝接收文件。对BeginSendFile的回复，消息体为RejectOrAcceptFileContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.FileMessageTypeRoom.FilePackageData">
            <summary>
            包含了文件数据的包。消息协议为OMCS.Communication.Plus.FileTransceiver.FilePackageContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.FileMessageTypeRoom.CancelFileSending">
            <summary>
            取消文件的发送。对应协议为CancelFileContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.FileMessageTypeRoom.CancelFileReceiving">
            <summary>
            取消文件的接收。对应协议为CancelFileContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.FileMessageTypeRoom.SingleFileRevFinishedNotify">
            <summary>
            在接收文件夹的情况下，当文件夹中的某个文件接收完成时，必须通知发送方。如此发送方才会启动文件夹中下一个文件的发送。对应协议为SingleFileNotifyContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.FileMessageTypeRoom.ContinueTransFile">
            <summary>
            续传文件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.BeginSendFileContract.IsFolder">
            <summary>
            是否传送的为文件夹。false表示传送的为文件，true表示传送的为文件夹。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.BeginSendFileContract.OriginPath">
            <summary>
            发送方发送的文件（夹）的全路径。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.BeginSendFileContract.TotalSize">
            <summary>
            要传送的文件（夹）的总大小
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.BeginSendFileContract.LastUpdateTime">
            <summary>
            被发送的文件(夹)最后一次更新时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.BeginSendFileContract.Comment">
            <summary>
            Comment 用于存储与本次文件发送相关的额外附加信息。比如，在类似ftp的上传文件（夹）的服务中，Comment的内容可以是服务器保存上传文件（夹）的路径。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.CancelFileContract.InnerError">
            <summary>
            是否因为内部错误而导致文件传送中断。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.CancelFileContract.Cause">
            <summary>
            取消的具体原因。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.FileTransfering.RejectOrAcceptFileContract">
            <summary>
            同意/拒绝接收文件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.RejectOrAcceptFileContract.RejectCause">
            <summary>
            当agree为false，该字段表示拒绝的原因。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.RejectOrAcceptFileContract.ReceivedCount">
            <summary>
            如果值非0，则表示续传，指示已经传递了多少字节。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.RejectOrAcceptFileContract.DisrupttedFileRelativePath">
            <summary>
            仅用于文件夹续传，表示续传的文件的相对路径
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.RejectOrAcceptFileContract.DisrupttedFileSize">
            <summary>
            该属性仅用于文件夹传送。被中断传送的文件的大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.RejectOrAcceptFileContract.DisrupttedFileReceivedCount">
            <summary>
            该属性仅用于文件夹传送。被中断传送的文件已接收的字节数
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.BaseFileController.CheckZeroSpeedSpanInSecs">
            <summary>
            检测0速度的时间间隔，单位：秒。默认值20。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.BaseFileController.Dispose">
            <summary>
            释放零速度检测线程。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.BaseFileController.FileReceiverManager">
            <summary>
            必须与PromptMessageOutter使用同一个IFileReceiverManager引用。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.FileTransfering.CbFileRequestReceived">
            <summary>
            回调委托。
            </summary>
            <param name="projectID">文件传送项目的编号</param>
            <param name="senderID">文件（夹）发送者的ID</param>
            <param name="fileName">文件（夹）名称</param>
            <param name="totalSize">文件（夹）大小</param>
            <param name="comment">备注</param>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController">
            <summary>
            用于控制文件（夹）发送及文件传送状态的查看。即可用于客户端也可用户服务端。    
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.TTL4ResumedFileItem">
            <summary>
            当一个续传项超过多长时间没被使用，则将其移除，同时删除对应的临时文件（夹）。单位：秒。默认值：300。
            如果值小于等于0，表示不使用续传功能。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.FileResponseReceived">
            <summary>
            当文件接收方回复了同意/拒绝接收文件（夹）时，在发送方触发此事件。参数为 TransmittingProject - bool（同意？）。可以通过参数TransmittingProject的AccepterID属性得知接收方的UserID。
            通常，客户端预定该事件，只需要告知文件发送者，而不需要再做任何额外处理。该事件将在后台线程中触发，如果处理该事件时需要刷新UI，则需要转发到UI线程。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.FileSendingEvents">
            <summary>
            该事件接口暴露了所有正在发送文件（夹）的实时状态。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.FileReceivingEvents">
            <summary>
            该事件接口暴露了所有正在接收的文件（夹）的实时状态。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.BeginSendFile(System.String,System.String,System.String,System.String@)">
            <summary>
            发送方准备发送文件（夹）。目标用户必须在线。如果对方同意接收，则后台会自动发送文件（夹）；如果对方拒绝接收，则会取消发送。（通过FileAnswerReceived事件，可以得知对方是否同意接收。）
            </summary>
            <param name="accepterID">接收文件（夹）的用户ID</param>
            <param name="fileOrDirPath">被发送文件（夹）的路径</param>    
            <param name="comment">其它附加备注。如果是在类似FTP的服务中，该参数可以是保存文件（夹）的路径</param>       
            <param name="projectID">返回文件传送项目的编号</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.BeginSendFile(System.String,System.String,System.String,OMCS.Communication.Plus.FileTransceiver.SendingFileParas,System.String@)">
            <summary>
            发送方准备发送文件（夹）。目标用户必须在线。如果对方同意接收，则后台会自动发送文件；如果对方拒绝接收，则会取消发送。（通过FileResponseReceived事件，可以得知对方是否同意接收。）
            </summary>
            <param name="accepterID">接收文件（夹）的用户ID</param>
            <param name="fileOrDirPath">被发送文件（夹）的路径</param>       
            <param name="comment">其它附加备注。如果是在类似FTP的服务中，该参数可以是保存文件（夹）的路径</param>
            <param name="paras">发送参数设定。传入null，表示采用IFileSenderManager的默认设置。</param>
            <param name="projectID">返回文件传送项目的编号</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.BeginSendFile(System.String,System.IO.Stream,System.String,System.UInt64,System.String,OMCS.Communication.Plus.FileTransceiver.SendingFileParas,System.String@)">
            <summary>
            发送方准备发送流。目标用户必须在线。如果对方同意接收，则后台会自动发送；如果对方拒绝接收，则会取消发送。（通过FileResponseReceived事件，可以得知对方是否同意接收。）
            </summary>
            <param name="accepterID">接收流的用户ID</param>
            <param name="stream">被发送的流。请特别注意，调用该方法前请保证流已经被打开；另外，发送中断或完成，OMCS.Communication.Basic并不会关闭该流。</param> 
            <param name="projectName">项目的名称</param>
            <param name="size">要发送的字节数</param>
            <param name="comment">其它附加备注。</param>
            <param name="paras">发送参数设定。传入null，表示采用IFileSenderManager的默认设置。</param>
            <param name="projectID">返回文件传送项目的编号</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.BeginReceiveFile(System.String,System.IO.Stream)">
            <summary>
            接收方如果同意接收文件（夹）或流，则调用该方法，该方法会将接收的数据写入到目标流（saveStream）中。
            </summary>
            <param name="projectID">文件传送项目的编号</param>
            <param name="saveStream">存储文件的流。请特别注意，调用该方法前请保证流已经被打开；另外，接收中断或完成，OMCS.Communication.Basic并不会关闭该流。</param>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.BeginReceiveFile(System.String,System.String,System.Boolean)">
            <summary>
            接收方如果同意接收文件（夹）或流，则调用该方法。
            </summary>
            <param name="projectID">文件传送项目的编号</param>
            <param name="savePath">存储文件（夹）的路径。请特别注意，如果已经存在同名的文件（夹），将覆盖之。</param>
            <param name="allowResume">如果满足续传条件，是否启用续传。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.RejectFile(System.String,System.String)">
            <summary>
            接收方如果拒绝接收文件（夹）或流，则调用该方法。
            </summary>
            <param name="projectID">文件传送项目的编号</param>
            <param name="cause">拒绝接收的原因</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.GetTransferingAbout(System.String)">
            <summary>
            获取与目标用户相关的所有文件传送项目的projectID的列表（包括未被接收方回复的传送项目）。
            </summary>
            <param name="destUserID">目标用户ID。如果为null，则表示获取所有正在传送项目的projectID。</param>
            <returns>projectID的列表</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.CancelTransfering(System.String,System.String)">
            <summary>
            主动取消正在发送或接收的文件（夹）（包括未被接收方回复的传送项目），并通知对方。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.CancelTransferingAbout(System.String)">
            <summary>
            取消与目标用户相关的正在传送项目（包括未被接收方回复的传送项目）。
            </summary>
            <param name="destUserID">目标用户ID。如果为null，则表示取消所有正在传送项目。</param> 
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.CancelAllTransfering">
            <summary>
            取消所有正在传送项目（包括未被接收方回复的传送项目）。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.GetTransferingProject(System.String)">
            <summary>
            获取正在发送或接收中的文件传送项目（包括未被接收方回复的传送项目）。如果不存在目标项目，则返回null。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IBaseFileController.GetTransferingProgress(System.String)">
            <summary>
            获取正在发送或接收中的文件传送项目的传送进度。如果不存在目标项目或传送尚未开始，则返回null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.IFileController4Render.FileTransferingEvents">
            <summary>
            该事件接口暴露了所有正在传送文件（夹）的实时状态。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.FileTransfering.IFileController4Render.FileRequestSent">
            <summary>
            当发送了文件传送请求时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.FileTransfering.IFileController4Render.FileRequestReceived">
            <summary>
            当文件接收方收到了来自发送方发送文件（夹）的请求时，触发此事件。该事件将在后台线程中触发，如果处理该事件时需要刷新UI，则需要转发到UI线程。
            当接收方确定要接收或拒绝文件时，请调用BeginReceiveFile方法或RejectFile方法。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IFileController4Render.RejectFile(System.String)">
            <summary>
            接收方如果拒绝接收文件（夹）或流，则调用该方法。
            </summary>
            <param name="projectID">文件传送项目的编号</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IFileController4Render.CancelTransfering(System.String)">
            <summary>
            主动取消正在发送或接收的文件（夹）（包括未被接收方回复的传送项目），并通知对方。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IFileController4Render.BeginReceiveFile(System.String,System.String)">
            <summary>
            接收方如果同意接收文件（夹）或流，则调用该方法。
            </summary>
            <param name="projectID">文件传送项目的编号</param>
            <param name="savePath">存储文件（夹）的路径。请特别注意，如果已经存在同名的文件（夹），将覆盖之。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.IFileController4Render.GetProject(System.String)">
            <summary>
            获取传送的文件项目。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.FileTransferingHelper.GetDescription4DisrupttedType(OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType,System.Boolean)">
            <summary>
            获取FileTransDisrupttedType枚举值对应的中文描述。
            </summary>  
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.Passive.FileOutter.AutoReUploadFile">
            <summary>
            当上传文件到服务器因为连接断开而中断时，等网络恢复后是否自动重新上传？
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.FileTransfering.Passive.IFileOutter">
            <summary>
            用于文件传送及其相关控制消息。    
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.FileTransfering.Passive.IFileOutter.AutoReUploadFile">
            <summary>
            当上传文件到服务器因为连接断开而中断时，等网络恢复后是否自动重新上传？ 
            默认值：true。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.Passive.IFileOutter.BeginReceiveFileFromServer(System.String,System.String,System.IO.Stream)">
            <summary>
            【群集】接收方如果同意接收来自群集中某个服务端的文件（夹）或流，则调用该方法，该方法会将接收的数据写入到目标流（saveStream）中。
            </summary>
            <param name="serverToken">根据此Token可以定位到群集中的AS</param>
            <param name="projectID">文件传送项目的编号</param>
            <param name="saveStream">存储文件的流。请特别注意，调用该方法前请保证流已经被打开；另外，接收中断或完成，OMCS.Communication.Basic并不会关闭该流。</param>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.Passive.IFileOutter.BeginReceiveFileFromServer(System.String,System.String,System.String)">
            <summary>
            【群集】接收方如果同意接收来自群集中某个服务端的文件（夹）或流，则调用该方法。
            </summary>
            <param name="serverToken">根据此Token可以定位到群集中的AS</param>
            <param name="projectID">文件传送项目的编号</param>
            <param name="savePath">存储文件（夹）的路径。请特别注意，如果已经存在同名的文件（夹），将覆盖之。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.Passive.IFileOutter.RejectFileFromServer(System.String,System.String)">
            <summary>
            【群集】接收方如果拒绝接收来自群集中某个服务端的文件（夹）或流，则调用该方法。
            </summary>
            <param name="serverToken">根据此Token可以定位到群集中的AS</param>
            <param name="projectID">文件传送项目的编号</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.FileTransfering.Passive.IFileOutter.CancelReceivingFromServer(System.String,System.String)">
            <summary>
            【群集】当取消接收正在传送的来自群集中某个服务端的文件（夹）或流，则调用该方法。
            </summary>
            <param name="serverToken">根据此Token可以定位到群集中的AS</param>
            <param name="projectID">文件传送项目的编号</param>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom">
            <summary>
            所有基本消息的类型空间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.GetMyIPE">
            <summary>
            获取自己的IP地址信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.PingByServer">
            <summary>
            ping 服务器或其他在线用户(通过服务器中转)。协议为PingContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.PingAck">
            <summary>
            对ping的回复。协议为PingContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.HeartBeat">
            <summary>
            心跳消息
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.BeingPushedOutNotify">
            <summary>
            BeingPushedOutNotify 当某在线用户被同名用户挤掉时，将给被挤掉的用户发送该通知。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.KickOut">
            <summary>
            KickOut 请求服务器将某个在线用户踢出（发出BeingKickedOutNotify通知，断开连接）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.BeingKickedOutNotify">
            <summary>
            BeingKickedOutNotify 当某在线用户被踢出时（可能是由别的用户请求，也可能是服务端主动踢出BasicController.KickOut()），将给被踢出的用户发送该通知。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.GetAllOnlineUsers">
            <summary>
            获取所有在线用户列表。回复的消息主体为ResUsersContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.QueryOnline">
            <summary>
            查询用户是否在线。请求协议为QueryOnlineContract，回复协议为ResOnlineContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.Logon">
            <summary>
            登陆。请求协议为ReqLogonContract，回复协议为ResLogonContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.GetUserIPE">
            <summary>
            获取用户的IP地址信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.QueryOnlines">
            <summary>
            查询用户是否在线。请求协议为QueryOnlineContract，回复协议为ResOnlineContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.BasicMessageTypeRoom.PingByP2PChannel">
            <summary>
            其他在线用户。协议为PingContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.ReqLogonContract.SystemToken">
            <summary>
            系统标志。用于验证客户端是否与服务端属于同一系统。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.UserIpeResContract">
            <summary>
            UserIpeResContract 返回用户的IPE。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Application.Basic.LogonResult.Succeed">
            <summary>
            登录成功
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Application.Basic.LogonResult.Failed">
            <summary>
            登录失败
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Application.Basic.LogonResult.HadLoggedOn">
            <summary>
            已在其它地方登陆
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Application.Basic.LogonResult.VersionMismatched">
            <summary>
            客户端与服务端的框架不匹配(比如版本不一致或授权帐号不一致)。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.LogonResponse">
            <summary>
            登录回复。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.LogonResponse.FailureCause">
            <summary>
            当LogonResult为Failed时，指明失败的原因。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.Passive.BasicPassiveProcesser">
            <summary>
            客户端用于处理所有基本消息。。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.Passive.BasicPassiveProcesser.MessageTransceiver">
            <summary>
            用于发送异步消息处理的结果。如果AsynMessageQueueEnabled为false，则该属性不需要设置。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.Passive.HeartBeater">
            <summary>
            HeartBeater 用于定时向服务器发送Check "心跳" 消息。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter">
            <summary>
            用于客户端向服务器发送Basic信息，并发布与自己或好友状态相关的事件。   
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.BeingPushedOut">
            <summary>
             当自己被同名用户挤掉线时，触发此事件。此时，客户端引擎已被Dispose。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.BeingKickedOut">
            <summary>
             当自己被服务端踢出掉线时，触发此事件。此时，客户端引擎已被Dispose。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.PingByServer(System.String)">
            <summary>
            ping其他在线用户(通过服务器中转)。
            如果目标用户不在线，将抛出Timeout异常。
            </summary>
            <param name="targetUserID">要Ping的目标用户ID</param>
            <returns>ping耗时，单位毫秒</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.PingByP2PChannel(System.String)">
            <summary>
            ping其他在线用户（通过P2P通道，回复仍是由服务器中转）。
            如果P2P通道不存在，则抛出通道不存在的异常。如果目标用户不在线，将抛出Timeout异常。
            </summary>
            <param name="targetUserID">要Ping的目标用户ID</param>
            <returns>ping耗时，单位毫秒</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.GetMyIPE">
            <summary>
            获取自己的IPE。(通常是经过NAT之后的IPE)
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.GetUserIPE(System.String)">
            <summary>
            获取某个在线用户的IPE。如果用户不在线，则返回null。【适用于OMCS.Communication.Platform平台】
            </summary>
            <returns>通常是经过NAT之后的IPE</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.GetAllOnlineUsers">
            <summary>
            获取当前AS上的所有在线的用户列表。【该方法仅仅用于demo和测试】
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.IsUserOnline(System.String)">
            <summary>
            查询用户是否在线。【适用于OMCS.Communication.Platform平台】
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.IsUserOnline(System.Collections.Generic.List{System.String})">
            <summary>
            查询用户是否在线。【适用于OMCS.Communication.Platform平台】
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.Ping">
            <summary>
            ping服务器。在应用层模拟ping，比普通的ICMP的ping大一些（如8-10ms）。
            </summary>
            <returns>ping耗时，单位毫秒</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.KickOut(System.String)">
            <summary>
            命令服务端将目标用户踢出。如果目标用户不在当前AS上，则直接返回。
            </summary>
            <param name="targetUserID">要踢出的用户ID</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Passive.IBasicOutter.SendHeartBeatMessage">
            <summary>
            向服务器发送心跳消息。被框架OMCS.Communication.Plus.Application.Basic.Passive.HeartBeater使用。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.Server.BasicMessageProcesser">
            <summary>
            BasicMessageProcesser 提供以下特性：
            (1)登录验证（结合RelogonMode）、登出（关闭连接）、心跳（自动回复）
            (2)当某用户超时，先向其发送TimeoutNotify，然后关闭对应的连接。
            (3)当某用户被挤掉线时，先向其发送BeingPushedOutNotify，然后关闭对应的连接。
            (4)当新的同名连接被忽略时，关闭新连接。
            (5)用户上下线时，通知好友。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.Server.BasicMessageProcesser.UserManager">
            <summary>
            本地用户管理器
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Basic.Server.BasicMessageProcesser.P2PEnabled">
            <summary>
            客户端是否开启P2P。即使框架授权了P2P功能，也可以通过该属性关闭P2P。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.Server.IBasicController">
            <summary>
            直接在从服务端发出相关控制指令（如踢人等）。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Server.IBasicController.KickOut(System.String)">
            <summary>
            将目标用户从当前AS中踢出，并关闭对应的连接。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.Server.ISpecUserManager">
            <summary>
            2023.04.21 OMCS服务端扩展支持接监控摄像头时，因为监控摄像头并不是作为标准的OMCS客户端登录的，所以，在UserManager看来是不在线的。
            该接口用于告知哪些监控摄像头是在线的。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Basic.Server.IBasicHandler.VerifyUser(System.String,System.String,System.String,System.String@)">
            <summary>
            客户端登陆验证。
            </summary>   
            <param name="userID">登陆用户账号</param>
            <param name="systemToken">系统标志。用于验证客户端是否与服务端属于同一系统。</param>
            <param name="password">登陆密码</param>
            <param name="failureCause">如果登录失败，该out参数指明失败的原因</param>
            <returns>如果密码和系统标志都正确则返回true；否则返回false。</returns>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Basic.Server.EmptyBasicHandler">
            <summary>
            null object 模式的IBasicHandler实现。
            VerifyUser方法始终返回true。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.BlobFragmentContract">
            <summary>
            大数据块的某个片段。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.BlobFragmentContract.BlobID">
            <summary>
            大数据块唯一编号。从1开始计数，逐个递增。对于那些只有一个Fragment的Blob，可以将BlobID设置为-1，以减少编号的使用。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.BlobFragmentContract.FragmentIndex">
            <summary>
            片段的索引。从0开始计数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.BlobFragmentContract.Fragment">
            <summary>
            片段内容。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.BlobFragmentContract.IsLast">
            <summary>
            是否为最后一个片段。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Contacts.ContactsMessageTypeRoom">
            <summary>
            与联系人操作相关的所有消息类型定义。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Contacts.ContactsMessageTypeRoom.ContactsOfflineNotify">
            <summary>
            通知其联系人某成员掉线（S->C）。对应协议为UserContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Contacts.ContactsMessageTypeRoom.ContactsConnectedNotify">
            <summary>
             通知其联系人某成员上线（S->C）。对应协议为UserContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Contacts.ContactsMessageTypeRoom.GetContracts">
            <summary>
            获取联系人列表。请求协议为ReqFriendsContract，回复的消息主体为ResFriendsContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Contacts.BroadcastContract.InformationType">
            <summary>
            广播信息的类型。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Contacts.Groupmates">
            <summary>
            某个组所有的成员。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Contacts.ReqContactsContract.JustOnline">
            <summary>
            如果为true，表示只请求在线的好友列表；否则，请求所有好友列表。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Contacts.Passive.ContactsOutter">
            <summary>
            IGroupOutter 的实现。
            (1)内置组成员及其状态缓存。
            (2)尽可能使用P2P通道发送广播信息。
            (3)在从服务器获取组成员时，尝试与在线的组成员创建P2P连接。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Contacts.Passive.IContactsOutter">
            <summary>
            用于客户端发送与联系人操作相关的信息和广播。    
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.Contacts.Passive.IContactsOutter.ContactsConnected">
            <summary>
            当组成员上线时，触发该事件。参数：UserID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.Contacts.Passive.IContactsOutter.ContactsOffline">
            <summary>
            当组成员下线时，触发该事件。参数：UserID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.Contacts.Passive.IContactsOutter.BroadcastReceived">
            <summary>
            当接收到某个组内的广播消息（包括大数据块信息）时，触发此事件。参数：broadcasterID - groupID - broadcastType - broadcastContent - tag。
            如果broadcasterID为null，表示是服务端发送的广播。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Contacts.Passive.IContactsOutter.GetAllOnlineContacts">
            <summary>
            获取所有在线的联系人。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Contacts.Passive.IContactsOutter.GetContacts">
            <summary>
            获取联系人列表。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Contacts.Passive.IContactsOutter.GetGroupMembers(System.String)">
            <summary>
            【跨服】获取组的成员。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Contacts.Passive.IContactsOutter.Broadcast(System.String,System.Int32,System.Byte[],System.String,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            【跨服】在组内广播信息。
            </summary>
            <param name="groupID">接收广播信息的组ID</param>
            <param name="broadcastType">广播信息的类型</param>
            <param name="broadcastContent">信息的内容</param>       
            <param name="tag">附加信息</param>   
            <param name="action">当通道繁忙时采取的操作。</param>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Contacts.Passive.IContactsOutter.BroadcastBlob(System.String,System.Int32,System.Byte[],System.String,System.Int32)">
            <summary>
            【跨服】在组内广播大数据块信息。直到数据发送完毕，该方法才会返回。若不想阻塞调用线程，可考虑使用异步广播重载方法。
            </summary>
            <param name="groupID">接收广播信息的组ID</param>
            <param name="broadcastType">广播信息的类型</param>
            <param name="blobContent">大数据块的内容</param>      
            <param name="tag">附加信息</param>   
            <param name="fragmentSize">分片传递时，片段的大小</param>         
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Contacts.Passive.IContactsOutter.BroadcastBlob(System.String,System.Int32,System.Byte[],System.String,System.Int32,OMCS.Communication.Plus.Application.ResultHandler,System.Object)">
            <summary>
            【跨服】在组内异步广播大数据块信息（当前调用线程立即返回）。
            </summary>
            <param name="groupID">接收广播信息的组ID</param>
            <param name="broadcastType">广播信息的类型</param>
            <param name="blobContent">大数据块的内容</param>  
            <param name="tag">附加信息</param>   
            <param name="fragmentSize">分片传递时，片段的大小</param>         
            <param name="handler">当发送任务结束时，将回调该处理器</param>
            <param name="handlerTag">将回传给ResultHandler的参数</param>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Contacts.Server.ContactsMessageProcesser">
            <summary>
            与OMCS.Communication.Platform结合：
            (1)由事件（比如加入组）发生的宿主服务器（即导致事件发生的用户所在的服务器）负责通知群内成员或群友。
            (2)如果事件是由平台或服务端触发，同理，则由目标用户所在的服务器负责通知。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Contacts.Server.ContactsMessageProcesser.UserManager">
            <summary>
            本地用户管理器
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Contacts.Server.ContactsMessageProcesser.PlatformUserManager">
            <summary>
            平台用户管理器
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Contacts.Server.IContactsController">
            <summary>
            联系人控制器。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.Contacts.Server.IContactsController.BroadcastReceived">
            <summary>
            当服务端接收到要转发的广播消息时（BroadcastBlobListened属性决定了是否包括blob广播），触发此事件。参数：broadcasterID - groupID - broadcastType - broadcastContent - tag
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.Contacts.Server.IContactsController.BroadcastFailed">
            <summary>
            当因为某个组成员不在线而导致对其广播失败时（不包括Blob及其片段信息），将触发该事件。参数：UserID（组成员ID） - BroadcastInformation。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Contacts.Server.IContactsController.BroadcastBlobListened">
            <summary>
            是否监听来自客户端的Blob广播，默认值为false。如果为true，即使客户端广播的是blob消息，也将触发BroadcastReceived事件（将需要更多的内存）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Contacts.Server.IContactsController.ContactsDisconnectedNotifyEnabled">
            <summary>
            用户下线时，是否通知相关联系人。默认值为true。        
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Contacts.Server.IContactsController.ContactsConnectedNotifyEnabled">
            <summary>
            用户上线时，是否通知相关联系人。默认值为true。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Contacts.Server.IContactsController.UseContactsNotifyThread">
            <summary>
            联系人上下线通知是否使用单独的线程。默认值为false。       
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Contacts.Server.IContactsController.Broadcast(System.String,System.Int32,System.Byte[],System.String,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            在组内广播信息。
            </summary>        
            <param name="groupID">接收广播信息的组ID</param>
            <param name="broadcastType">广播信息的类型</param>
            <param name="broadcastContent">广播的内容</param>      
            <param name="tag">附加信息</param>   
            <param name="action">当通道繁忙时采取的操作。</param> 
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Contacts.Server.IContactsController.BroadcastBlob(System.String,System.Int32,System.Byte[],System.String,System.Int32)">
            <summary>
            在组内广播大数据块信息。直到数据发送完毕，该方法才会返回。如果担心长时间阻塞调用线程，可考虑异步调用本方法。
            </summary>
            <param name="groupID">接收广播信息的组ID</param>
            <param name="broadcastType">广播信息的类型</param>
            <param name="blobContent">大数据块的内容</param>      
            <param name="tag">附加信息</param>   
            <param name="fragmentSize">分片传递时，片段的大小</param>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Contacts.Server.IContactsController.BroadcastBlob(System.String,System.Int32,System.Byte[],System.String,System.Int32,OMCS.Communication.Plus.Application.ResultHandler,System.Object)">
            <summary>
            在组内广播大数据块信息。直到数据发送完毕，该方法才会返回。如果担心长时间阻塞调用线程，可考虑异步调用本方法。
            </summary>
            <param name="groupID">接收广播信息的组ID</param>
            <param name="broadcastType">广播信息的类型</param>
            <param name="blobContent">大数据块的内容</param>      
            <param name="tag">附加信息</param>   
            <param name="fragmentSize">分片传递时，片段的大小</param>        
            <param name="handler">当发送任务结束时，将回调该处理器</param>
            <param name="handlerTag">将回传给ResultHandler的参数</param>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Contacts.Server.IContactsManager">
            <summary>
            联系人管理器接口。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Contacts.Server.IContactsManager.OnUserOffline(System.String)">
            <summary>
            当用户下线时，ESF通过此方法回调联系人管理器。
            【有些动态关系可能需要当用户下线的时候解除，为了在解除之前能通知其对应的联系人，所以，ESF会在完成下线通知后，才回调此方法】
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Contacts.Server.IContactsManager.GetContacts(System.String)">
            <summary>
            获取用户的相关联系人。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.Contacts.Server.IContactsManager.GetGroupMemberList(System.String)">
            <summary>
            获取目标组的所有成员。
            </summary>        
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.BinaryInformationContract.InformationType">
            <summary>
            当MessageType为CustomizeInfoMessageTypeRoom.Response时，忽略该属性。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom">
            <summary>
            所有与自定义信息相关的消息类型的空间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.InformationByPost">
            <summary>
            信息。C->S 或 S->C 或 C->C。协议为BinaryInformationContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.InformationBySend">
            <summary>
            信息。C->S 或 S->C 或 C->C。协议为BinaryInformationContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.Request">
            <summary>
            请求信息。 C->S 或 C->C 。协议为BinaryInformationContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.Response">
            <summary>
            对应request的应答信息。 C->C 或 S->C 或 C->S。回复协议为BinaryInformationContract。如果消息体为null，则表示对方在处理请求时抛出了异常。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.InformationNeedAck">
            <summary>
            需要进行ACK回复确认的信息。C->S 或 S->C 或 C->C。协议为BinaryInformationContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.Ack">
            <summary>
            对InformationCertainly类型的信息的确认回复。协议体为空。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.BlobInformation">
            <summary>
            大块二进制信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.BlobByRapidEngine">
            <summary>
            直接通过Rapid引擎发送的消息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.GetClientTimeRequest">
            <summary>
            S->C
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.GetClientTimeResponse">
            <summary>
            C->S
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.BlobQuery">
            <summary>
            大块二进制信息Query。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.CustomizeMessageTypeRoom.BlobQueryResult">
            <summary>
            大块二进制信息Query的回复。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.AgileInformationSerializer">
            <summary>
            灵活的自定义信息序列化器。
            如果自定义信息协议从BaseSerializeContract继承，则使用.NET自带的序列化器进行序列化（会严格要求各方使用的加密的协议dll为同一版本）；否则使用CompactPropertySerializer进行序列化。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.BaseInformationTypes">
            <summary>
            自定义信息类型空间的基类。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.BaseInformationTypes.StartKey">
            <summary>
            当前信息类型空间的起始值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.BaseInformationTypes.MaxKeyValue">
            <summary>
            当前信息类型空间的最大值。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.ComplexCustomizeHandler">
            <summary>
            用于将客户端的多个ICustomizeHandler整合起来。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.HandingException">
            <summary>
            在处理Query系列方法发出的的请求时，如果处理方出现未捕获的异常，则请求方的Query调用会抛出HandingException。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler">
            <summary>
            自定义信息处理器接口。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler.HandleInformation(System.String,System.Int32,System.Byte[])">
            <summary>
            处理接收到的自定义信息（包括大数据块信息）。
            </summary>
            <param name="sourceUserID">发送该信息的用户ID。如果为null，表示信息发送者为服务端。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler.HandleQuery(System.String,System.Int32,System.Byte[])">
            <summary>
            处理接收到的请求并返回应答信息。
            </summary>
            <param name="sourceUserID">发送该请求信息的用户ID。如果为null，表示信息发送者为服务端。</param>     
            <param name="informationType">自定义请求信息的类型</param>  
            <param name="info">请求信息</param>
            <returns>应答信息</returns>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.EmptyCustomizeHandler">
            <summary>
            不做任何处理的CustomizeHandler。NullObject模式。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.IIntegratedCustomizeHandler">
            <summary>
            能够被ComplexCustomizeHandler集成的ICustomizeHandler。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.IIntegratedCustomizeHandler.CanHandle(System.Int32)">
            <summary>
            当前的处理器能否处理目标类型的自定义信息。
            </summary>
            <param name="informationType">自定义信息的类型</param>
            <returns>能处理？</returns>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.AgileP2PCustomizeOutter">
            <summary>
            智能P2P消息（Client->Client）发送器。
            当Client发送消息给另外一个Client时，如果存在P2P通道，则比较P2P通道和经服务器中转哪种模型更快，自动选择更快的通道。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.AgileP2PCustomizeOutter.PingTestSpanInSecs">
            <summary>
            定时进行ping测试以及自动切换通道的时间间隔，单位：秒。默认值为60。
            如果设置为小于等于0，则表示不进行定时ping测试，也不会自动切换通道。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.AgileP2PCustomizeOutter.TestSpeed(System.String)">
            <summary>
            P2P更快?
            </summary>     
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.AgileP2PCustomizeOutter.SwitchChannel(System.String)">
            <summary>
            手动切换通道。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.AgileP2PCustomizeOutter.IsUsingP2PChannel(System.String)">
            <summary>
            到目标用户是否使用的是P2P通道。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.AgileP2PCustomizeOutter.Send(System.String,System.Int32,System.Byte[],System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            向在线用户发送信息。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="action">当通道繁忙时所采取的动作</param>  
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.AgileP2PCustomizeOutter.SendBlob(System.String,System.Int32,System.Byte[],System.Int32)">
            <summary>
            向在线用户或服务器发送大的数据块信息。直到数据发送完毕，该方法才会返回。如果担心长时间阻塞调用线程，可考虑异步调用本方法。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID。如果为null，表示接收者为服务器。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="blobInfo">大的数据块信息</param>  
            <param name="fragmentSize">分片传递时，片段的大小</param>  
        </member>
        <member name="F:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.CustomizeOutter.queryBlobResultManager">
            <summary>
            用于管理QueryBlob的回复结果。key：blob请求的最后一个分块消息的MessageID ； Value：Query的结果
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.CustomizePassiveProcesser">
            <summary>
            处理所有"自定义信息"的消息的客户端处理器。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter">
            <summary>
            该接口用于向服务器或其它在线用户发送自定义信息、同步调用请求。    
            zhuweisky 2010.08.17
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.Send(System.Int32,System.Byte[])">
            <summary>
            向服务器发送信息。
            </summary>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.Send(System.String,System.Int32,System.Byte[])">
            <summary>
            向在线用户targetUserID发送信息。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>      
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.Query(System.Int32,System.Byte[])">
            <summary>
            向服务器提交请求信息，并返回服务器的应答信息。如果超时没有应答则将抛出Timeout异常。
            </summary>      
            <param name="informationType">自定义请求信息的类型</param>
            <param name="info">请求信息</param>
            <returns>服务器的应答信息</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.QueryBlob(System.Int32,System.Byte[])">
            <summary>
            向服务器提交请求信息，并返回服务器的应答信息。如果超时没有应答则将抛出Timeout异常。
            </summary>      
            <param name="informationType">自定义请求信息的类型</param>
            <param name="info">请求信息</param>
            <returns>服务器的应答信息</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.Send(System.String,System.Int32,System.Byte[],System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            向在线用户或服务器发送信息。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID。如果为null，表示接收者为服务器。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="action">当通道繁忙时所采取的动作</param>  
            <returns>如果成功发送，将返回true；否则，（比如丢弃）返回false。</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.Send(System.String,System.Int32,System.Byte[],System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy,OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ChannelMode)">
            <summary>
            向在线用户或服务器发送信息。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID。如果为null，表示接收者为服务器。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="action">当通道繁忙时所采取的动作</param>  
            <param name="mode">通道选择模型。如果接收者为服务器，则忽略该参数。</param>
            <returns>如果成功发送，将返回true；否则，（比如丢弃）返回false。</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.SendByP2PChannel(System.String,System.Int32,System.Byte[],OMCS.Communication.Basic.Passive.ActionTypeOnNoP2PChannel,System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            通过可靠的P2P通道向在线用户targetUserID发送信息。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID，不能为null。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>  
            <param name="actionType">当P2P通道不存在时，采取的操作</param>
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="action">当通道繁忙时所采取的动作</param>  
            <returns>如果成功发送，将返回true；否则，（比如丢弃）返回false。</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.TransferByServer(System.String,System.Int32,System.Byte[])">
            <summary>
            即使与目标用户之间有可靠的P2P通道存在，也要通过服务器转发信息。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID，不能为null。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>         
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.SendCertainly(System.String,System.Int32,System.Byte[])">
            <summary>
            向在线用户或服务器发送信息，并等待其ACK。当前调用线程会一直阻塞，直到收到ACK；如果超时都没有收到ACK，则将抛出TimeoutException。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID。如果为null，表示信息接收者为服务端。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>      
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.SendCertainly(System.String,System.Int32,System.Byte[],OMCS.Communication.Plus.Application.ResultHandler,System.Object)">
            <summary>
            向在线用户或服务器发送信息。当前调用线程会立即返回。当收到ACK或者超时都没有收到ACK，将回调ResultHandler。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID。如果为null，表示信息接收者为服务端。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>     
            <param name="ackHandler">被回调的处理器</param>
            <param name="tag">携带的状态数据，将被传递给回调函数handler</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.SendBlob(System.String,System.Int32,System.Byte[],System.Int32)">
            <summary>
            向在线用户或服务器发送大的数据块信息。直到数据发送完毕，该方法才会返回。如果担心长时间阻塞调用线程，可考虑异步调用本方法。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID。如果为null，表示接收者为服务器。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="blobInfo">大的数据块信息</param>  
            <param name="fragmentSize">分片传递时，片段的大小</param>  
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.SendBlob(System.String,System.Int32,System.Byte[],System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ChannelMode)">
            <summary>
            通过P2P通道向在线用户发送大的数据块信息。直到数据发送完毕，该方法才会返回。如果担心长时间阻塞调用线程，可考虑异步调用本方法。
            </summary>
            <param name="targetUserID">接收消息的目标用户ID。如果为null，表示接收者为服务器。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="blobInfo">大的数据块信息</param>  
            <param name="fragmentSize">分片传递时，片段的大小</param>  
            <param name="mode">通道选择模型。如果接收者为服务器，则忽略该参数。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.Query(System.String,System.Int32,System.Byte[])">
            <summary>
            向在线目标用户或服务器提交请求信息，并返回应答信息。如果目标用户不在线，或超时没有应答则将抛出TimeoutException。如果对方在处理请求时出现未捕获的异常，则该调用会抛出HandingException。
            </summary>      
            <param name="targetUserID">接收并处理请求消息的目标用户ID。如果为null，表示信息接收者为服务端。</param>
            <param name="informationType">自定义请求信息的类型</param>
            <param name="info">请求信息</param>
            <returns>应答信息</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ICustomizeOutter.Query(System.String,System.Int32,System.Byte[],OMCS.Communication.Plus.Application.CallbackHandler,System.Object)">
            <summary>
            回复异步调用。向在线目标用户或服务器提交请求信息，当收到应答信息或超时时，将回调CallbackHandler函数。
            </summary>      
            <param name="targetUserID">接收并处理请求消息的目标用户ID。如果为null，表示信息接收者为服务端。</param>
            <param name="informationType">自定义请求信息的类型</param>
            <param name="info">请求信息</param>
            <param name="handler">用于处理回复信息的处理器</param>
            <param name="tag">携带的状态数据，将被传递给回调函数handler</param>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ChannelMode">
            <summary>
            当Client发送消息给另外一个Client时，选择通道的模型。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ChannelMode.P2PChannelFirst">
            <summary>
            如果P2P通道存在，则使用P2P通道传送；否则，经过服务器中转。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ChannelMode.TransferByServer">
            <summary>
            经过服务器中转，不使用P2P通道。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Application.CustomizeInfo.Passive.ChannelMode.ByP2PChannel">
            <summary>
            使用P2P通道。如果P2P通道不存在，则丢弃消息。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.Server.CustomizeMessageProcesser">
            <summary>
            处理所有"自定义信息"的消息的服务端处理器。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.CustomizeInfo.Server.CustomizeMessageProcesser.UserManager">
            <summary>
            本地用户管理器
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController">
            <summary>
            服务端主动向用户发送/投递自定义信息以及同步调用客户端的控制接口。   
            zhuweisky 2010.08.17
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.TransmitFailed">
            <summary>
            当因为目标用户不在线而导致服务端转发自定义信息失败时（不包括Blob及其片段信息），将触发该事件。参数为转发失败的信息。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.InformationReceived">
            <summary>
            当服务端接收到来自客户端的信息时（包括转发的信息，但不包括Blob信息），触发此事件。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.Send(System.String,System.Int32,System.Byte[])">
            <summary>
            向ID为userID的在线用户发送信息。如果用户不在线，则直接返回。
            </summary>
            <param name="userID">接收消息的用户ID</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>          
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.SendCertainlyToLocalClient(System.String,System.Int32,System.Byte[])">
            <summary>
            向当前AS上的在线用户发送信息，并等待其ACK。当前调用线程会一直阻塞，直到收到ACK；如果超时都没有收到ACK，则将抛出Timeout异常。
            </summary>
            <param name="userID">接收消息的用户ID</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>          
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.SendCertainlyToLocalClient(System.String,System.Int32,System.Byte[],OMCS.Communication.Plus.Application.ResultHandler,System.Object)">
            <summary>
            向当前AS上的在线用户发送信息。当前调用线程会立即返回。当收到ACK或者超时都没有收到ACK，将回调ResultHandler。
            </summary>
            <param name="userID">接收消息的用户ID</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>          
            <param name="handler">被回调的处理器</param>
            <param name="tag">携带的状态数据，将被传递给回调函数handler</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.Send(System.String,System.Int32,System.Byte[],System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            向ID为userID的在线用户发送信息。如果用户不在线，则直接返回。
            </summary>
            <param name="userID">接收消息的用户ID</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>        
            <param name="post">是否采用Post模式发送消息</param>  
            <param name="action">当通道繁忙时所采取的动作</param>  
            <returns>如果成功发送，将返回true；否则，（比如丢弃）返回false。</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.SendBlob(System.String,System.Int32,System.Byte[],System.Int32)">
            <summary>
            向ID为userID的在线用户发送大数据块信息。直到数据发送完毕，该方法才会返回。如果担心长时间阻塞调用线程，可考虑异步调用本方法。
            </summary>
            <param name="userID">接收消息的用户ID</param>
            <param name="informationType">自定义信息类型</param>
            <param name="blobInfo">大数据块信息</param>
            <param name="fragmentSize">分片传递时，片段的大小</param>  
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.QueryLocalClient(System.String,System.Int32,System.Byte[])">
            <summary>
            询问当前AS的在线用户，并返回应答信息。如果超时没有应答则将抛出Timeout异常。如果客户端在处理请求时出现未捕获的异常，则该调用会抛出HandingException。
            </summary>      
            <param name="userID">接收并处理服务器询问的目标用户ID</param>
            <param name="informationType">自定义请求信息的类型</param>
            <param name="info">请求信息</param>
            <returns>客户端给出的应答信息</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.QueryLocalClient(System.String,System.Int32,System.Byte[],OMCS.Communication.Plus.Application.CallbackHandler,System.Object)">
            <summary>
            回复异步调用。当前AS的在线用户发送请求信息，当收到应答信息或超时时，将回调CallbackHandler函数。
            </summary>      
            <param name="userID">接收并处理服务器询问的目标用户ID</param>
            <param name="informationType">自定义请求信息的类型</param>
            <param name="info">请求信息</param>
            <param name="handler">用于处理回复信息的处理器</param>
            <param name="tag">携带的状态数据，将被传递给回调函数handler</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ICustomizeController.Post(System.String,System.Int32,System.Byte[],System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            发送有依赖关系的可丢弃的消息。
            （1）如果等待发送的消息个数大于discardPostingCount时，则丢弃当前消息。
            （2）当前数据是否依赖上一次发送的数据。如果依赖，当上一次数据被丢弃时，则直接丢弃当前消息。
            </summary>
            <param name="userID">接收消息的用户ID</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>     
            <param name="token4RecordPosting">消息计数标记</param>      
            <param name="sourceUserID">消息的发送者</param>
            <param name="discardPostingCount">当等待投递的消息数大于该值时，就丢弃消息。</param>     
            <param name="dependOnPre">当前数据是否依赖上一次发送的数据。如果依赖，当上一次数据被丢弃时，直接丢弃档期数据。</param>
            <returns>如果消息被丢弃，则返回false。【如果是群集中跨服发送，则即使返回true，也有可能数据在其它服务器上被丢弃】</returns>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CustomizeInfo.Server.ISpecServerCustomizeHandler">
            <summary>
            2023.04.11 OMCS服务端扩展支持接监控摄像头时，因为监控摄像头并不是作为标准的OMCS客户端登录的，所以，在UserManager看来是不在线的。该接口的目的是服务端可以替外接摄像头回应连接设备的Connect请求等等。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.DynamicGroup.DynamicGroupMessageTypeRoom">
            <summary>
            GroupMessageTypeRoom 与组操作相关的所有消息类型定义。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.DynamicGroup.DynamicGroupMessageTypeRoom.JoinGroup">
            <summary>
            请求加入组。对应协议为string,utf-8,groupID。回复协议为int,JoinGroupResult
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.DynamicGroup.DynamicGroupMessageTypeRoom.QuitGroup">
            <summary>
            请求退出组。对应协议为string,utf-8,groupID。没有回复。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.DynamicGroup.DynamicGroupMessageTypeRoom.SomeoneJoinGroupNotify">
            <summary>
            对组内通知新成员加入组。Server=>Client。对应协议为GroupNotifyContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.DynamicGroup.DynamicGroupMessageTypeRoom.SomeoneQuitGroupNotify">
            <summary>
            对组内通知某成员退出组。Server=>Client。对应协议为GroupNotifyContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.DynamicGroup.DynamicGroupMessageTypeRoom.PullIntoGroupNotify">
            <summary>
            自己被拉入某组的通知。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.DynamicGroup.DynamicGroupMessageTypeRoom.RemoveFromGroupNotify">
            <summary>
            自己被从某组中移除。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.DynamicGroup.DynamicGroupMessageTypeRoom.SomeonePullIntoGroupNotify">
            <summary>
            其他人被拉入某组。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.DynamicGroup.DynamicGroupMessageTypeRoom.SomeoneRemoveFromGroupNotify">
            <summary>
            其他人被移出某组。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.DynamicGroup.DynamicGroupMessageTypeRoom.GroupmateOfflineNotify">
            <summary>
            对组内通知某成员掉线（S->C）。对应协议为UserContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.DynamicGroup.DynamicGroupMessageTypeRoom.GroupmateOnlineNotify">
            <summary>
            对组内通知某成员掉线（S->C）。对应协议为UserContract。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.DynamicGroup.GroupNotifyContract">
            <summary>
            服务器给客户端的通知。
            </summary>	
        </member>
        <member name="P:OMCS.Communication.Plus.Application.DynamicGroup.BroadcastContract2.InformationType">
            <summary>
            广播信息的类型。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.DynamicGroup.Passive.DynamicGroupOutter">
            <summary>
            IDynamicGroupOutter 的实现。    
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter">
            <summary>
            用于客户端向服务器发送与动态组相关的信息，或从服务器获取动态组（自己参与其中的）的相关通知。    
            1.动态组分为两种类型：组员掉线就从组中移除，或者不移除（默认值）。服务端通过IDynamicGroupController.SetGroupActionType方法可以设定这个类型。
            2.巧妙使用Tag。通过SetGroupTag方法，可以设定目标组携带的Tag（比如，群名称、群公告等），并会同步到所有组员。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.BroadcastReceived">
            <summary>
            当接收到某个组内的广播消息时，触发此事件。参数：broadcasterID - groupID - broadcastType - broadcastContent - tag。
            如果broadcasterID为null，表示是服务端发送的广播。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.GroupmateOffline">
            <summary>
            当某个动态组的组友掉线时，触发此事件。        
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.GroupmateOnline">
            <summary>
            当某个动态组的组友上线时，触发此事件。        
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.SomeoneJoinGroup">
            <summary>
            当新成员加入组时，触发该事件。参数：groupID - memberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.SomeoneQuitGroup">
            <summary>
            当成员退出组时，触发该事件。参数：groupID - memberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.SomeoneBePulledIntoGroup">
            <summary>
            当某人被拉入组时，触发该事件。参数：groupID - memberIDList - operatorID。
            当OperatorID为null时，表示操作者是服务端。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.SomeoneBeRemovedFromGroup">
            <summary>
            当某人被移除组时，触发该事件。参数：groupID - memberIDList - operatorID
            当OperatorID为null时，表示操作者是服务端。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.BePulledIntoGroup">
            <summary>
            当自己被拉入组时，触发该事件。参数：groupInformation - operatorID。
            当OperatorID为null时，表示操作者是服务端。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.BeRemovedFromGroup">
            <summary>
            当自己被移除组时，触发该事件。参数：groupID - operatorID
            当OperatorID为null时，表示操作者是服务端。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.BeInvitedJoinGroup">
            <summary>
            当收到加入组的邀请时，触发该事件。参数：GroupInformation - OperatorID。        
            注意：收到邀请时，自己尚未加入组。若接受邀请，则可以调用JoinGroup加入目标组。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.GroupTagChanged">
            <summary>
            当目标组的Tag发生变化时，触发该事件。GroupID - newTag - OperatorID
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.Broadcast(System.String,System.Int32,System.Byte[],System.String)">
            <summary>
            在目标组内广播消息。
            </summary>
            <param name="groupID">目标组ID</param>
            <param name="broadcastType">广播消息类型</param>
            <param name="broadcastContent">广播消息内容</param>
            <param name="tag">Tag</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.GetMyGroups">
            <summary>
            获取我的所有组。
            </summary>
            <returns>组ID列表</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.GetGroupInformation(System.String,System.Boolean)">
            <summary>
            获取组信息。
            </summary>
            <param name="groupID">目标组ID</param>
            <param name="useLocalCache">是否使用本地缓存？如果为true且本地有缓存，则直接从本地缓存获取组信息。</param>
            <returns></returns>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.GetOnlineGroupmates">
            <summary>
            获取所有在线组友的列表。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.SetGroupTag(System.String,System.String)">
            <summary>
            设置目标组的Tag。其它组成员将收到GroupTagChanged事件通知。
            前提：目标组必须存在，否则将忽略该调用。
            </summary>
            <param name="groupID">目标组ID</param>
            <param name="tag">新的tag</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.JoinGroup(System.String)">
            <summary>
            加入组。
            </summary>  
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.QuitGroup(System.String)">
            <summary>
            退出组。
            </summary>  
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.PullIntoGroup(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            将用户拉入组。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.RemoveFromGroup(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            将用户从动态组中移除。
            </summary>   
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.InviteJoinGroup(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            邀请用户加入动态组。被邀请的用户将会触发BeInvitedJoinGroup事件。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Passive.IDynamicGroupOutter.ClearLocalCache">
            <summary>
            清空本地缓存的所有组信息。（在掉线重连成功后，本地缓存有可能已经过时）
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.DynamicGroup.Server.DynamicGroupManager">
            <summary>
            动态组管理器。
            （1）所有的组员都是在线的。只要组员掉线，则将其从组中移除。
            （2）如果要加入的目标组不存在，则自动创建目标组，并加入。
            （3）当某个组中不存在任何成员时（比如都退出），则销毁组。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Server.DynamicGroupManager.GetGroupMembers(System.String)">
            <summary>
            返回的集合不可修改。
            </summary>  
        </member>
        <member name="T:OMCS.Communication.Plus.Application.DynamicGroup.Server.DynamicGroupProcesser">
            <summary>
            与OMCS.Communication.Platform结合：
            (1)由事件（比如加入组）发生的宿主服务器（即导致事件发生的用户所在的服务器）负责通知群内成员或群友。
            (2)如果事件是由平台或服务端触发，同理，则由目标用户所在的服务器负责通知。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.DynamicGroup.Server.DynamicGroupProcesser.UserManager">
            <summary>
            本地用户管理器
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.DynamicGroup.Server.DynamicGroupProcesser.PlatformDataProvider">
            <summary>
            当启用OMCS.Communication.Platform服务器群集时，需要设置该属性。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController">
            <summary>
            动态组控制器。
            1.动态组分为两种类型：组员掉线就从组中移除，或者不移除（默认值）。服务端通过IDynamicGroupController.SetGroupActionType方法可以设定这个类型。
            2.巧妙使用PresetGroup方法，可以在服务端启动的时候，就预设一些已经存在的组（比如从DB中加载的群）。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.BroadcastReceived">
            <summary>
            当服务端接收到要在组内转发的广播消息时，触发此事件。参数：broadcasterID - groupID - broadcastType - broadcastContent - tag
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.GroupCreated">
            <summary>
            第一个成员加入组将导致动态组被创建，触发该事件。参数：groupID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.GroupDestroyed">
            <summary>
            最后一个成员退出组将导致动态组被销毁，触发该事件。参数：groupID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.SomeoneJoinGroup">
            <summary>
            当新成员加入组时，触发该事件。参数：groupID - memberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.SomeoneQuitGroup">
            <summary>
            当成员退出组时，触发该事件。参数：groupID - memberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.SomeoneBePulledIntoGroup">
            <summary>
            当某些人被拉入组时，触发该事件。参数：groupID - memberIDs - operatorID。
            当OperatorID为null时，表示操作者是服务端。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.SomeoneBeRemovedFromGroup">
            <summary>
            当某些人被移除组时，触发该事件。参数：groupID - memberIDs - operatorID
            当OperatorID为null时，表示操作者是服务端。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.GroupTagChanged">
            <summary>
            当目标组的Tag发生变化时，触发该事件。groupID - newTag - operatorID
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.Broadcast(System.String,System.Int32,System.Byte[],System.String)">
            <summary>
            在组内广播信息。
            </summary>        
            <param name="groupID">接收广播信息的组ID</param>
            <param name="broadcastType">广播信息的类型</param>
            <param name="broadcastContent">广播的内容</param>      
            <param name="tag">附加信息</param>          
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.PullIntoGroup(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            将用户拉入组。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.RemoveFromGroup(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            将用户从动态组中移除。
            </summary>   
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.GetGroupMembers(System.String)">
            <summary>
            获取组成员列表。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.GetGroupmates(System.String)">
            <summary>
            获取所有组友列表。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.GetGroupList">
            <summary>
            获取所有动态组的ID列表。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.SetGroupActionType(System.String,System.Boolean)">
            <summary>
            设置组反应类型（当组成员掉线时）。
            注意：最好是在GroupCreated事件中，即组被创建时就立即设置该组的ActionType。
            如果不设置，则默认为：当目标组中的成员掉线时，不会从该组中移除成员。
            </summary>
            <param name="groupID">目标组ID</param>
            <param name="quitGroupWhenOffline">当目标组中的成员掉线时，是否从该组中移除？默认值：false。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.PresetGroup(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            预设组。
            如果目标组ID已经存在，将抛出异常。        
            </summary>
            <param name="groupID">组ID</param>
            <param name="members">组成员列表</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.DynamicGroup.Server.IDynamicGroupController.SetGroupTag(System.String,System.String)">
            <summary>
            设置目标组的Tag。组成员将收到GroupTagChanged事件通知。
            前提：目标组必须存在，否则将忽略该调用。
            </summary>
            <param name="groupID">目标组ID</param>
            <param name="tag">新的tag</param>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom">
            <summary>
            P2PSessionMessageTypeRoom 与P2P Session相关的消息类型的空间。
            zhuweisky 2005.06.19
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom.P2PLogon">
            <summary>
            P2P登陆。经由TCP，主体为P2PLogonContract，Client => Server
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom.ReqUserData">
            <summary>
            获取好友P2P地址列表。经由TCP，请求主体为ReqUserDataContract，回复ResUserDataContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom.InviteTcpP2P">
            <summary>
            邀请对方TCP P2P连接自己。协议体为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom.InviteUdpP2P">
            <summary>
            邀请对方Udp P2P连接自己。协议体为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom.GetMyPublicIPE">
            <summary>
            获取自己的公网IPE。经由TCP，请求主体为空，回复UserIPEResponseContract Client => Server
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.P2PSessionMessageTypeRoom.TcpP2PChannelTest">
            <summary>
            基于TCP的P2P测试消息。经由TcpP2P通道发送给对方的P2P消息，当通过TCP P2P连接上某个好友时，会经此通道向好友发送该测试消息。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.PublicIPEResponseContract">
            <summary>
            返回用户的公网IP和经NAPT后的TCP端口。
            </summary>    
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.ReceiveP2PProbeNotifyContract.SourceIPEndPoint">
            <summary>
            P2P通道的起始方IPE。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.ReceiveP2PProbeNotifyContract.EndingIPEndPoint">
            <summary>
            P2P通道的结束方IPE。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.UserAddressInfo.P2PAddress">
            <summary>
            客户端的P2P地址信息
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController">
            <summary>
            P2P通道控制器。控制和查看所有的P2P通道。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.P2PConnectFailed">
            <summary>
            当尝试建立P2P连接失败时，触发此事件。参数为对方的UserID。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.P2PChannelOpened">
            <summary>
            当某个P2P Channel创建成功时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.P2PChannelClosed">
            <summary>
            当某个P2P Channel关闭时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.AllP2PChannelClosed">
            <summary>
            当所有的P2P通道关闭时（比如因为自己断线），触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.P2PChannelMode">
            <summary>
            采用的P2P通道的类型。默认为TcpAndUdp，表示TCP打洞和UDP打洞都进行尝试。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.P2PConnectAsyn(System.String)">
            <summary>
            尝试与目标用户建立P2P Channel。（异步方式。）
            </summary>
            <param name="destUserID">目标用户的UserID</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.IsP2PChannelExist(System.String)">
            <summary>
            与目标用户之间是否存在P2P通道。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.P2PChannelIsBusy(System.String)">
            <summary>
            P2P通道是否繁忙。如果返回null，表示没有P2P通道。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.GetP2PChannelState">
            <summary>
            获取所有P2P通道的状态。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PController.GetP2PChannelState(System.String)">
            <summary>
            获取目标用户的P2P通道的状态。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelMode">
            <summary>
            P2P通道模型。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelMode.None">
            <summary>
            不建立P2P通道
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter.GetUserData(System.String)">
            <summary>
            获取用户的地址信息。如果目标用户不在线，则返回null。
            </summary>
            <param name="userID">目标用户的UserID</param>
            <returns>用户地址信息</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter.InviteTcpP2P(System.String)">
            <summary>
            请求目标用户使用TCP向自己发送P2P连接。
            </summary>
            <param name="userID">目标用户的UserID</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter.InviteUdpP2P(System.String)">
            <summary>
            请求目标用户使用UDP向自己发送P2P连接。
            </summary>
            <param name="userID">目标用户的UserID</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter.GetMyPublicIPE">
            <summary>
            向服务器请求自己的经NAPT后的公网IP和TCP端口。
            </summary> 
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter.P2PLogon(OMCS.Communication.Basic.Server.UserManagement.P2PAddress)">
            <summary>
            将P2PAddress报告给服务端。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter.SendFeedbackVacancy(System.String,OMCS.Communication.Basic.Engine.Udp.Reliable.FeedbackVacancyBody)">
            <summary>
            使用可靠的TCP发送当前EnhancedUdpClient针对destUserID的UdpSession接收缓存中的空缺状态。2015.03.11
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter.SendSynAck(System.String,OMCS.Communication.Basic.AgileIPE,System.String)">
            <summary>
            使用可靠的TCP回复来自UDP的Syn。2015.03.11
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter.SendExitNotify(OMCS.Communication.Basic.AgileIPE,System.String)">
            <summary>
            使用可靠的TCP来发送退出进程通知。2015.03.20
            </summary>    
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter.SendPMTUTestAck(System.String,System.UInt16)">
            <summary>
            使用可靠的TCP回复来自UDP的PMTUTest。2015.03.11
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager">
            <summary>
            IPlusP2PChannelManager TcpChannelManager和UdpChannelManager实现了此接口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.LocalPortBinding">
            <summary>
            P2P引擎绑定的本地端口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.EnableChannelWhenEstablished">
            <summary>
            当通道创建成功时，是否自动启用通道。默认值为true。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.IsP2PChannelExist(System.String)">
            <summary>
            与目标用户之间是否存在P2P通道。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.P2PConnect(OMCS.Communication.Plus.Application.P2PSession.UserAddressInfo)">
            <summary>
            尝试P2P连接目标用户。
            </summary>
            <param name="destUser">目标用户的数据</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.P2PConnectAsyn(OMCS.Communication.Plus.Application.P2PSession.UserAddressInfo)">
            <summary>
            尝试P2P连接目标用户。异步方式。
            </summary>
            <param name="destUser">目标用户的数据</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.UserOffline(System.String)">
            <summary>
            接收通知p2PSessionMessageTypeRoom.UserOfflineNotify，由P2PSessionPassiveProcesser调用
            </summary>  
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.OnSelfOffline">
            <summary>
            OnSelfOffline 当客户端与服务器失去联系(掉线)时调用。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.OnSelfRebuildSucceed">
            <summary>
            OnSelfRebuildSucceed 当客户端重连服务器成功时调用。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.GetP2PChannelState">
            <summary>
            GetP2PChannelState 获取所有P2P通道的状态。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.IPlusP2PChannelManager.GetP2PChannelState(System.String)">
            <summary>
            获取目标用户的P2P通道的状态。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState">
            <summary>
            P2P通道实例的状态。
            </summary>   
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.Enabled">
            <summary>
            是否启用当前的P2P通道。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.DestUserID">
            <summary>
            当前P2P会话对方的UserID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.ProtocolType">
            <summary>
            当前P2P通道的协议类型（TCP/UDP）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.DestIPE">
            <summary>
            当前P2P会话对方的地址信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.Reliable">
            <summary>
            是否为可靠的P2P通道。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.MessageSentCount">
            <summary>
            通过当前P2P通道发送的消息的个数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.LastMessageSentTime">
            <summary>
            通过当前P2P通道发送的最后一个消息的时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.OpenTime">
            <summary>
            当前P2P通道创建的时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PChannelState.InSameLAN">
            <summary>
            是否位于同一个局域网。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PController">
            <summary>
            P2PController P2P控制器。
            (1)用于支持那些需要在登录成功以后才可以进行正确初始化的P2PSession环境中的对象完成初始化动作。
            (2)使P2P通道的状态与主TCP连接(TO Server)的状态保持一致。
            (3)当主TCP连接重连成功时，自动重新初始化P2P通道。 
            zhuweisky 2010.05.05
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PController.MasterTcpEngine">
            <summary>
            MasterTcpEngine 与服务器进行通信的TCP引擎。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PController.P2PServerAddress">
            <summary>
            如果需要启用P2P支持，则需要设定P2P服务器的地址。如果设为null，表示不启用P2P。默认值为null。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PController.Initialize(System.String,System.Boolean)">
            <summary>
            当属性注入完毕后，即可调用该方法进行初始化。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PController.UserOffline(System.String)">
            <summary>
            当用户掉线时，P2PController将关闭对应的P2P通道。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PSessionOutter">
            <summary>
            P2PSessionOutter 与服务器之间通信，协助创建P2PChannel。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.P2PSessionPassiveProcesser">
            <summary>
            P2PSessionPassiveProcesser 用于处理TCP连接上接收到的所有来自Server的消息，以及来自于其它Client的UDP消息。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.Tcp.InConnectionManager">
            <summary>
            InConnectionManager 用于管理所有外来进入的TCP P2P连接。
            zhuweisky 2010.05.24
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.Tcp.OutConnectionManager">
            <summary>
            OutConnectionManager 用于管理所有主动发起的P2P TCP连接。
            zhuweisky 2010.05.24
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Application.P2PSession.Passive.Tcp.OutConnectionManager.P2PChannelOpened">
            <summary>
            P2PChannelOpened 参数IPEndPoint为对方的IPE ，bool为是否为同一局网。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.Tcp.TcpChannelManager">
            <summary>
            TcpChannelManager 基于TCP的P2P通道管理器。将其配置到OMCS.Communication.Basic.Passive.MessageTransceiver.P2PChannelManager属性。
            目前只解决了同一局域网的P2P通信。
            zhuweisky 2010.05.24
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Passive.Udp.UdpChannelManager">
            <summary>
            UdpChannelManager 基于UDP的P2P通道管理器。    
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.P2PSession.Passive.Udp.UdpChannelManager.PublicUdpPort">
            <summary>
            向UDP服务器请求自己的公网UDP Port。未返回结果之前为0。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Application.P2PSession.Passive.Udp.UdpChannelManager.Initialize(System.String,System.String,OMCS.Communication.Plus.Application.P2PSession.Passive.IP2PSessionOutter)">
            <summary>
            Initialize 初始化。也可以是断线重连成功时，再度重新初始化。
            </summary>     
        </member>
        <member name="T:OMCS.Communication.Plus.Application.P2PSession.Server.P2PSessionProcesser">
            <summary>
            用于处理TCP连接上接收到的所有与P2PSession创建相关的请求。	
            zhuweisky  2006.06.16 最后修正：2010.05.05
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.BlobReceiver">
            <summary>
            用于接收Blob的片段，并将其拼接为一个完整的Blob。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Blob.BlobID">
            <summary>
            大数据块唯一编号。从1开始逐个递增。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Blob.SourceID">
            <summary>
            信息的发送者。可以为UserID或者NetServer.SystemUserID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Blob.DestID">
            <summary>
            信息的接收者。可以为UserID或者NetServer.SystemUserID或GroupID（广播消息）。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.ResultHandler">
            <summary>
            发送消息（异步）任务结束后的回调处理器。
            </summary>    
            <param name="succeed">是否正常完成？（例如：是否收到了ACK回复？是否正常发送？）</param>
            <param name="tag">状态数据</param>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.CallbackHandler">
            <summary>
            用于异步回复的回调处理器。
            </summary>
            <param name="ee">如果为TimeoutException，表示超时没有回复；如果为HandingException，表示处理方在处理时抛出异常。只有为null时，response参数才有效。</param>
            <param name="response">回复消息</param>
            <param name="tag">状态数据</param>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.Information">
            <summary>
            一个完整的自定义信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Information.SourceID">
            <summary>
            信息的发送者。可以为UserID或者NetServer.SystemUserID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Information.DestID">
            <summary>
            信息的接收者。可以为UserID或者NetServer.SystemUserID或GroupID（广播消息）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Information.InformationType">
            <summary>
            自定义信息类型
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.Information.Content">
            <summary>
            信息的内容
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.BroadcastInformation">
            <summary>
            一个完整的广播信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.BroadcastInformation.SourceID">
            <summary>
            广播信息的发送者。可以为UserID或者NetServer.SystemUserID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.BroadcastInformation.GroupID">
            <summary>
            广播信息的接收组的ID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.BroadcastInformation.BroadcastType">
            <summary>
            广播信息类型
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.BroadcastInformation.Content">
            <summary>
            广播信息的内容
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Application.BroadcastInformation.Tag">
            <summary>
            附加信息。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.IPlatformDataProvider">
            <summary>
            群集中的AS通过此接口从OMCS.Communication.Platform平台服务器获取应用数据。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Application.IDataProvider4Platform">
            <summary>
            群集中OMCS.Communication.Platform平台服务器通过此接口回调AS以获取应用数据。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.BlobFragmentContract">
            <summary>
            大数据块的某个片段。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.BlobFragmentContract.BlobID">
            <summary>
            大数据块唯一编号。从1开始计数，逐个递增。对于那些只有一个Fragment的Blob，可以将BlobID设置为-1，以减少编号的使用。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.BlobFragmentContract.FragmentIndex">
            <summary>
            片段的索引。从0开始计数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.BlobFragmentContract.Fragment">
            <summary>
            片段内容。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.BlobFragmentContract.IsLast">
            <summary>
            是否为最后一个片段。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.BlobReceiver">
            <summary>
            用于接收Blob的片段，并将其拼接为一个完整的Blob。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Blob.BlobID">
            <summary>
            大数据块唯一编号。从1开始逐个递增。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Blob.SourceID">
            <summary>
            信息的发送者。可以为UserID或者NetServer.SystemUserID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Blob.DestID">
            <summary>
            信息的接收者。可以为UserID或者NetServer.SystemUserID或GroupID（广播消息）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.BroadcastContract.InformationType">
            <summary>
            当MessageType为CustomizeInfoMessageTypeRoom.Response时，忽略该属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.BroadcastContract.DiscardOnToBeRejudge">
            <summary>
            如果通道正处于ChannelGuessState.ToBeRejudge状态，则可以直接丢弃该消息，不用在判断通道是真的繁忙后，再丢弃。
            只有ActionTypeOnChannelIsBusy为Discard时，该属性才有效。
            目的：在通道由ChannelGuessState.GuessedBusy转为ToBeRejudge状态时，如果有视频的非关键帧，则可以直接先丢弃掉，等第一个关键帧到来，将尝试发送，
            如果没有被丢弃，则将通道改为InJudging状态；否则，持续为ToBeRejudge状态，直到下一个关键帧来临，再重复上诉的过程。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.GroupNotifyContract">
            <summary>
            服务器给客户端的通知。
            </summary>	
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes">
            <summary>
            GroupMessageTypeRoom 与组操作相关的所有消息类型定义。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.Join">
            <summary>
            请求加入组。对应协议为string,utf-8,groupID。回复协议为int,JoinGroupResult
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.QuitGroup">
            <summary>
            请求退出组。对应协议为string,utf-8,groupID。没有回复。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.SomeoneJoinGroupNotify">
            <summary>
            对组内通知新成员加入组。Server=>Client。对应协议为GroupNotifyContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.SomeoneQuitGroupNotify">
            <summary>
            对组内通知某成员退出组。Server=>Client。对应协议为GroupNotifyContract
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.GroupmateOfflineNotify">
            <summary>
            对组内通知某成员掉线（S->C）。对应协议为UserContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.BroadcastBlob">
            <summary>
            广播大数据块信息。协议为BlobFragmentContract。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.GroupInfoTypes.BroadcastBlobByServer">
            <summary>
            广播大数据块信息。协议为BlobFragmentContract。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.Information">
            <summary>
            一个完整的自定义信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Information.SourceID">
            <summary>
            信息的发送者。可以为UserID或者NetServer.SystemUserID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Information.DestID">
            <summary>
            信息的接收者。可以为UserID或者NetServer.SystemUserID或GroupID（广播消息）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Information.InformationType">
            <summary>
            自定义信息类型
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Information.Content">
            <summary>
            信息的内容
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.DynamicGroupOutter">
            <summary>
            IGroupOutter 的实现。
            (1)所有组成员都是在线的。
            (2)尽可能使用P2P通道发送广播信息。
            (3)在从服务器获取组成员时，尝试与在线的组成员创建P2P连接。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.DynamicGroupOutter.TryP2PWhenGroupmateConnected">
            <summary>
            当组友上线时，是否自动进行P2P连接。默认值为true。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter">
            <summary>
            用于客户端发送与组操作相关的信息和广播信息。    
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.SomeoneJoinGroup">
            <summary>
            当新成员加入组时，触发该事件。参数：GroupID - MemberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.SomeoneQuitGroup">
            <summary>
            当成员退出组时，触发该事件。参数：GroupID - MemberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.GroupmateOffline">
            <summary>
            当用户掉线，从所有动态组中退出时，触发该事件。参数：MemberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.BroadcastReceived">
            <summary>
            当接收到某个组内的广播消息（包括大数据块信息）时，触发此事件。参数：broadcasterID - groupID - broadcastType - broadcastContent。
            如果broadcasterID为null，表示是服务端发送的广播。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.TryP2PWhenGroupmateConnected">
            <summary>
            当组友上线时，是否自动进行P2P连接。默认值为true。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.JoinGroup(System.String)">
            <summary>
            加入组。
            </summary>  
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.QuitGroup(System.String)">
            <summary>
            退出组。
            </summary>  
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.GetGroupMembers(System.String)">
            <summary>
            获取组成员列表。如果本地有缓存，有直接从本地缓存提取。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.GetGroupMembersFromServer(System.String)">
            <summary>
            从服务器获取组成员列表。即使本地有缓存，也查询服务器。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Passive.IDynamicGroupOutter.Broadcast(System.String,System.Int32,System.Byte[],OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            在组内广播信息。
            </summary>
            <param name="groupID">接收广播信息的组ID</param>
            <param name="broadcastType">广播信息的类型</param>
            <param name="broadcastContent">信息的内容</param>             
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.Server.DynamicGroupHandler">
            <summary>
            与OMCS.Communication.Platform结合：
            (1)由事件（比如加入组）发生的宿主服务器（即导致事件发生的用户所在的服务器）负责通知群内成员或群友。
            (2)如果事件是由平台或服务端触发，同理，则由目标用户所在的服务器负责通知。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Server.DynamicGroupHandler.UseGroupNotifyThread">
            <summary>
            组友上下线通知是否使用单独的线程。默认值为false。
            如果要开启组友通知线程，必须先开启组友通知（即必须先将GroupNotifyEnabled设置为true）。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.Server.DynamicGroupManager">
            <summary>
            动态组管理器。
            （1）所有的组员都是在线的。只要组员掉线，则将其从组中移除。
            （2）如果要加入的目标组不存在，则自动创建目标组，并加入。
            （3）当某个组中不存在任何成员时（比如都退出），则销毁组。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Server.DynamicGroupManager.GetGroupMembers(System.String)">
            <summary>
            返回的集合不可修改。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupController">
            <summary>
            组控制器。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupController.BroadcastReceived">
            <summary>
            当服务端接收到要转发的广播消息（包括大数据块信息）时，触发此事件。参数：broadcasterID - groupID - broadcastType - broadcastContent
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupController.GroupNotifyEnabled">
            <summary>
            加入/退出组、上下线等事件是否通知组友。默认值为true。
            注意，如果关闭该选项，客户端则不能保持实时的组的状态，将导致广播信息发送出现错误（IGroupOutter.Broadcast方法）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupController.UseGroupNotifyThread">
            <summary>
            组友上下线通知是否使用单独的线程。默认值为false。
            如果要开启组友通知线程，必须先开启组友通知（即必须先将GroupNotifyEnabled设置为true）。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupController.Broadcast(System.String,System.Int32,System.Byte[],OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            在组内广播信息。
            </summary>        
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupManager.SomeoneJoinGroup">
            <summary>
            当新成员加入组时，触发该事件。参数：GroupID - MemberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupManager.SomeoneQuitGroup">
            <summary>
            当成员退出组时，触发该事件。参数：GroupID - MemberID
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupManager.GroupmateOffline">
            <summary>
            当用户掉线，从所有组中退出时，触发该事件。参数：userID - groupmate。将不再触发SomeoneQuitGroup事件。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupManager.JoinGroup(System.String,System.String)">
            <summary>
            将用户加入目标组。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupManager.QuitGroup(System.String,System.String)">
            <summary>
            将用户从目标组中移除。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Raid.DynamicGroup.Server.IDynamicGroupManager.Offline(System.String)">
            <summary>
            将用户从所有组中移除。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.FilePackage">
            <summary>
            文件分割成包之后被传输的协议。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FilePackage.ProjectID">
            <summary>
            ProjectID 用于标志Package属于同一个文件，由"SenderID_随机数"构成	
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FilePackage.Index">
            <summary>
            第一个Package的Index为1。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.PackageType">
            <summary>
            传送项目中数据包的类型
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.PackageType.FileTransferingPackage">
            <summary>
            单个文件传送的数据包。或者，文件夹传送项目中某个文件的数据包。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.PackageType.FoldTransferingNextFile">
            <summary>
            文件夹传送中的命令 -- 即将传送下一个文件。对应的Data应解析为FoldTransferingNextFileInfo
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.PackageType.NewChildFolder">
            <summary>
            文件夹传送中的命令 -- 子文件夹。对应的Data使用UTF-8解析为Folder Name
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.PackageType.Finished">
            <summary>
            全部传送完成
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FoldTransferingNextFileInfo.RelativeFilePath">
            <summary>
            要发送的文件相对于文件夹的路径
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.FileTransmitHelper">
            <summary>
            用于协助文件传送时为每个传送项目生成唯一的编号。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.IFilePackageSender">
            <summary>
            IFilePackageMessageSender 用于将FilePackage发送出去。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFilePackageSender.GetSendingCount">
            <summary>
            获取尚未发送完成的消息个数。
            </summary>		
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.SendingFileParas">
            <summary>
            发送文件的参数。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.SendingFileParas.#ctor(System.Int32,System.Int32)">
            <summary>
            Ctor。
            </summary>
            <param name="packageSize">文件数据包的大小。</param>
            <param name="sendSpanInMSecs">相邻的两个文件数据包之间的发送间隔。单位，毫秒。</param>       
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.SendingFileParas.SendingSpanInMSecs">
            <summary>
            相邻的两个文件数据包之间的发送间隔。单位，毫秒。默认值0。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.SendingFileParas.FilePackageSize">
            <summary>
            文件数据包的大小。默认2048。网络环境越好，则数据包可以越大。比如，局网内部文件传输可以设为204800。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.FileTransferingProgress">
            <summary>
            文件传送的进度。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileTransferingProgress.ProjectID">
            <summary>
            传送项目的编号。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileTransferingProgress.Total">
            <summary>
            总字节数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileTransferingProgress.Transfered">
            <summary>
            已传送字节数。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.TransferingProject">
            <summary>
            文件（夹）传送项目。
            </summary>	
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.IsFolder">
            <summary>
            是否传送的为文件夹。false表示传送的为文件，true表示传送的为文件夹。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.IsSender">
            <summary>
            表示当前用户是发送者还是接收接收者。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.ProjectID">
            <summary>
            文件传送项目的编号。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.TotalSize">
            <summary>
            要传送的文件（夹）的总大小
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.OriginPath">
            <summary>
            发送方发送的文件（夹）的全路径。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.OriginStream">
            <summary>
            发送方要发送的流。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.OriginLastUpdateTime">
            <summary>
            发送方发送的文件（夹）的最后修改日期。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.LocalSavePath">
            <summary>
            接收方保存文件（夹）的路径。发送方忽略该属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.LocalSaveStream">
            <summary>
            接收方保存文件的流。发送方忽略该属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.ProjectName">
            <summary>
            被传送的文件（夹）的名称
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.AccepterID">
            <summary>
            接收者的UserID
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.SenderID">
            <summary>
             发送者的UserID
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.DestUserID">
            <summary>
            对方的UserID
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.TimeStarted">
            <summary>
            传送开始时间
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.SendingFileParas">
            <summary>
            如果是发送方，可以设置该属性以临时保存发送参数；如果为null，则表示采用IFileSenderManager的默认设置。接收方将忽略该属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.IsTransfering">
            <summary>
            文件（夹）是否已经开始传送了？
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.Comment">
            <summary>
            备注，初始值为BeginSendFile方法的comment参数的值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.FileTransDisrupttedCause">
            <summary>
            拒绝接收文件的原因、或者文件传送中断的原因的详细描述。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.TransferingProject.LocalTag">
            <summary>
            保存在本地内存中的tag。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ITransferingProject.ProjectID">
            <summary>
            文件传送项目的编号。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ITransferingProject.ProjectName">
            <summary>
            被传送的文件（夹）的名称
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ITransferingProject.TotalSize">
            <summary>
            要传送的文件（夹）的总大小
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ITransferingProject.Sender">
            <summary>
             发送者的UserID
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ITransferingProject.Receiver">
            <summary>
             接收者的UserID
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ITransferingProject.IsSender">
            <summary>
            表示当前用户是发送者还是接收接收者。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.IFileTransferingEvents">
            <summary>
            与文件传送相关的事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.FileTransceiver.IFileTransferingEvents.FileTransStarted">
            <summary>
            当某个文件开始传送时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.FileTransceiver.IFileTransferingEvents.FileTransPaused">
            <summary>
            当某个文件暂停传送时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.FileTransceiver.IFileTransferingEvents.FileResumedTransStarted">
            <summary>
            当某个文件续传开始时，触发该事件。（将不再触发FileTransStarted事件）
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.FileTransceiver.IFileTransferingEvents.FileTransProgress">
            <summary>
            文件传送的进度。参数为projectID（文件传送项目的编号） ,total（文件大小） ,transfered（已传送字节数）
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.FileTransceiver.IFileTransferingEvents.FileTransDisruptted">
            <summary>
            文件传送中断时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.FileTransceiver.IFileTransferingEvents.FileTransCompleted">
            <summary>
            文件传送完成时，触发该事件。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType">
            <summary>
            文件传输中断的原因。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.RejectAccepting">
            <summary>
            接收方拒绝接收
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.ActiveCancel">
            <summary>
            自己主动取消
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.DestCancel">
            <summary>
            对方取消
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.DestOffline">
            <summary>
            对方掉线
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.ReliableP2PChannelClosed">
            <summary>
            与对方的可靠的P2P通道关闭
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.SelfOffline">
            <summary>
            网络中断、自己掉线
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.InnerError">
            <summary>
            自己系统内部错误，如文件读取失败等
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.DestInnerError">
            <summary>
            对方系统内部错误，如文件读取失败等
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.NetworkSpeedSlow">
            <summary>
            网速太慢。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.ReadFileBlocked">
            <summary>
            【发送方】读取文件卡住。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.SendThreadNotStarted">
            <summary>
            发送线程没有启动。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType.Timeout4FirstPackage">
            <summary>
            【接收方】在一定的时间内，针对传送的目标文件，第一个文件块都尚未收到。
            真正原因可能是：（1）网络太慢；（2）发送方ReadFileBlocked 或 SendThreadNotStarted。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.ISendingFileParasDecider.GetSendingFileParas(System.String)">
            <summary>
            将文件发送给目标用户时，采用的数据包的大小和发送时间间隔。
            </summary>
            <param name="accepterID">文件接收者的UserID</param>        
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.DefaultSendingFileParasDecider.FilePackageSize">
            <summary>
            文件数据包的大小。默认2048。网络环境越好，则数据包可以越大。比如，局网内部文件传输可以设为204800。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.PassiveFilePackageSender">
            <summary>
            用于Client向Server发送文件包(可能是通过Server转发)
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.DirectoryReceiver">
            <summary>
            文件夹接收器。实现IFileReceiver接口。将文件夹整体当作一个文件来接收
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.DirectoryReceiver.CurrentTempFilePath">
            <summary>
            临时文件路径。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.DirectoryReceiver.DisrupttedFileRelativePath">
            <summary>
            被中断传送的文件的相对路径
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.DirectoryReceiver.DisrupttedFileSize">
            <summary>
            该属性仅用于文件夹传送。被中断传送的文件的大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.DirectoryReceiver.DisrupttedFileReceivedCount">
            <summary>
            该属性仅用于文件夹传送。被中断传送的文件已接收的字节数
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.FileTransceiver.DirectoryReceiver.SingleFileRevFinished">
            <summary>
            当文件夹中的某个文件接收完成时，触发该事件。参数 - projectID
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.FileReceiver">
            <summary>
            单个文件接收器。实现IFileReceiver接口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileReceiver.CurrentTempFilePath">
            <summary>
            临时文件路径。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileReceiver.callReceiveCount">
            <summary>
            已接收FilePackage的个数
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.FileReceiverManager">
            <summary>
            IFileReceiverManager 参考实现。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.FileReceiverManager.TempFileExtendName">
            <summary>
            当文件未接收完时，临时文件的扩展名。默认为".tmpe$"
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.FileTransceiver.FileReceiverManager.SingleFileRevFinished">
            <summary>
            在接收文件夹的情况下，当文件夹中的某个文件接收完成时，触发该事件。参数 - projectID
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.IFileReceiver">
            <summary>
            用于将接收到的文件包写入同一个文件中。一个IFileReceiver实例对应一个要接收的文件（夹）。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiver.CheckZeroSpeed">
            <summary>
            每隔N秒调用一次，如果在这段时间内，接收的字节数为0，则将触发FileTransDisruptted事件，参数为 NetworkSpeedSlow。2015.02.04
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.IFileReceiver.CurrentTempFilePath">
            <summary>
            被中断传送的文件的临时路径
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager">
            <summary>
            管理所有的FileReceiver，处理所有接收到的与文件相关的消息。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.SingleFileRevFinished">
            <summary>
            在接收文件夹的情况下，当文件夹中的某个文件接收完成时，触发该事件。参数 - projectID。
            框架必须将该事件传递给发送方的IFileSenderManager的OnSingleFileRevFinished方法，如此发送方才会启动发送下一个文件。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.MappingResumedFile4Receive(OMCS.Communication.Plus.FileTransceiver.TransferingProject)">
            <summary>
            在接收文件之前，寻找是否存在续传匹配项。如果FileResumingEnabled为false，则将始终返回null。
            </summary>        
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.TTL4ResumedFileItem">
            <summary>
            当一个续传项超过多长时间没被使用，则将其移除，同时删除对应的临时文件（夹）。单位：秒。默认值：300。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.AddNotConfirmedFile(OMCS.Communication.Plus.FileTransceiver.TransferingProject)">
            <summary>
            保存还未确认接收或拒绝的项目。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.RemoveNotConfirmedFile(System.String)">
            <summary>
            删除还未确认接收或拒绝的项目。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.GetNotConfirmedFile(System.String)">
            <summary>
            获取还未确认接收或拒绝的项目。
            </summary> 
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.ReadyToAcceptFile(OMCS.Communication.Plus.FileTransceiver.TransferingProject,OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem,System.Boolean)">
            <summary>
            在回复对方同意接受文件之前调用。
            </summary>
            <param name="project">接收文件的信息</param>
            <param name="resumedFileItem">续传对象，如果为null，则表示没有续传项</param>     
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.HandleFilePackage(System.String,OMCS.Communication.Plus.FileTransceiver.FilePackage)">
            <summary>
            将从网络接收到的文件数据包交给对应的文件接收器去处理。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.CancelFileReceiving(System.String,OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType,System.String)">
            <summary>
            取消文件接收（主动、被动）
            </summary>		
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.OnSelfOffline">
            <summary>
            自己掉线。将关闭所有的文件接收器。 
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.OnDestUserOffline(System.String)">
            <summary>
            目标用户destUserID掉线，将关闭与该用户相关的文件接收器。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.OnReliableP2PChannelClosed(System.String)">
            <summary>
            与目标用户之间的可靠P2P通道关闭，将关闭与该用户相关的文件接收器。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.GetFileInfo(System.String)">
            <summary>
            获取正在接收的或还未被回复的文件传送项目。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.GetAllReceivingFileIDs(System.String)">
            <summary>
            获取发送者为senderID的正在传送的文件ID。
            </summary>
            <param name="senderID">发送者的UserID。如果为null，则表示要获取所有正在接收的文件ID</param>
            <returns>文件ID的列表</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileReceiverManager.CheckZeroSpeed">
            <summary>
            每隔N秒调用一次，如果在这段时间内，某个传送项目接收的字节数为0，则该项目将触发FileTransDisruptted事件，参数为 NetworkSpeedSlow。2015.02.04
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.IResumedProjectManager">
            <summary>
            文件续传项目管理器。
            用于在接收方管理那些传送中断而可能被续传的文件。
            (1)当文件接收过程中因任何原因中断时，将其添加到ResumedFileManager中。
            (2)当发送方发送文件给接收方时，接收方从ResumedFileManager寻找匹配项，如果找到，则询问接收者：续传/另存/取消；如果找不到，则询问接收者：另存/取消。
            (3)当能续传，而接收者选择了另存或取消，则从ResumedFileManager中移除匹配项，并删除本地临时文件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.IResumedProjectManager.TTL4ResumedFileItem">
            <summary>
            当一个续传项超过多长时间没被使用，则将其移除，同时删除对应的临时文件。单位：秒。默认值：300。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IResumedProjectManager.Mapping4Receive(OMCS.Communication.Plus.FileTransceiver.TransferingProject)">
            <summary>
            当接收一个文件之前，先看能否找到续传的匹配项(同时判断临时文件是否存在)。如果没有匹配，则返回null。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IResumedProjectManager.Remove(OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem,System.Boolean)">
            <summary>
            移除续传项。
            </summary>
            <param name="resumedFileItem">要移除的续传项</param>
            <param name="deleteTempFile">是否同时删除临时文件</param>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.EmptyResumedFileManager">
            <summary>
            IResumedFileManager接口的null object模式实现。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.ResumedProjectManager">
            <summary>
            用于在接收方管理那些传送中断而可能被续传的文件（夹）。
            (1)当文件（夹）接收过程中因任何原因中断时，将其添加到ResumedFileManager中。
            (2)当发送方发送文件（夹）给接收方时，接收方从ResumedFileManager寻找匹配项，如果找到，则询问接收者：续传/另存/取消；如果找不到，则询问接收者：另存/取消。
            (3)当能续传，而接收者选择了另存或取消，则从ResumedFileManager中移除匹配项，并删除本地临时文件（夹）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectManager.TTL4ResumedFileItem">
            <summary>
            当一个续传项超过多长时间没被使用，则将其移除，同时删除对应的临时文件（夹）。单位：秒。默认值：300。
            如果值小于等于0，表示不使用续传功能。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.ResumedProjectManager.Remove(OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem,System.Boolean)">
            <summary>
            移除续传项。
            </summary>
            <param name="resumedFileItem">要移除的续传项</param>
            <param name="deleteTempFile">是否同时删除临时文件（夹）</param>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.ResumedProjectManager.Mapping4Receive(OMCS.Communication.Plus.FileTransceiver.TransferingProject)">
            <summary>
            当接收一个文件（夹）之前，先看能否找到续传的匹配项(同时判断临时文件（夹）是否存在)。如果没有匹配，则返回null。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem">
            <summary>
            有可能被续传的项目。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.#ctor(System.String,System.String,System.UInt64,System.DateTime,System.String,System.String,System.UInt64)">
            <summary>
            单个文件续传
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.#ctor(System.String,System.String,System.UInt64,System.DateTime,System.String,System.String,System.UInt64,System.String,System.UInt64,System.UInt64)">
            <summary>
            文件夹续传
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.DisrupttedFileRelativePath">
            <summary>
            该属性仅用于文件夹传送。被中断传送的文件的相对路径。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.DisrupttedFileSize">
            <summary>
            该属性仅用于文件夹传送。被中断传送的文件的大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.DisrupttedFileReceivedCount">
            <summary>
            该属性仅用于文件夹传送。被中断传送的文件已接收的字节数
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.SenderID">
            <summary>
            发送者的ID。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.OriginPath">
            <summary>
            发送方发送的文件（夹）的全路径。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.OriginSize">
            <summary>
            发送方发送的文件（夹）的大小。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.OriginLastUpdateTime">
            <summary>
            发送方发送的文件（夹）的最后修改日期。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.LocalTempFileSavePath">
            <summary>
            接收的中断的临时文件的存储路径
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.LocalSavePath">
            <summary>
            接收的文件（夹）存储路径
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.ReceivedCount">
            <summary>
            已经接收了多少字节数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.ResumedProjectItem.DisrupttedTime">
            <summary>
            接收中断的时间。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.StreamReceiver">
            <summary>
            单个文件接收器。实现IFileReceiver接口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.StreamReceiver.CurrentTempFilePath">
            <summary>
            临时文件路径。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.FileTransceiver.StreamReceiver.callReceiveCount">
            <summary>
            已接收FilePackage的个数
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.DirectorySender">
            <summary>
            文件夹发送器。实现IFileSender接口。将整个文件夹当作一个文件来传送。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.DirectorySender.FileReadBufferSize">
            <summary>
            读取文件的缓冲区的大小，默认值为1M。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.DirectorySender.OnSingleFileRevFinished">
            <summary>
            当接收方在某个文件接收完成时（IFileReceiverManager的SingleFileRevFinished事件），发送方将调用该方法，以启动发送下一个文件。
            </summary>      
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.FileSender">
            <summary>
            单个文件发送器。实现IFileSender接口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileSender.FileReadBufferSize">
            <summary>
            读取文件的缓冲区的大小，默认值为1M。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.FileSenderManager">
            <summary>
            用于管理所有的文件发送操作。
            可以用于服务端和客户端，如果在服务端使用，则不需要设置MessageTransceiver属性；如果在客户端使用，则不需要设置RegularSender属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileSenderManager.MessageTransceiver">
            <summary>
            MessageTransceiver 如果在服务端使用FileSenderManager，则不需要设置该属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileSenderManager.RegularSender">
            <summary>
            RegularSender 如果在客户端使用FileSenderManager，则不需要设置该属性。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileSenderManager.FileReadBufferSize">
            <summary>
            读取文件的缓冲区的大小，默认值为1024*1024。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileSenderManager.UseInClient">
            <summary>
            UseInClient 如果为true表示在客户端使用，为false表示在服务器端使用。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.FileSenderManager.AutoReUploadFile">
            <summary>
            当上传文件到服务器因为连接断开而中断时，等网络恢复后是否自动重新上传？
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.IFileSender">
            <summary>
            在后台线程中将指定的文件分包后发送出去。一个IFileSender实例对应一个要发送的文件（夹）。
            zhuweisky 2006.02.23
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSender.CheckZeroSpeed">
            <summary>
            每隔N秒调用一次，如果在这段时间内，发送的字节数为0，则将触发FileTransDisruptted事件，参数为 NetworkSpeedSlow。2015.02.04
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager">
            <summary>
            管理所有的FileSender，并且跟踪所有正在发送和即将发送的FileSender和文件。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.PickAutoReUploadFiles">
            <summary>
            网络恢复后获取要重新上传的项目列表？        
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.AutoReUploadFile">
            <summary>
            当上传文件到服务器因为连接断开而中断时，等网络恢复后是否自动重新上传？ 
            默认值：true。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.FileReadBufferSize">
            <summary>
            读取文件的缓冲区的大小。默认值为1024*1024。该属性的值应该至少要大于或等于FilePackageSize。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.Initialize(System.String,System.Int32)">
            <summary>
            初始化管理器。
            </summary>
            <param name="curUserID">当前登陆的用户ID</param>
            <param name="filePackageMessageType">文件数据包的消息类型</param>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.GetFileInfo(System.String)">
            <summary>
            获取正在发送的或还未被接收方回复的文件传送项目。
            </summary>   
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.GetAllSendingFileIDs(System.String)">
            <summary>
            获取接收者为accepterID的正在发送的文件ID。
            </summary>
            <param name="accepterID">接收者的UserID。如果为null，则表示要获取所有正在发送的文件ID</param>
            <returns>文件ID的列表</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.ReadyToSendFile(System.String,System.String,System.Boolean,System.UInt64,System.DateTime,System.String,OMCS.Communication.Plus.FileTransceiver.SendingFileParas,System.String)">
            <summary>
            在询问对方是否接受文件（夹）之前调用以进行注册。
            </summary>
            <param name="accepterID">接收文件的用户ID</param>
            <param name="filePath">被发送文件的路径</param>
            <param name="isFolder">false表示传送文件；true表示传送文件夹</param>
            <param name="totalSize">文件（夹）的大小</param>
            <param name="lastUpdateTime">被发送文件的最后一次更新时间</param>
            <param name="projectID">文件传送项目的编号</param>       
            <param name="paras">发送参数设定。传入null，表示采用IFileSenderManager的默认设置。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.ReadyToSendFile(System.String,System.IO.Stream,System.String,System.UInt64,System.String,OMCS.Communication.Plus.FileTransceiver.SendingFileParas,System.String)">
            <summary>
            在询问对方是否接受文件（夹）之前调用以进行注册。
            </summary>
            <param name="accepterID">接收文件的用户ID</param>
            <param name="stream">被发送的流</param>   
            <param name="projectName">传送项目名称</param>   
            <param name="totalSize">流的大小</param>       
            <param name="projectID">文件传送项目的编号</param>       
            <param name="paras">发送参数设定。传入null，表示采用IFileSenderManager的默认设置。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.SendFile(System.String,System.UInt64,System.String,System.UInt64)">
            <summary>
            开始在后台线程中发送文件（夹）。
            </summary>
            <param name="projectID">文件传送项目的编号</param>
            <param name="receivedCount">文件（夹）整体已经发送了多少字节。</param>	
            <param name="disrupttedFileRelativePath">仅用于文件夹续传，表示将被续传的文件的相对路径</param>
            <param name="disrupttedFileReceivedCount">仅用于文件夹续传，表示将被续传的文件内部起始的偏移</param>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.CancelFileSending(System.String,OMCS.Communication.Plus.FileTransceiver.FileTransDisrupttedType,System.String)">
            <summary>
            取消文件的发送（主动，被动）
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.GetFileSenderState(System.String,System.Int32@,System.Int32@)">
            <summary>
            获取某个文件发送器的状态，包括发送时间间隔（ms）、数据包的大小（字节）。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.OnSelfOffline">
            <summary>
            自己掉线。将关闭所有的文件（夹）发送器。 
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.OnDestUserOffline(System.String)">
            <summary>
            目标用户destUserID掉线，将关闭与该用户相关的文件发送器。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.OnReliableP2PChannelClosed(System.String)">
            <summary>
            与目标用户之间的可靠P2P通道关闭，将关闭与该用户相关的文件发送器。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.OnSingleFileRevFinished(System.String)">
            <summary>
            在接收文件夹的情况下，当接收方在某个文件接收完成时（IFileReceiverManager的SingleFileRevFinished事件），必须通知发送方，发送方将调用该方法，如此发送方才会启动发送下一个文件。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Plus.FileTransceiver.IFileSenderManager.CheckZeroSpeed">
            <summary>
            每隔N秒调用一次，如果在这段时间内，某个传送项目发送的字节数为0，则该项目将触发FileTransDisruptted事件，参数为 NetworkSpeedSlow。2015.02.04
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.StreamSender">
            <summary>
            单个文件发送器。实现IFileSender接口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.FileTransceiver.StreamSender.FileReadBufferSize">
            <summary>
            读取文件的缓冲区的大小，默认值为1M。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.FileTransceiver.ServerFilePackageSender">
            <summary>
            用于Server向Client发送文件包
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Advanced.IAdvancedController">
            <summary>
            服务端引擎高级控制器。如果是要Set某个属性，则必须在IRapidServerEngine的Initialize方法之前。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.IAdvancedController.IPv6Enabled">
            <summary>
            是否开启对IPv6的支持。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.IAdvancedController.SocketSendBuffSize">
            <summary>
            发送缓冲区的大小。默认值：64K。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.IAdvancedController.SocketReceiveBuffSize">
            <summary>
            接收缓冲区的大小。默认值：64K。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.IAdvancedController.WriteTimeoutInSecs">
            <summary>
            写超时。单位：秒。默认值：0。小于等于0表示不设定超时。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.IAdvancedController.TempFile4ResumedTTL">
            <summary>
            用于续传的临时文件的最大生存期，单位：秒。默认值：300。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.IAdvancedController.CheckFileZeroSpeedSpanInSecs">
            <summary>
            检测0速度的时间间隔，单位：秒。默认值20。设置为0，表示关闭0速度检测。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.IAdvancedController.CheckResponseTTL4Query">
            <summary>
            是否开启Query同步调用机制的回复生存期检查？默认值true。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.IAdvancedController.UseWorkThreadPool">
            <summary>
            框架的内部事务是否使用线程池中的线程？默认值：true。       
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.IAdvancedController.MaxChannelCacheSize">
            <summary>
            每个通道连接上允许最大的等待发送【包括投递】以及正在发送的消息个数。
            当等待发送以及正在发送的消息个数超过该值时，将关闭对应的连接。如果设置为0，则表示不作限制。默认值为0。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.IAdvancedController.UncompletedSendingCount4Busy">
            <summary>
            当通道上尚未发送完成的消息个数大于该值时，判定通道为繁忙（配合发送方法的ActionTypeOnChannelIsBusy参数使用）？默认值为：0。（小于0，表示始终判定为不繁忙）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.IAdvancedController.AsynConnectionEvent">
            <summary>
            是否异步引发TCP连接成功的事件？
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.IAdvancedController.DiagnosticsEnabled">
            <summary>
            是否开启诊断。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.IAdvancedController.DiagnosticsViewer">
            <summary>
            通过此接口，可以获取服务端运行的诊断信息（前提：DiagnosticsEnabled属性必须设置为true）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.IAdvancedController.CustomizeInfoHandleMode">
            <summary>
            服务端自定义信息的处理模型。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.IAdvancedController.QueueWorkerThreadCount">
            <summary>
            当CustomizeInfoHandleMode设置为TaskQueue时，工作者线程的个数。默认值为20。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Advanced.IAdvancedController.GetTaskQueueInfo(System.Int32@,System.Int32@)">
            <summary>
            当CustomizeInfoHandleMode设置为TaskQueue时，获取队列中待处理的任务个数，以及历史中最大的待处理任务个数。
            </summary>
            <param name="taskCount">待处理的任务个数</param>
            <param name="maxTaskCount">历史中最大的待处理任务个数</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Advanced.IAdvancedController.GetPortListenerState">
            <summary>
            获取监听器的状态。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Advanced.IAdvancedController.GetSendingMessageCount(System.Net.IPEndPoint)">
            <summary>
            获取正在发送给目标用户的消息个数（尚未发送完成的）。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Plus.Advanced.BaseOptions">
            <summary>
            客户端和服务端的公共设置。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.BaseOptions.WriteTimeoutInSecs">
            <summary>
            写超时。单位：秒。客户端默认值：60。服务端默认值：0。0表示不设定超时。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.BaseOptions.SocketSendBuffSize">
            <summary>
            发送缓冲区的大小。默认值：64K。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.BaseOptions.SocketReceiveBuffSize">
            <summary>
            接收缓冲区的大小。默认值：64K。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.BaseOptions.TempFile4ResumedTTL">
            <summary>
            用于续传的临时文件的最大生存期，单位：秒。默认值：300。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.BaseOptions.UseWorkThreadPool">
            <summary>
            框架的内部事务（如文件传送）是否使用线程池中的线程？默认值：true。       
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.BaseOptions.CheckFileZeroSpeedSpanInSecs">
            <summary>
            检测0速度的时间间隔，单位：秒。默认值20。设置为0，表示关闭0速度检测。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.BaseOptions.CheckResponseTTL4Query">
            <summary>
            是否开启Query同步调用机制的回复生存期检查？默认值true。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.BaseOptions.UncompletedSendingCount4Busy">
            <summary>
            当通道上尚未发送完成的消息个数大于该值时，判定通道为繁忙（配合发送方法的ActionTypeOnChannelIsBusy参数使用）？默认值为：0。（小于0，表示始终判定为不繁忙）
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Advanced.AdvancedOptions">
            <summary>
            客户端高级设置。如果是要Set某个属性，则必须在IRapidPassiveEngine的Initialize方法之前。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.AdvancedOptions.P2PEnabled">
            <summary>
            是否开启P2P。默认值true。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.AdvancedOptions.AsynMessageQueueEnabled">
            <summary>
            是否开启异步消息队列。默认值true。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Advanced.AdvancedController">
            <summary>
            服务端高级设置、控制器。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.AdvancedController.MaxChannelCacheSize">
            <summary>
            每个通道连接上允许最大的等待发送【包括投递】以及正在发送的消息个数。
            当等待发送以及正在发送的消息个数超过该值时，将关闭对应的连接。如果设置为0，则表示不作限制。默认值为0。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.AdvancedController.AsynConnectionEvent">
            <summary>
            异步引发连接成功的事件。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Advanced.CustomizeInfoHandleMode">
            <summary>
            在服务端自定义信息的处理模型。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Advanced.CustomizeInfoHandleMode.IocpDirectly">
            <summary>
            直接在IOCP线程中处理消息。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Advanced.CustomizeInfoHandleMode.TaskQueue">
            <summary>
            将收到的消息先放到任务队列，然后再使用工作者线程（WorkerThread）来处理。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Advanced.IDiagnosticsViewer.GetCustomizeInfoStatistics">
            <summary>
            获取自定义信息处理的统计数据。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Advanced.IDiagnosticsViewer.GetUncommittedCustomizeInfos">
            <summary>
            获取处理尚未完成的自定义信息。
            </summary>    
        </member>
        <member name="M:OMCS.Communication.Plus.Advanced.IDiagnosticsViewer.GetThreadPoolInfo">
            <summary>
            获取线程池信息。
            </summary>        
        </member>
        <member name="F:OMCS.Communication.Plus.Advanced.InformationStyle.Common">
            <summary>
            普通信息。信息将被ICustomizeHandler接口的HandleInformation方法处理。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Advanced.InformationStyle.Query">
            <summary>
            同步调用信息，信息将被ICustomizeHandler接口的HandleQuery方法处理。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Advanced.InformationStyle.DirectByRapidEngine">
            <summary>
            通过引擎直接发送的引擎，将被IRapidServerEngine.MessageReceived事件的处理函数处理。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Advanced.InformationStyle.LoginOrQueryBeforeLogin">
            <summary>
            登录请求（对应IBasicHandler的VerifyUser或HandleQueryBeforeLogin方法）
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Advanced.InformationStyle.GetGroupmates">
            <summary>
            获取组友请求
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Advanced.InformationStyle.GetGroupMembers">
            <summary>
            获取组成员请求
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Advanced.InformationStyle.GetFriendsList">
            <summary>
            获取好友列表请求
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.InfoHandleRecord.StartTime">
            <summary>
            将信息提交给ICustomizeHandler处理器的时间。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.InfoHandleRecord.InformationType">
            <summary>
            被处理的信息类型
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.InfoHandleRecord.TimeSpent">
            <summary>
            处理信息所话费的时间（毫秒）。值为-1表示信息尚未处理完成。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.InfoHandleRecordStatistics.InformationType">
            <summary>
            被统计的消息类型。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.InfoHandleRecordStatistics.CallCount">
            <summary>
            收到目标类型消息的总个数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Advanced.InfoHandleRecordStatistics.ExceptionCount">
            <summary>
            处理目标类型消息抛出异常的个数。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Base.Passive.UserSecurityLogBridge">
            <summary>
            用于将用户的上下线事件记录到用户安全日志。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Base.Server.UserSecurityLogBridge">
            <summary>
            用于将用户的上下线事件记录到用户安全日志（可以是文件、数据库、内存数据库等）。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.IPlusContractHelper">
            <summary>
            增强的IContractHelper，增加了创建消息等功能。即可用于服务端、也可用于客户端。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Core.IPlusContractHelper.ParseBody``1(OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            解析消息体。
            </summary>
            <typeparam name="TBody">消息体的类型</typeparam>
            <param name="msg">被解析的消息</param>
            <returns>解析得到的消息体对象</returns>
        </member>
        <member name="M:OMCS.Communication.Plus.Core.IPlusContractHelper.CreateMessage``1(OMCS.Communication.Basic.Core.IMessageHeader,``0)">
            <summary>
            创建消息。实现该方法时，需要根据body的长度来设置header中MessageBodyLength属性。通常给Server端使用。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Plus.Core.StreamMessageHeader">
            <summary>
            常用的基于流的消息头定义。固定长度36 ，UserID允许最大长度默认为11。MessageType取值为0~65535
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Core.StreamMessageHeader.SetMaxLengthOfUserID(System.Byte)">
            <summary>
            设置UserID（包括GroupID）的最大长度(不能超过255)。注意，客户端与服务端要统一设置。
            </summary>  
        </member>
        <member name="T:OMCS.Communication.Plus.Core.StreamPlusContractHelper">
            <summary>
            针对OMCS.Communication.Plus.Core.StreamMessageHeader定制的服务端和客户端可以共用的ContractHelper。
            基于流协议，消息体TBody如果是从BaseSerializeContract继承（还要加上Serializable标签），则采用BaseSerializeContract序列化；
            否则使用更高效的OMCS.Communication.Plus.Serialization.ICompactSerializer序列化（由StreamContratAttribute指示采用CompactPropertySerializer/CompactFieldSerializer，如果没有标记StreamContratAttribute，则默认采用CompactPropertySerializer）。   
            如果消息体中包含ICompactSerializer不支持的或无法正确序列化的类型(如Font，其没有默认Ctor)，则可使用BaseSerializeContract方法。
            最后修正：2010.05.31
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.TextMessageHeader">
            <summary>
            常用的基于文本的消息头定义。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.TextPlusContractHelper">
            <summary>
            针对OMCS.Communication.Plus.Core.TextMessageHeader定制的服务端和客户端可以共用的ContractHelper。
            基于XML的文本协议，消息体借助于ESBasic.Helpers.XmlHelper来实现xml化和反xml化（仅仅支持两级节点）。    
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.BaseMessageTypeRoom">
            <summary>
            具体的消息类型空间的基类。具体的实现类只需要加入具体的MessageTypes和PushKeyList    
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Core.BaseMessageTypeRoom.StartKey">
            <summary>
            当前消息类型空间的起始值。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.IMessageTypeRoom">
            <summary>
            消息类型空间，用于定义一组相同性质的消息类型，比如所有的FTP消息类型。 
            zhuweisky 2006.04
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Core.IMessageTypeRoom.Initialize">
            <summary>
            依据StartKey的设置，初始化各个key的值。注意：在Initialize之前，KeyScope/KeyScopeStr/PushKeyList属性和Contains方法的返回都是不正确的。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Core.IMessageTypeRoom.Contains(System.Int32)">
            <summary>
            是否包含指定的消息类型。
            </summary>       
        </member>
        <member name="P:OMCS.Communication.Plus.Core.IMessageTypeRoom.StartKey">
            <summary>
            当前消息类型空间的起始值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Core.IMessageTypeRoom.MaxKeyValue">
            <summary>
            初始化完成后，即可获取最大的值。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Core.IMessageTypeRoom.PushKeyList">
            <summary>
            指示客户端需要将哪些类型的消息Push到IResponseManager
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.IServiceTypeNameMatcher">
            <summary>
            根据消息的类型获取其对应的名称。
            OMCS.Communication.Plus.Core.MessageTypeRoomManager提供了一个实现。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Core.IServiceTypeNameMatcher.GetServiceName(System.Int32)">
            <summary>
            根据消息的类型获取其对应的名称。
            </summary>
            <param name="messageType">消息的类型</param>
            <returns>类型的名称</returns>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.DefaultServiceTypeNameMatcher">
            <summary>
            直接将消息类型的数值作为类型的名称返回。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Core.MessageTypeRoomManager">
            <summary>
            将所有的IMessageTypeRoom整合起来，检查MessageType是否冲突，并且将PushKey注入到SimplePassiveProcesser。另外，MessageTypeRoomManager实现了IServiceKeyNameMatcher接口。    
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Core.MessageTypeRoomManager.GetServiceName(System.Int32)">
            <summary>
            GetServiceName 通过消息类型获取服务名称
            </summary>		
        </member>
        <member name="T:OMCS.Communication.Plus.Rapid.IP2PServer">
            <summary>
            用于协助P2P打洞的P2P服务器。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IP2PServer.Initialize(System.Int32)">
            <summary>
            初始化P2P服务器。
            </summary>
            <param name="udpPort">监听的UDP端口</param>       
        </member>
        <member name="T:OMCS.Communication.Plus.Rapid.IRapidEngine">
            <summary>
            Rapid 引擎基础接口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidEngine.LogFilePath">
            <summary>
            记录OMCS.Communication.Basic日志的文件的路径，默认值为在运行目录下的ESFrameworkLog.txt文件。如果不需要写日志文件，则赋值为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidEngine.Logger">
            <summary>
            日志记录器。如果被赋非null值，则LogFilePath属性将无效。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidEngine.SecurityLogEnabled">
            <summary>
            是否记录用户安全日志。默认值为false。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine">
            <summary>
            迅捷的客户端引擎。基于TCP、使用二进制协议。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.IsClosed">
            <summary>
            引擎是否出于关闭状态？（关闭状态：意味着与服务器的连接已经断开，并且所有资源已经释放，也不再进行自动重连，就像未初始化状态一样）
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.ConnectionRebuildStart">
            <summary>
            自动重连开始时，触发此事件。如果重连成功则将重新登录，并触发RelogonCompleted事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.ConnectionInterrupted">
            <summary>
            当客户端与服务器的TCP连接断开时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.RelogonCompleted">
            <summary>
            当断线重连成功时，会自动登录服务器验证用户账号密码，并触发此事件。如果验证失败，则与服务器的连接将会断开，且后续不会再自动重连。事件参数表明了登录验证的结果。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.ServerAddress">
            <summary>
            当前引擎所连接的服务器的地址。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.Connected">
            <summary>
            当前是否处于连接状态。如果为true，则表示不仅TCP连接正常，而且是登录成功的状态。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.ChannelIsBusy">
            <summary>
            与服务器之间的通道是否处于繁忙状态？
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.SystemToken">
            <summary>
            系统标志。引擎在初始化时会提交给服务器验证客户端是否是正确的系统。（也可以被借用于登陆增强验证）。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.CurrentUserID">
            <summary>
            当前登录的用户UserID。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.HeartBeatSpanInSecs">
            <summary>
            每隔多长时间（秒）发送一次心跳消息。如果小于等于0，表示不发送定时心跳。默认值为10秒。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.WaitResponseTimeoutInSecs">
            <summary>
            当通过ICustomizeOutter进行同步调用时，等待回复的最长时间。如果小于等于0，表示一直阻塞调用线程直到等到回复为止。默认值为30秒。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.Sock5ProxyInfo">
            <summary>
            Sock5代理服务器信息。如果不需要代理，则设置为null。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.P2PServerAddress">
            <summary>
            P2P服务器的地址。默认值为null。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            如果服务端引擎开启了UseAsP2PServer，则可以不设置该属性。如果同时又设置该属性为非null值，则以设置值为准。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.AutoReconnect">
            <summary>
            掉线后，是否自动重连。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.CustomizeOutter">
            <summary>
            该接口用于向服务器或其它在线用户发送自定义信息。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.FileOutter">
            <summary>
            该接口用于向服务器或其它在线用户发送文件。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.Advanced">
            <summary>
            客户端引擎高级控制选项。如果要设置AdvancedOptions的某些属性，必须在调用Initialize方法之前设置才有效。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.MessageReceived">
            <summary>
            当接收到来自服务器或其它用户的消息时，触发此事件。
            事件参数：sourceUserID - informationType - message - tag 。
            如果消息来自服务器，则sourceUserID为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.P2PController">
            <summary>
            该接口用于控制和管理所有的P2P通道。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.BasicOutter">
            <summary>
            该接口用于向服务器发送基本的请求，如获取自己的IP、获取所有在线用户列表等等。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.ContactsOutter">
            <summary>
            该接口用于客户端发送与联系人操作相关的信息和广播。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.DynamicGroupOutter">
            <summary>
            该接口用于进行动态组的相关操作，或监听动态组的相关事件。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.SendMessage(System.String,System.Int32,System.Byte[],System.String)">
            <summary>
            向服务器或其它在线用户发送消息。如果其它用户不在线，消息将被丢弃。
            </summary>
            <param name="targetUserID">接收者的UserID，如果为服务器，则传入null</param>
            <param name="informationType">消息类型</param>
            <param name="message">消息内容</param>
            <param name="tag">附加内容</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.SendMessage(System.String,System.Int32,System.Byte[],System.String,System.Int32)">
            <summary>
            向服务器或其它在线用户发送消息。如果其它用户不在线，消息将被丢弃。
            </summary>
            <param name="targetUserID">接收者的UserID，如果为服务器，则传入null</param>
            <param name="informationType">消息类型</param>
            <param name="message">消息内容</param>
            <param name="tag">附加内容</param>
            <param name="fragmentSize">消息将被分块发送，分块的大小</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.SendMessage(System.String,System.Int32,System.Byte[],System.String,System.Int32,OMCS.Communication.Plus.Application.ResultHandler,System.Object)">
            <summary>
            向服务器或其它在线用户异步发送消息（当前调用线程立即返回）。如果其它用户不在线，消息将被丢弃。
            </summary>
            <param name="targetUserID">接收者的UserID，如果为服务器，则传入null</param>
            <param name="informationType">消息类型</param>
            <param name="message">消息内容</param>
            <param name="tag">附加内容</param>
            <param name="fragmentSize">消息将被分块发送，分块的大小</param>
            <param name="handler">当发送任务结束时，将回调该处理器</param>
            <param name="handlerTag">将回传给ResultHandler的参数</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.Initialize(System.String,System.String,System.String,System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler)">
            <summary>
            完成客户端引擎的初始化，与服务器建立TCP连接，连接成功后立即验证用户密码。如果连接失败，则抛出异常。
            </summary>
            <param name="userID">当前登录的用户ID，由数字和字母组成，最大长度为10</param>
            <param name="logonPassword">用户登陆密码。</param>
            <param name="serverIP">服务器的IP地址。</param>
            <param name="serverPort">服务器的端口。</param>       
            <param name="customizeHandler">自定义处理器，用于处理服务器或其它用户发送过来的消息</param>             
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.Close">
            <summary>
            关闭并释放客户端通信引擎。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.CloseConnection(System.Boolean)">
            <summary>
            主动关闭与OMCS.Communication.Basic服务器的连接,将引发自动重连。
            </summary>
            <param name="reconnectNow">是否立即重连？</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidPassiveEngine.QueryBeforeLogin(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            在登录之前，向服务器发送请求。将被服务端的IBasicHandler的HandleQueryBeforeLogin方法处理。
            </summary>
            <param name="serverIP">OMCS.Communication.Basic服务器IP</param>
            <param name="serverPort">OMCS.Communication.Basic服务器端口</param>
            <param name="queryType">请求类型</param>
            <param name="query">请求内容</param>
            <returns>回复</returns>
        </member>
        <member name="T:OMCS.Communication.Plus.Rapid.IRapidServerEngine">
            <summary>
            迅捷的服务端引擎。基于TCP、使用二进制协议。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Rapid.IRapidServerEngine.MessageReceived">
            <summary>
            当接收到来自客户端的消息时，触发此事件。
            事件参数：sourceUserID - informationType - message - tag 。       
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.Advanced">
            <summary>
            服务端引擎高级控制器。（如果要设置AdvancedController的某些属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.ContactsManager">
            <summary>
            【可选】如果需要支持联系人，则必须设置该属性。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.WssOptions">
            <summary>
            【可选】如果需要支持WSS（SSL加密的WebSocket），则必须设置该属性。默认值为null，表示不启用WSS。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.IPAddressBinding">
            <summary>
            通过哪个IP地址提供服务。如果设为null，则表示绑定本地所有IP。默认值为null。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.HeartbeatTimeoutInSecs">
            <summary>
            心跳超时间隔（秒）。即服务端多久没有收到客户端的心跳消息，就视客户端为超时掉线。默认值为30秒。如果设置小于等于0，则表示不做心跳检查。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.WaitResponseTimeoutInSecs">
            <summary>
            当通过ICustomizeController.QueryClient方法进行同步调用时，等待回复的最长时间。如果小于等于0，表示一直阻塞调用线程直到等到回复为止。默认值为30秒。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.AutoRespondHeartBeat">
            <summary>
            是否自动回复客户端发过来的心跳消息（将心跳消息原封不动地发回客户端）。默认值为false。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.WriteTimeoutInSecs">
            <summary>
            发送消息的超时，单位：秒。默认值：5秒。如果设置为小于等于0，则表示无限。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.UseAsP2PServer">
            <summary>
            是否同时作为P2P服务器运行。默认值为true（P2P服务器将使用UDP端口，端口号为当前引擎监听的端口号加1）。（如果要set该属性，则必须要在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.WebSocketEnabled">
            <summary>
            是否启用WebSocket支持？
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.ConnectionCount">
            <summary>
            当前在线连接的数量。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.MaxConnectionCount">
            <summary>
            服务器允许最大的同时连接数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.Port">
            <summary>
            当前监听的端口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.ServerID">
            <summary>
            服务端实例的唯一编号。该属性用于OMCS.Communication.Platform。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.UserManager">
            <summary>
            通过此接口，可以获取用户的相关信息以及用户上/下线的事件通知。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.PlatformUserManager">
            <summary>
            平台用户管理器（用于OMCS.Communication.Platform，通常为ASM的远程引用）。可以获取群集中所有在线用户信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.BasicController">
            <summary>
            通过此接口，服务端可以将目标用户从服务器中踢出，并关闭其对应的tcp连接。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.CustomizeController">
            <summary>
            通过此接口，服务端可以主动向在线用户发送/投递自定义信息。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.ContactsController">
            <summary>
            通过此接口，服务端可以控制联系人通知和主动向某个组广播信息。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.DynamicGroupController">
            <summary>
            通过此接口，服务端可以操作动态组，或监听动态组的相关事件。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidServerEngine.SendMessage(System.String,System.Int32,System.Byte[],System.String)">
            <summary>
            向在线用户发送消息。如果目标用户不在线，消息将被丢弃。
            </summary>
            <param name="targetUserID">接收者的UserID</param>
            <param name="informationType">消息类型</param>
            <param name="message">消息内容</param>
            <param name="tag">附加内容</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidServerEngine.SendMessage(System.String,System.Int32,System.Byte[],System.String,System.Int32)">
            <summary>
            向在线用户发送消息。如果目标用户不在线，消息将被丢弃。
            </summary>
            <param name="targetUserID">接收者的UserID</param>
            <param name="informationType">消息类型</param>
            <param name="message">消息内容</param>
            <param name="tag">附加内容</param>
            <param name="fragmentSize">消息将被分块发送，分块的大小</param>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.IRapidServerEngine.FileController">
            <summary>
            通过此接口，服务端可以主动向在线用户发送文件。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidServerEngine.Initialize(System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler)">
            <summary>
            完成服务端引擎的初始化，并启动服务端引擎。
            </summary>
            <param name="port">用于提供tcp通信服务的端口</param>
            <param name="customizeHandler">服务器通过此接口来处理客户端提交给服务端自定义信息。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidServerEngine.Initialize(System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler,OMCS.Communication.Plus.Application.Basic.Server.IBasicHandler)">
            <summary>
            完成服务端引擎的初始化，并启动服务端引擎。
            </summary>
            <param name="port">用于提供tcp通信服务的端口</param>
            <param name="customizeHandler">服务器通过此接口来处理客户端提交给服务端自定义信息。</param>
            <param name="basicHandler">用于验证客户端登陆密码。如果不需要验证，则直接传入null。</param>    
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.IRapidServerEngine.Close">
            <summary>
            关闭服务端引擎。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.WssOptions.OnlyWssClient">
            <summary>
            是否所有的客户端都是wss，而没有其它的类型？
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Rapid.RapidEngineFactory">
            <summary>
            Rapid引擎工厂。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidEngineFactory.CreatePassiveEngine">
            <summary>
            创建一个Rapid客户端引擎实例。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidEngineFactory.CreateServerEngine">
            <summary>
            创建一个Rapid客户端引擎实例。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidEngineFactory.CreateP2PServer">
            <summary>
            创建一个P2P服务器实例。
            </summary>       
        </member>
        <member name="T:OMCS.Communication.Plus.Rapid.RapidPassiveEngine">
            <summary>
            迅捷的客户端引擎。基于TCP、使用二进制协议。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.ConnectionInterrupted">
            <summary>
            当客户端与服务器的TCP连接断开时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.ConnectionRebuildStart">
            <summary>
            自动重连开始时，触发此事件。如果重连成功则将重新登录，并触发RelogonCompleted事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.RelogonCompleted">
            <summary>
            当断线重连成功时，会自动登录服务器验证用户账号密码，并触发此事件。如果验证失败，则与服务器的连接将会断开，且后续不会再自动重连。事件参数表明了登录验证的结果。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.ServerAddress">
            <summary>
            当前引擎所连接的服务器的地址。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.Connected">
            <summary>
            当前是否处于连接状态。如果为true，则表示不仅TCP连接正常，而且是登录成功的状态。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.LogFilePath">
            <summary>
            记录OMCS.Communication.Basic日志的文件的路径，默认值为在运行目录下的ESFrameworkLog.txt文件。如果不需要写日志文件，则赋值为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.Logger">
            <summary>
            如果被赋非null值，则LogFilePath属性将无效。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.SecurityLogEnabled">
            <summary>
            是否记录用户安全日志。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.BasicOutter">
            <summary>
            该接口用于向服务器发送基本的请求，如获取自己的IP、获取所有在线用户列表等等。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.CustomizeOutter">
            <summary>
            该接口用于向服务器或其它在线用户发送自定义信息。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.FileOutter">
            <summary>
            该接口用于向服务器或其它在线用户发送文件。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.P2PController">
            <summary>
            该接口用于控制和管理所有的P2P通道。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.ContactsOutter">
            <summary>
            该接口用于获取联系人列表、接收联系人状态改变通知、以及组广播。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.HeartBeatSpanInSecs">
            <summary>
            每隔多长时间（秒）发送一次心跳消息。如果小于等于0，表示不发送定时心跳。默认值为10秒。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.WaitResponseTimeoutInSecs">
            <summary>
            当通过ICustomizeInfoOutter.Query方法进行同步调用时，等待回复的最长时间。如果小于等于0，表示一直阻塞调用线程直到等到回复为止。默认值为30秒。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.Sock5ProxyInfo">
            <summary>
            Sock5代理服务器信息。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.SystemToken">
            <summary>
            系统标志。引擎在初始化时会提交给服务器验证客户端是否是正确的系统。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.CurrentUserID">
            <summary>
            当前登录的用户UserID。（只有Initialize方法调用成功之后，该属性才可正常使用）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.P2PServerAddress">
            <summary>
            如果需要启用P2P支持，则需要设定P2P服务器的地址。默认值为null。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.ChannelIsBusy">
            <summary>
            与服务器之间的通道是否处于繁忙状态？
            </summary>
        </member>
        <member name="F:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.stressTesting">
            <summary>
            如果设置为true，则将：关闭P2P，关闭同步调用机制的回复超时检测线程，关闭异步消息队列，关闭心跳。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.StressTesting">
            <summary>
            是否用于性能测试。如果是，则设为true，以加快客户端引擎的启动速度，方便测试。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.AutoReconnect">
            <summary>
            掉线后，是否自动重连。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.Initialize(System.String,System.String,System.String,System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler)">
            <summary>
            完成客户端引擎的初始化，与服务器建立TCP连接，连接成功后立即验证用户密码。如果连接失败，则抛出异常。
            </summary>
            <param name="userID">当前登录的用户ID，由数字和字母组成，最大长度为10</param>
            <param name="logonPassword">用户登陆密码。</param>
            <param name="serverIP">服务器的IP地址</param>
            <param name="serverPort">服务器的端口</param>       
            <param name="customizeHandler">自定义处理器，用于处理服务器或其它用户发送过来的消息</param>        
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.Close">
            <summary>
            关闭客户端通信引擎。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidPassiveEngine.CloseConnection(System.Boolean)">
            <summary>
            主动关闭与服务器的连接,将引发自动重连。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Plus.Rapid.RapidServerEngine">
            <summary>
            迅捷的服务端引擎。基于TCP、使用二进制协议。默认允许的最大消息尺寸为64K，心跳超时为30秒。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.LogFilePath">
            <summary>
            记录OMCS.Communication.Basic日志的文件的路径，默认值为在运行目录下的ESFrameworkLog.txt文件。如果不需要写日志文件，则赋值为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.Logger">
            <summary>
            如果被赋非null值，则LogFilePath属性将无效。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.SecurityLogEnabled">
            <summary>
            是否记录用户安全日志。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.UserManager">
            <summary>
            通过此接口，可以获取用户的相关信息以及用户上/下线的事件通知。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.PlatformUserManager">
            <summary>
            平台用户管理器。可以获取群集中所有在线用户信息。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.BasicController">
            <summary>
            通过此接口，服务端可以将目标用户从服务器中踢出，并关闭其对应的tcp连接。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.CustomizeController">
            <summary>
            通过此接口，服务端可以主动向在线用户发送/投递自定义信息。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.FileController">
            <summary>
            通过此接口，服务端可以主动向在线用户发送文件。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.HeartbeatTimeoutInSecs">
            <summary>
            心跳超时间隔（秒）。即服务端多久没有收到客户端的心跳消息，则视客户端为超时掉线。默认值为30秒。如果设置小于等于0，则表示不做心跳检查。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.AutoRespondHeartBeat">
            <summary>
            是否自动回复客户端发过来的心跳消息（将心跳消息原封不动地发回客户端）。默认值为true。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.WaitResponseTimeoutInSecs">
            <summary>
            当通过ICustomizeInfoController.QueryClient方法进行同步调用时，等待回复的最长时间。如果小于等于0，表示一直阻塞调用线程直到等到回复为止。默认值为30秒。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.ContactsController">
            <summary>
            通过此接口，服务端可以主动向某个组广播信息。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.IPAddressBinding">
            <summary>
            通过哪个IP地址提供服务。如果设为null，则表示绑定本地所有IP。默认值为null。（如果要set该属性，则必须要在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.UseAsP2PServer">
            <summary>
            是否同时作为P2P服务器运行。默认值为true（P2P服务器将使用UDP端口，端口号为当前引擎监听的端口号加1）。（如果要set该属性，则必须要在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.P2PEnabled">
            <summary>
            客户端是否开启P2P。即使框架授权了P2P功能，也可以通过该属性关闭P2P。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.ConnectionCount">
            <summary>
            当前在线连接的数量。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.MaxConnectionCount">
            <summary>
            服务器允许最大的同时连接数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.Port">
            <summary>
            当前监听的端口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Plus.Rapid.RapidServerEngine.ServerID">
            <summary>
            服务端实例的唯一编号。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidServerEngine.Initialize(System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler)">
            <summary>
            完成服务端引擎的初始化，并启动服务端引擎。
            </summary>
            <param name="port">用于提供tcp通信服务的端口</param>
            <param name="customizeHandler">服务器通过此接口来处理客户端提交给服务端自定义信息。</param>
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidServerEngine.Initialize(System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler,OMCS.Communication.Plus.Application.Basic.Server.IBasicHandler)">
            <summary>
            完成服务端引擎的初始化，并启动服务端引擎。
            </summary>
            <param name="port">用于提供tcp通信服务的端口</param>
            <param name="customizeHandler">服务器通过此接口来处理客户端提交给服务端自定义信息。</param>
            <param name="basicHandler">用于验证客户端登陆密码。如果不需要验证，则直接传入null。</param> 
        </member>
        <member name="M:OMCS.Communication.Plus.Rapid.RapidServerEngine.Close">
            <summary>
            关闭服务端引擎。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Core.ApplicationServerInfo">
            <summary>
            群集中应用服务器AS的基础信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Core.ApplicationServerInfo.State">
            <summary>
            当前AS的状态。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Core.ApplicationServerInfo.OnlineUserCount">
            <summary>
            当前在线人数。
            </summary>        
        </member>
        <member name="T:OMCS.Communication.Platform.Core.ApplicationServerState">
            <summary>
            群集中的应用服务器（AS）的状态
            </summary>
        </member>
        <member name="F:OMCS.Communication.Platform.Core.ApplicationServerState.Normal">
            <summary>
            正常。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Platform.Core.ApplicationServerState.Frozen">
            <summary>
            冻结。如果AS处于冻结状态，表示该服务器不再接收新的用户。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Platform.Core.ApplicationServerState.TelnetFailure">
            <summary>
            telnet失败。telnet连不上AS提供服务的端口。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Core.IApplicationService">
            <summary>
            ACMS提供给AS使用的服务。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IApplicationService.RegisterServer(OMCS.Communication.Platform.Core.ApplicationServerInfo)">
            <summary>
            注册服务器到群集中
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IApplicationService.UnregisterServer(System.String)">
            <summary>
            从群集中移除服务器
            </summary>   
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IApplicationService.IsServerOnline(System.String)">
            <summary>
            目标服务器是否正在线？
            </summary>
            <param name="serverID">目标服务器的ServerID</param>
            <returns>在线？</returns>
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IApplicationService.RegisterUser(OMCS.Communication.Basic.Server.UserManagement.UserData)">
            <summary>
            当用户登陆到AS时，通知中心服务器。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IApplicationService.RegisterUser(System.Collections.Generic.List{OMCS.Communication.Basic.Server.UserManagement.UserData})">
            <summary>
            当AS重连ACMS成功时，提交所有在线用户的状态。
            </summary>      
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IApplicationService.UnregisterUser(System.String)">
            <summary>
            当用户登出到AS时，通知中心服务器。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IApplicationService.SetUserTag(System.String,System.Byte[])">
            <summary>
            当AS中修改了UserData的Tag时，将回调该方法以同步到ACMS。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IApplicationService.SetP2PAddress(System.String,OMCS.Communication.Basic.Server.UserManagement.P2PAddress)">
            <summary>
            记录客户端上报的P2P地址。如果目标用户不在线，则忽略。
            </summary>
            <param name="userID">客户端用户的ID</param>
            <param name="addr">P2P地址</param>
        </member>
        <member name="T:OMCS.Communication.Platform.Core.IClusterControlService">
            <summary>
            群集控制服务。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Platform.Core.IClusterControlService.ServerRegistered">
            <summary>
            群集中有新的服务器注册进来。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Platform.Core.IClusterControlService.ServerUnregistered">
            <summary>
            群集中的某服务已被注销。参数：服务器ID
            </summary>
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IClusterControlService.GetServerToLogon">
            <summary>
            根据ServerAssignedPolicy，选择群集中合适的服务器。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IClusterControlService.IsServerOnline(System.String)">
            <summary>
            目标服务器是否正在线？
            </summary>
            <param name="serverID">目标服务器的ServerID</param>
            <returns>在线？</returns>
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IClusterControlService.FreezeServer(System.String)">
            <summary>
            冻结群集中的某服务器。如果群集中的某服务器处于冻结，表示该服务器不再接收新的用户（现已登陆的用户仍然正常）。
            </summary>
            <param name="serverID">目标服务器的ID</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IClusterControlService.DefreezeServer(System.String)">
            <summary>
            解冻群集中的某服务器。
            </summary>
            <param name="serverID">目标服务器的ID</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IClusterControlService.RemoveServer(System.String)">
            <summary>
            从群集列表中移除（异常停止的）服务器。
            </summary>
            <param name="serverID">将被移除的服务器的ID</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IClusterControlService.GetServer(System.String)">
            <summary>
            获取目标服务器的信息。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IClusterControlService.GetAllServers">
            <summary>
            获取群集中在线的所有服务器。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Core.IPlatformCustomizeService">
            <summary>
            ACMS提供给群集外的系统（比如BL）使用的接口。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IPlatformCustomizeService.BroadcastInCluster(System.Int32,System.Byte[])">
            <summary>
            向群集中的每台AS发送广播。将被AS的ICallbackHandler的HandleBroadcast处理。
            </summary>
            <param name="informationType">广播信息类型</param>
            <param name="info">广播信息</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IPlatformCustomizeService.SendToServer(System.String,System.Int32,System.Byte[])">
            <summary>
            向应用群集中的某个AS发送信息。如果目标AS不在线，返回false。将被AS的ICallbackHandler的HandleInformation处理。
            </summary>
            <param name="asID">接收信息的AS的ID。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IPlatformCustomizeService.QueryServer(System.String,System.Int32,System.Byte[])">
            <summary>
            向应用群集中的某个AS查询信息。如果目标AS不在线，将抛出异常。将被AS的ICallbackHandler的HandleQuery处理。
            </summary>
            <param name="asID">被查询的AS的ID。</param>
            <param name="informationType">自定义信息类型</param>
            <param name="info">信息</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IPlatformCustomizeService.IsUserOnLine(System.String)">
            <summary>
            目标用户是否在线。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IPlatformCustomizeService.GetUserData(System.String)">
            <summary>
            获取目标在线用户的基础信息。
            </summary>
            <param name="userID">目标用户的ID</param>
            <returns>如果目标用户不在线，则返回null</returns>
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IPlatformCustomizeService.GetOnlineUserCount">
            <summary>
            获取所有在线用户的人数。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IPlatformCustomizeService.KickOut(System.String)">
            <summary>
            将用户从某个AS上踢出。
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IPlatformCustomizeService.GetAllServerTokens">
            <summary>
            获取所有的serverToken。
            </summary>
            <returns>字典。key：serverToken ， value：ServerID</returns>
        </member>
        <member name="T:OMCS.Communication.Platform.Core.PlatformInfoTypes">
            <summary>
            ACMS与AS之间通过TCP（非Remoting）传递的消息类型。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Platform.Core.PlatformInfoTypes.Transfered">
            <summary>
            要转发的消息 C->S->C (单个接收者)
            </summary>
        </member>
        <member name="F:OMCS.Communication.Platform.Core.PlatformInfoTypes.Transfered2">
            <summary>
            要转发的消息 C->S->C (多个接收者)
            </summary>
        </member>
        <member name="F:OMCS.Communication.Platform.Core.PlatformInfoTypes.TransferedDependent">
            <summary>
            要转发的消息（有顺序依赖，可丢弃） C->S->C (单个接收者)
            </summary>
        </member>
        <member name="F:OMCS.Communication.Platform.Core.PlatformInfoTypes.TransferMessageToOtherServer">
            <summary>
            【跨服】要转发的消息（C->S，非P2P消息，消息的最终接收者是其它服务端）
            </summary>
        </member>
        <member name="F:OMCS.Communication.Platform.Core.PlatformInfoTypes.ReportPerformance">
            <summary>
            报告性能 C->S
            </summary>
        </member>
        <member name="F:OMCS.Communication.Platform.Core.PlatformInfoTypes.RemoveServerToken">
            <summary>
             C->S 让ACMS从IServerTokenManager中删除指定的serverToken。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Core.IMessageTransferor">
            <summary>
            位于平台层的消息转发器。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IMessageTransferor.TransferMessage(System.String,OMCS.Communication.Basic.Core.IMessage,System.Collections.Generic.IEnumerable{System.String},System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            在群集中同类型的服务器之间转发消息。
            </summary>
            <param name="sourceServerID">消息来源服务器的ID</param>
            <param name="msg">消息</param>
            <param name="destUserIDs">接收消息的目标用户的UserID的集合</param>      
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IMessageTransferor.TransferMessage(System.String,OMCS.Communication.Basic.Core.IMessage,System.String,System.Boolean,OMCS.Communication.Basic.ActionTypeOnChannelIsBusy)">
            <summary>
            在群集中同类型的服务器之间转发消息。
            </summary>
            <param name="sourceServerID">消息来源服务器的ID</param>
            <param name="msg">消息</param>
            <param name="destUserID">接收消息的目标用户的UserID</param>      
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IMessageTransferor.TransferMessage(System.String,OMCS.Communication.Basic.Core.IMessage,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            在群集中同类型的服务器之间转发消息。
            </summary>
            <param name="sourceServerID">消息来源服务器的ID</param>
            <param name="msg">消息</param>
            <param name="destUserID">接收消息的目标用户的UserID</param>    
            <param name="token4RecordPosting">消息计数标记。</param>     
            <param name="discardPostingCount">当等待投递的消息数大于该值时，就丢弃消息。</param>     
            <param name="dependOnPre">当前数据是否依赖上一次发送的数据。如果依赖，当上一次数据被丢弃时，直接丢弃当前数据。</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Core.IMessageTransferor.TransferMessageToOtherServer(System.String,OMCS.Communication.Basic.Core.IMessage)">
            <summary>
            将消息发送给其它服务器去处理。
            </summary>
            <param name="sourceServerID">消息来源服务器的ID</param>
            <param name="msg">消息</param>           
        </member>
        <member name="T:OMCS.Communication.Platform.Platform.AppliactionClusterManager">
            <summary>
            应用服务器群集管理器。
            实现了ServerAssignedPolicy定义的三种分配策略。如果要使用自定义的群集服务器分配策略，可以overrride GetAppropriateServer方法。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.AppliactionClusterManager.#ctor(OMCS.Communication.Platform.Platform.ServerAssignedPolicy,ESBasic.Loggers.IAgileLogger,System.Int32)">
            <summary>
            Ctor
            </summary>
            <param name="policy">服务器分配策略</param>
            <param name="detectSpanInSecs">定时检测群集中服务器的时间间隔</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.AppliactionClusterManager.EngineAction">
            <summary>
            选择最小人数或CPU的服务器
            </summary>        
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.AppliactionClusterManager.GetServerToLogon">
            <summary>
            根据ServerAssignedPolicy，选择群集中合适的服务器。
            </summary>           
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.AppliactionClusterManager.RegisterServer(OMCS.Communication.Platform.Core.ApplicationServerInfo)">
            <summary>
            注册服务器到群集中
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.AppliactionClusterManager.UnregisterServer(System.String)">
            <summary>
            从群集中移除服务器
            </summary>   
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.AppliactionClusterManager.IsServerOnline(System.String)">
            <summary>
            目标服务器是否正在线？
            </summary>
            <param name="serverID">目标服务器的ServerID</param>
            <returns>在线？</returns>
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.AppliactionClusterManager.FreezeServer(System.String)">
            <summary>
            冻结群集中的某服务器。如果群集中的某服务器处于冻结，表示该服务器不再接收新的用户（现已登陆的用户仍然正常）。
            </summary>
            <param name="serverID">目标服务器的ID</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.AppliactionClusterManager.DefreezeServer(System.String)">
            <summary>
            解冻群集中的某服务器。
            </summary>
            <param name="serverID">目标服务器的ID</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.AppliactionClusterManager.RemoveServer(System.String)">
            <summary>
            从群集列表中移除（异常停止的）服务器。
            </summary>
            <param name="serverID">将被移除的服务器的ID</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.AppliactionClusterManager.ReportPerformance(System.String,System.Int32)">
            <summary>
            修改群集中某台服务器的最新状态数据。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.AppliactionClusterManager.GetServer(System.String)">
            <summary>
            获取目标服务器的信息。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.AppliactionClusterManager.GetAllServers">
            <summary>
            获取群集中的所有服务器。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Platform.IPlatformServer">
            <summary>
            群集服务器核心入口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Platform.IPlatformServer.ClusterControlService">
            <summary>
            群集控制服务。可以通过Remoting或者FastHttpApi发布此接口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Platform.IPlatformServer.PlatformCustomizeService">
            <summary>
            ACMS提供给群集外的系统（比如BL）使用的接口。可以通过Remoting或者FastHttpApi发布此接口。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Platform.Platform.IPlatformServer.MessageTransfered">
            <summary>
            当在AS之间转发消息时，触发该事件。参数：SourceUserID - DestUserID - MessageLength
            </summary>
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.IPlatformServer.Close">
            <summary>
            关闭群集服务器。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Platform.IServerTokenAssigner">
            <summary>
            【跨服】ServerToken分配器接口。
            客户端在发送非P2P消息（即消息最终接收者为AS的消息）时，通过使用ServerToken（以'_'开头）作为DestUserID，就可以将目标消息路由到群集中相应的AS去处理。
            相同ServerToken的消息将被路由到同一个AS处理。这样可以保证状态（如动态组、会议白板内容等）的完整性。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.IServerTokenAssigner.GetServerIDByToken(System.String,System.String)">
            <summary>
            根据serverToken获取对应的AS应用服务器的ServerID。
            </summary>
            <param name="serverToken">serverToken（以'_'开头）</param>
            <param name="sourceServerID">发起该调用请求的源应用服务器ServerID</param>
            <returns>应用服务器的ServerID</returns>
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.IServerTokenAssigner.RemoveToken(System.String)">
            <summary>
            当不再需要使用这个serverToken时，可删除它。
            </summary>
            <param name="serverToken">serverToken（以'_'开头）</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.IServerTokenAssigner.GetAllServerTokens">
            <summary>
            获取所有的serverToken。
            </summary>
            <returns>字典。key：serverToken ， value：ServerID</returns>
        </member>
        <member name="T:OMCS.Communication.Platform.Platform.ServerTokenAssigner">
            <summary>
            OMCS.Communication.Platform默认的IServerTokenAssigner实现。
            方案：针对某个serverToken，ACMS收到其对应的第一个GetServerIDByToken请求时，将该serverToken与来源AS的ServerID绑定。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Platform.Platform.ServerTokenAssigner.serverTokenManager">
            <summary>
            跨服消息（接收者为服务端）的serverToken管理。一个AS可以对应多个serverToken。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Platform.PlatformCustomizeService">
            <summary>
            ACMS提供的Remoting服务。
            (1)管理所有的在线应用服务器。
            (2)管理所有的在线用户。
            (3)在AS之间转发用户的P2P消息。
            (4)IPlatformCustomizeService 给外部控制群集。   
            </summary>
        </member>
        <member name="E:OMCS.Communication.Platform.Platform.PlatformCustomizeService.MessageTransfered">
            <summary>
            当在AS之间转发消息时，触发该事件。参数：SourceUserID - DestUserID - MessageLength
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Platform.PlatformServer">
            <summary>
            群集服务器核心入口。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Platform.Platform.PlatformServer.MessageTransfered">
            <summary>
            当在AS之间转发消息时，触发该事件。参数：SourceUserID - DestUserID - MessageLength
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Platform.PlatformServer.PlatformCustomizeService">
            <summary>
            ACMS提供给群集外的系统（比如BL）使用的接口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Platform.PlatformServer.ClusterControlService">
            <summary>
            群集控制服务。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Platform.Platform.PlatformServer.Close">
            <summary>
            关闭群集平台服务器ACMS。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Platform.ServerAssignedPolicy">
            <summary>
            群集中的服务器分配策略
            </summary>
        </member>
        <member name="F:OMCS.Communication.Platform.Platform.ServerAssignedPolicy.Poll">
            <summary>
            轮询。
            </summary>
        </member>
        <member name="F:OMCS.Communication.Platform.Platform.ServerAssignedPolicy.MinUserCount">
            <summary>
            选择群集中在线人数最小的那台Server。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Rapid.IPlatformRapidServerEngine">
            <summary>
            工作于OMCS.Communication.Platform服务端Rapid引擎。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Platform.Rapid.IPlatformRapidServerEngine.PlatformConnectionInterrupted">
            <summary>
            当与平台服务器ACMS断开连接时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Platform.Rapid.IPlatformRapidServerEngine.PlatformConnectionRebuild">
            <summary>
            当与平台服务器ACMS连接重新建立时，触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.IPlatformRapidServerEngine.PlatformCallbackHandler">
            <summary>
            ACMS回调处理器。用于处理ACMS对当前AS的回调。默认值为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.IPlatformRapidServerEngine.PlatformConnected">
            <summary>
            与平台服务器ACMS是否连接？
            </summary>
        </member>
        <member name="M:OMCS.Communication.Platform.Rapid.IPlatformRapidServerEngine.RemoveServerToken(System.String)">
            <summary>
            【跨服】让ACMS从IServerTokenManager中删除指定的serverToken。
            </summary>
            <param name="serverToken">ServerToken（以'_'开头）</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Rapid.IPlatformRapidServerEngine.GetServerTokensOfCurrentServer">
            <summary>
            获取当前服务器上的所有serverToken。
            </summary>       
        </member>
        <member name="M:OMCS.Communication.Platform.Rapid.IPlatformRapidServerEngine.SendToOtherServer(System.String,System.Int32,System.Byte[])">
            <summary>
            发送消息给其它的AS。
            </summary>
            <param name="asID">接收消息的AS服务器的ID</param>
            <param name="informationType">消息类型</param>
            <param name="info">消息内容</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Rapid.IPlatformRapidServerEngine.GetHostServer(System.String)">
            <summary>
            获取目标用户所在的AS服务器的ID。如果目标用户不在线，则返回null。
            </summary>
            <param name="userID">目标用户的UserID</param>      
        </member>
        <member name="T:OMCS.Communication.Platform.Rapid.RapidEngineFactory">
            <summary>
            Rapid引擎工厂。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Platform.Rapid.RapidEngineFactory.CreateServerEngine(System.String,System.String,System.Int32)">
            <summary>
            创建基于OMCS.Communication.Platform的服务端引擎。
            </summary>
            <param name="currentServerID">当前应用服务器的ID</param>
            <param name="acmsIP">应用群集管理服务器IP地址</param>        
            <param name="acmsTransferPort">应用群集管理服务器用于转发消息的端口</param>   
        </member>
        <member name="M:OMCS.Communication.Platform.Rapid.RapidEngineFactory.CreatePlatformServer(System.Int32,OMCS.Communication.Platform.Platform.ServerAssignedPolicy,OMCS.Communication.Platform.Platform.IServerTokenAssigner)">
            <summary>
             创建一个群集服务器ACMS实例。
            </summary>
            <param name="transferPort">用于转发消息的端口。</param>
            <param name="serverAssignedPolicy">服务器分配策略。</param>
            <param name="serverTokenAssigner">ServerToken管理器。</param>
            <returns>ACMS实例</returns>
        </member>
        <member name="T:OMCS.Communication.Platform.Rapid.RapidServerEngine">
            <summary>
            内部与平台通信的服务端Rapid引擎。基于TCP、使用二进制协议。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Platform.Rapid.RapidServerEngine.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Ctor。
            </summary>
            <param name="currentServerID">当前应用服务器的ID</param>
            <param name="_acmsIP">应用群集管理服务器IP地址</param>         
            <param name="_acmsTransferPort">应用群集管理服务器用于转发消息的端口</param>   
        </member>
        <member name="E:OMCS.Communication.Platform.Rapid.RapidServerEngine.PlatformConnectionInterrupted">
            <summary>
            当与平台服务器ACMS断开连接时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Communication.Platform.Rapid.RapidServerEngine.PlatformConnectionRebuild">
            <summary>
            当与平台服务器ACMS连接重新建立时，触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.LogFilePath">
            <summary>
            记录ESFramework日志的文件的路径，默认值为在运行目录下的ESFrameworkLog.txt文件。如果不需要写日志文件，则赋值为null。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.Logger">
            <summary>
            如果被赋非null值，则LogFilePath属性将无效。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.SecurityLogEnabled">
            <summary>
            是否记录用户安全日志。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.UserManager">
            <summary>
            通过此接口，可以获取当前AS上用户的相关信息以及用户上/下线的事件通知。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.PlatformUserManager">
            <summary>
            平台用户管理器（通常为ACMS的远程引用）。可以获取群集中所有在线用户信息。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.BasicController">
            <summary>
            通过此接口，服务端可以将目标用户从服务器中踢出，并关闭其对应的tcp连接。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.CustomizeController">
            <summary>
            通过此接口，服务端可以主动向在线用户发送/投递自定义信息。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.FileController">
            <summary>
            通过此接口，服务端可以主动向在线用户发送文件。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.HeartbeatTimeoutInSecs">
            <summary>
            心跳超时间隔（秒）。即服务端多久没有收到客户端的心跳消息，则视客户端为超时掉线。默认值为30秒。如果设置小于等于0，则表示不做心跳检查。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.AutoRespondHeartBeat">
            <summary>
            是否自动回复客户端发过来的心跳消息（将心跳消息原封不动地发回客户端）。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.WaitResponseTimeoutInSecs">
            <summary>
            当通过ICustomizeInfoController.QueryClient方法进行同步调用时，等待回复的最长时间。如果小于等于0，表示一直阻塞调用线程直到等到回复为止。默认值为30秒。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.ContactsController">
            <summary>
            通过此接口，服务端可以主动向某个组广播信息。（只有在RapidServerEngine初始化成功后，才能正常使用。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.IPAddressBinding">
            <summary>
            通过哪个IP地址提供服务。如果设为null，则表示绑定本地所有IP。默认值为null。（如果要set该属性，则必须要在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.UseAsP2PServer">
            <summary>
            是否同时作为P2P服务器运行。默认值为true（P2P服务器将使用UDP端口，端口号为当前引擎监听的端口号加1）。（如果要set该属性，则必须要在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.ConnectionCount">
            <summary>
            当前在线连接的数量。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.MaxConnectionCount">
            <summary>
            服务器允许最大的同时连接数。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.Port">
            <summary>
            当前监听的端口。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.ServerID">
            <summary>
            服务端实例的唯一编号。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Rapid.RapidServerEngine.PlatformCallbackHandler">
            <summary>
            ACMS回调处理器。用于处理ACMS对当前AS的回调。默认值为null。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Platform.Rapid.RapidServerEngine.Initialize(System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler)">
            <summary>
            完成服务端引擎的初始化，并启动服务端引擎。
            </summary>
            <param name="port">用于提供tcp通信服务的端口</param>
            <param name="customizeHandler">服务器通过此接口来处理客户端提交给服务端自定义信息。</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Rapid.RapidServerEngine.Initialize(System.Int32,OMCS.Communication.Plus.Application.CustomizeInfo.ICustomizeHandler,OMCS.Communication.Plus.Application.Basic.Server.IBasicHandler)">
            <summary>
            完成服务端引擎的初始化，并启动服务端引擎。
            </summary>
            <param name="port">用于提供tcp通信服务的端口</param>
            <param name="customizeHandler">服务器通过此接口来处理客户端提交给服务端自定义信息。</param>
            <param name="basicHandler">用于验证客户端登陆密码。如果不需要验证，则直接传入null。</param>  
        </member>
        <member name="M:OMCS.Communication.Platform.Rapid.RapidServerEngine.Close">
            <summary>
            关闭服务端引擎。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Server.ApplicationServiceBridge">
            <summary>
            与AMCS通信的桥梁。将应用服务器的状态上报给ACMS。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Server.ApplicationServiceBridge.UserManager">
            <summary>
            本地用户管理器
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Server.ApplicationServiceBridge.ReportSpanInSecs">
            <summary>
            性能报告的时间间隔。默认值5秒。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Server.ApplicationServiceProxy">
            <summary>
            用于取代Remoting以访问群集服务器的IApplicationService。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Server.CrossedRegularSender">
            <summary>
            跨应用服务器的正规发送器。目标用户可以在群集中的其它应用服务器上。
            </summary>
        </member>
        <member name="P:OMCS.Communication.Platform.Server.CrossedRegularSender.ServerID">
            <summary>
            当前服务器的ID。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Server.DefaultContactsManager">
            <summary>
            其用途在于：假设所有的在线用户都是相关联系人。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Server.EfficientPlatformUserManager">
            <summary>
            更高效的平台用户管理器。先访问本地用户管理器，再访问平台管理器。
            </summary>
        </member>
        <member name="T:OMCS.Communication.Platform.Server.IPlatformCallbackHandler">
            <summary>
            用于处理ACMS平台服务器的自定义回调。
            </summary>
        </member>
        <member name="M:OMCS.Communication.Platform.Server.IPlatformCallbackHandler.HandleBroadcast(System.String,System.Int32,System.Byte[])">
            <summary>
            处理ACMS或其它服务器发送过来的广播。
            </summary>
            <param name="sourceServerID">广播消息的源服务器ID。当为null时，表示是ACMS发过来的。</param>
            <param name="informationType">广播信息类型</param>
            <param name="info">广播信息</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Server.IPlatformCallbackHandler.HandleInformation(System.String,System.Int32,System.Byte[])">
            <summary>
            处理ACMS或其它服务器发送过来的信息。
            </summary>
            <param name="sourceServerID">广播消息的源服务器ID。当为null时，表示是ACMS发过来的。</param>
            <param name="informationType">信息类型</param>
            <param name="info">信息</param>
        </member>
        <member name="M:OMCS.Communication.Platform.Server.IPlatformCallbackHandler.HandleQuery(System.String,System.Int32,System.Byte[])">
            <summary>
            处理ACMS或其它服务器发送过来的查询。
            </summary>
            <param name="sourceServerID">广播消息的源服务器ID。当为null时，表示是ACMS发过来的。</param>
            <param name="informationType">信息类型</param>
            <param name="info">信息</param>
        </member>
        <member name="F:OMCS.AuthorizeManager.MaxTryMinutes">
            <summary>
            试用时，连接器最大连续工作时间。
            </summary>
        </member>
        <member name="F:OMCS.AuthorizeManager.MaxTryMinutesFromStart">
            <summary>
            试用时，距程序启动多少分钟后，再调用BeginConnect就会失败，返回ConnectResult.TryMinutesLimit。
            </summary>
        </member>
        <member name="F:OMCS.AuthorizeManager.IsRunningAsWebAddin">
            <summary>
            当前客户端是否在OMCS Web插件中运行。如果是，就不使用MaxTryMinutesFromStart限制
            </summary>
        </member>
        <member name="T:OMCS.ICompactSerializer">
            <summary>
            ICompactSerializer 紧凑序列化器，产生紧凑的字节流。
            </summary>
        </member>
        <member name="M:OMCS.ICompactSerializer.Deserialize``1(System.Byte[],System.Int32)">
            <summary>
            反序列化。
            </summary>
            <typeparam name="T">反序列化后得到的对象的类型</typeparam>
            <param name="buff">数据缓冲区</param>
            <param name="startIndex">偏移起始点</param>
            <returns>类型为T的对象</returns>
        </member>
        <member name="M:OMCS.ICompactSerializer.Serialize``1(``0)">
            <summary>
            将对象序列化为字节流。
            </summary>
            <typeparam name="T">对象的类型</typeparam>
            <param name="obj">要序列化的对象</param>
            <returns>序列化结果</returns>
        </member>
        <member name="M:OMCS.ICompactSerializer.Serialize(System.Type,System.Object)">
            <summary>
            将对象序列化为字节流。
            </summary>
            <param name="type">要序列化的对象的类型</param>
            <param name="obj">要序列化的对象</param>
            <returns>序列化结果</returns>
        </member>
        <member name="T:OMCS.NotSerializedCompactlyAttribute">
            <summary>
            用于标记不需要进行紧凑序列化的字段或属性。
            </summary>
        </member>
        <member name="M:OMCS.BaseCompactSerializer.CustomizeExtenseSerialize(System.IO.MemoryStream,System.Type,System.Object)">
            <summary>
            增加自定义的序列化类型。如果自定义不支持目标类型，请返回false。
            </summary>        
        </member>
        <member name="M:OMCS.BaseCompactSerializer.CustomizeExtenseDeserialize(System.Type,System.Byte[],System.Int32@,System.Object@)">
            <summary>
            增加自定义的序列化类型。如果自定义不支持目标类型，请返回false。
            </summary>        
        </member>
        <member name="M:OMCS.CompactPropertySerializer.SetDefault(OMCS.ICompactSerializer)">
            <summary>
            如果扩展了CompactPropertySerializer，调用该方法重置默认的ICompactSerializer。
            </summary>        
        </member>
        <member name="T:OMCS.SerializeException">
            <summary>
            序列化或反序列化时，产生的异常。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.ConnectResponseContract.AllowControl">
            <summary>
            允许guest操作桌面。
            </summary>
        </member>
        <member name="T:OMCS.Contracts.OmcsPlatformInfoTypes">
            <summary>
            OMCS群集平台消息类型。
            </summary>
        </member>
        <member name="F:OMCS.Contracts.OmcsPlatformInfoTypes.SessionBuilt">
            <summary>
            当服务端收到来自Guest的OMCSInfoTypes.SessionBuilt时，如果Owner在其它服务器上，则需要通知给其它服务端构建好友关系（以完成好友下线通知）。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.GetAuthorization">
            <summary>
            从服务器获取授权内容。回复AuthorizationContract。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.GetConfiguration">
            <summary>
            从服务器获取配置信息。C->S，请求协议为空，回复为OMCSConfigurationContract
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.SessionBuilt">
            <summary>
            当两个客户端之间的会话建立后，通知服务器。C->S
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.Connect">
            <summary>
            请求连接到对方的多媒体设备。guest->owner。消息体为DeviceTypeContract
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.Disconnect">
            <summary>
            断开到对方的设备连接。guest->owner 。消息体为DeviceTypeContract
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.DisconnectNotify">
            <summary>
            当owner主动断开guest与本地设备的连接时，通知guest。owner->guest。消息体为DeviceTypeContract
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.VideoFrameData">
            <summary>
            视频帧数据。owner->guest。消息体为VideoFrameContract
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.Command2Device">
            <summary>
            对设备的命令。guest->owner 。消息体为CommandOrQueryContract
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.QueryDeviceInfo">
            <summary>
            对设备的查询。guest->owner 。消息体为CommandOrQueryContract
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.QueryInitializeFinished">
            <summary>
            查询目标用户的多媒体管理器是否完成了初始化。C->C。请求消息体为null，回复为bool。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.BroadcastNotify">
            <summary>
            Owner -> Guest。某设备的owner发送通知给所有的guest。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.AudioFrameData">
            <summary>
            音频帧数据。owner->guest。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.GetChatGroupMembers">
            <summary>
            请求加入聊天组。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.RequestJoinChatGroup">
            <summary>
            请求加入聊天组。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.JoinChatGroupNotify">
            <summary>
            当有人加入聊天组时，通知其它组员。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.ExitChatGroup">
            <summary>
            离开聊天组
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.ExitChatGroupNotify">
            <summary>
            当有人退出聊天组或掉线时，通知其它组员。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.CumtomMessage">
            <summary>
             短信消息。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.AudioMessage">
            <summary>
             语音消息。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.AudioFrameData2">
            <summary>
            音频帧数据。owner->guest。服务端转发数据给客户端时，仍然使用AudioFrameData。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.VideoFrameData2">
            <summary>
            摄像头视频帧数据。owner->guest。服务端转发数据给客户端时，仍然使用VideoFrameData。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.VideoFrameData3">
            <summary>
            桌面视频帧数据。owner->guest。服务端转发数据给客户端时，仍然使用VideoFrameData。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.AudioFrameData2Broadcast">
            <summary>
            广播音频帧数据。owner->guest。服务端转发数据给客户端时，仍然使用AudioFrameData。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.VideoFrameData2Broadcast">
            <summary>
            广播摄像头视频帧数据。owner->guest。服务端转发数据给客户端时，仍然使用VideoFrameData。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.VideoFrameData3Broadcast">
            <summary>
            广播桌面视频帧数据。owner->guest。服务端转发数据给客户端时，仍然使用VideoFrameData。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.OMCSInfoTypes.ForceIFrameNotify">
            <summary>
            通知Owner端强制输出I帧
            </summary>
        </member>
        <member name="T:OMCS.Contracts.ChatType">
            <summary>
            聊天组的类型。
            </summary>
        </member>
        <member name="F:OMCS.Contracts.ChatType.Audio">
            <summary>
            语音聊天组。
            </summary>
        </member>
        <member name="F:OMCS.Contracts.ChatType.Video">
            <summary>
            视频聊天组。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.VideoFrameContract.FrameIndex">
            <summary>
            帧索引。（目前只对视频数据有效）
            注意：frameIndex=0 表示为I帧，如果为P帧或B帧，则顺序递增。当又遇到I帧时，frameIndex又重置为0。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.VideoFrameContract.VideoQuality">
            <summary>
            视频编码的清晰度。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.BroadcastVideoFrameContract.FrameIndex">
            <summary>
            帧索引。（目前只对视频数据有效）
            注意：frameIndex=0 表示为I帧，如果为P帧或B帧，则顺序递增。当又遇到I帧时，frameIndex又重置为0。
            </summary>
        </member>
        <member name="P:OMCS.Contracts.BroadcastVideoFrameContract.VideoQuality">
            <summary>
            视频编码的清晰度。
            </summary>
        </member>
        <member name="T:OMCS.Contracts.WBWorkTagType">
            <summary>
            白板Work的Tag的类型。
            </summary>
        </member>
        <member name="F:OMCS.Contracts.WBWorkTagType.CoursewareList">
            <summary>
            课件列表。
            </summary>
        </member>
        <member name="F:OMCS.Contracts.WBWorkTagType.CurrentCoursewareFile">
            <summary>
            Work当前使用的课件的文件。
            </summary>
        </member>
        <member name="F:OMCS.Contracts.CurrentCoursewareFileInfo.FileNameOrUrl">
            <summary>
            本地课件的名称，或网络课件的Url
            </summary>
        </member>
        <member name="T:OMCS.CoursewareTransfer.Comment4CoursewareTransfer">
            <summary>
            在文件夹同步环境中解析BeginSendFile方法的comment参数。
            </summary>
        </member>
        <member name="P:OMCS.CoursewareTransfer.CoursewareTransferParameters.ServerRelativeDirPath">
            <summary>
            只在上传的时候使用。要上传的文件夹在服务器上的相对路径。
            </summary>
        </member>
        <member name="T:OMCS.CoursewareTransfer.ResDirectoryContract">
            <summary>
            回复某个目录信息。
            </summary>	
        </member>
        <member name="T:OMCS.CoursewareTransfer.CoursewareTransferTypes">
            <summary>
            所有与文件夹同步的消息类型的空间。默认取值 -100 ~ 0
            </summary>	
        </member>
        <member name="P:OMCS.CoursewareTransfer.CoursewareTransferTypes.ReqDirectoryInfo">
            <summary>
            请求目录信息。请求协议为ReqDirectoryContract，回复为ResDirectoryContract
            </summary>
        </member>
        <member name="E:OMCS.CoursewareTransfer.Passive.HttpDownloader.DownloadCompleted">
            <summary>
            当下载完成的时候，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.CoursewareTransfer.Passive.HttpDownloader.DownloadProgress">
            <summary>
            当下载完成的时候，触发此事件。参数：文件大小 - 已下载字节数
            </summary>
        </member>
        <member name="E:OMCS.CoursewareTransfer.Passive.HttpDownloader.DownloadDisruptted">
            <summary>
            下载中断。
            </summary>
        </member>
        <member name="E:OMCS.CoursewareTransfer.Passive.HttpDownloader.DownloadStarted">
            <summary>
            下载开始
            </summary>
        </member>
        <member name="F:OMCS.CoursewareTransfer.Passive.HttpDownloaderState.Running">
            <summary>
            运行中
            </summary>
        </member>
        <member name="F:OMCS.CoursewareTransfer.Passive.HttpDownloaderState.Paused">
            <summary>
            暂停
            </summary>
        </member>
        <member name="F:OMCS.CoursewareTransfer.Passive.HttpDownloaderState.Cancelled">
            <summary>
            取消
            </summary>
        </member>
        <member name="F:OMCS.CoursewareTransfer.Passive.HttpDownloaderState.Completed">
            <summary>
            完成
            </summary>
        </member>
        <member name="T:OMCS.CoursewareTransfer.Passive.ICoursewareTransferManager">
            <summary>
            用于同步本地目录与服务器目录的文件。
            </summary>
        </member>
        <member name="M:OMCS.CoursewareTransfer.Passive.ICoursewareTransferManager.StartDownload(System.String,System.String[])">
            <summary>
            将服务器的serverRelativeDir目录下的fileNames文件下载到本地currentDir目录。
            </summary>    
        </member>
        <member name="M:OMCS.CoursewareTransfer.Passive.ICoursewareTransferManager.StartUpload(System.String[])">
            <summary>
            将本地文件filesPath上传到服务器的serverRelativeDir目录。
            </summary>       
        </member>
        <member name="M:OMCS.CoursewareTransfer.Passive.ICoursewareTransferManager.StartDownloadUrl(System.String,System.String)">
            <summary>
            2021.06.02 
            将指定Url的文件下载到本地currentDir目录中。
            </summary>        
        </member>
        <member name="E:OMCS.CoursewareTransfer.Passive.CoursewareTransferManager.SynchronizeCompleted">
            <summary>
            当同步完成时，触发该事件【UI线程】。参数:Download - succeed
            </summary>
        </member>
        <member name="M:OMCS.CoursewareTransfer.Passive.CoursewareTransferManager.Initialize(System.String,System.String,OMCS.CoursewareTransfer.Passive.ICoursewareTransferView)">
            <summary>
            初始化并启动文件夹同步过程。
            </summary>             
            <param name="serverRelativeDir">服务器上对应的文件夹的相对路径</param>
        </member>
        <member name="M:OMCS.CoursewareTransfer.Passive.CoursewareTransferManager.Cancel">
            <summary>
            取消同步。
            </summary>
        </member>
        <member name="E:OMCS.CoursewareTransfer.Server.CoursewareTransferHandler.FileUploaded">
            <summary>
            当一个文件上传完毕时，触发此事件。参数：文件的全路径。
            </summary>
        </member>
        <member name="T:OMCS.MultimediaDeviceType">
            <summary>
            多媒体设备的类型。
            </summary>
        </member>
        <member name="F:OMCS.MultimediaDeviceType.Camera">
            <summary>
            摄像头。
            </summary>
        </member>
        <member name="F:OMCS.MultimediaDeviceType.Microphone">
            <summary>
            话筒。
            </summary>
        </member>
        <member name="F:OMCS.MultimediaDeviceType.Desktop">
            <summary>
            桌面。
            </summary>
        </member>
        <member name="F:OMCS.MultimediaDeviceType.WhiteBoard">
            <summary>
            电子白板。
            </summary>
        </member>
        <member name="F:OMCS.MultimediaDeviceType.ShortMessage">
            <summary>
            语音留言
            </summary>
        </member>
        <member name="T:OMCS.GlobalUtil">
            <summary>
            全局公共设施。用于设置全局参数。
            </summary>
        </member>
        <member name="M:OMCS.GlobalUtil.SetMaxLengthOfUserID(System.Byte)">
            <summary>
            设置UserID（包括GroupID）的最大长度(不能超过255)。必须在OMCS引擎初始化之前设置才有效。注意，客户端与服务端要统一设置。
            </summary>       
        </member>
        <member name="M:OMCS.GlobalUtil.SetMaxLengthOfMessage(System.Int32)">
            <summary>
            设置消息的最大长度,初始值为2M。必须在OMCS引擎初始化之前设置才有效。注意，客户端与服务端要统一设置。
            </summary>  
        </member>
        <member name="M:OMCS.GlobalUtil.SetAuthorizedUser(System.String,System.String)">
            <summary>
            设置授权帐号和密码。在OMCS服务端初始化之前设置。
            </summary>  
        </member>
        <member name="P:OMCS.GlobalUtil.WriteTimeoutInSecs">
            <summary>
            写超时。单位：秒。默认值5。
            </summary>
        </member>
        <member name="T:OMCS.OMCSConfiguration">
            <summary>
            OMCS统一配置。
            </summary>
        </member>
        <member name="M:OMCS.OMCSConfiguration.#ctor(System.String)">
            <summary>
            构造函数。
            </summary>         
            <param name="_systemToken">系统标志</param>
        </member>
        <member name="T:OMCS.EncodingQuality">
            <summary>
            视频、音频的编码质量
            </summary>
        </member>
        <member name="T:OMCS.RotateAngle">
            <summary>
            旋转角度
            </summary>
        </member>
        <member name="F:OMCS.RotateAngle.R0">
            <summary>
            不旋转
            </summary>
        </member>
        <member name="F:OMCS.RotateAngle.R90">
            <summary>
            向右旋转90度
            </summary>
        </member>
        <member name="F:OMCS.RotateAngle.R180">
            <summary>
            向右旋转180度
            </summary>
        </member>
        <member name="F:OMCS.RotateAngle.R270">
            <summary>
            向右旋转270度
            </summary>
        </member>
        <member name="T:OMCS.Paint.IWork">
            <summary>
            IWork 能够进行同步的基础接口，用于实现白板协作。************** 特别要注意，以防引起连锁反应 **********************
            zhuweisky 2010.03.29
            </summary>
        </member>
        <member name="E:OMCS.Paint.IWork.ViewChangedPassive">
            <summary>
            当接收到其它用户操作当前View发生变化时，触发此事件。参数为PageID - ViewIDList
            </summary>
        </member>
        <member name="E:OMCS.Paint.IWork.ViewRemovedPassive">
            <summary>
            当接收到其它用户删除当前View时，触发此事件。参数为PageID - ViewID。
            注：当ViewID为null时，表示清空当前page中的所有view。
            </summary>
        </member>
        <member name="M:OMCS.Paint.IWork.SubscribeViewEventInPage">
            <summary>
            SubscribeViewEventInPage 让每个Page预定其内部所有view实例的相关事件。该方法用于网络系统中，当客户端从服务器获取当前work实例后，
            需要调用Work.SubscribeViewEventInPage来将View与page联系起来。 -- 因为view的相关事件是NonSerialized。
            </summary>
        </member>
        <member name="M:OMCS.Paint.IWork.SubscribePageEvent">
            <summary>
            SubscribePageEvent 当反序列化获得work实例后(从网络或本地文件)，需要调用此方法预定各个Page的相关事件，因为Page的相关事件是NonSerialized的。
            </summary>
        </member>
        <member name="M:OMCS.Paint.IWork.Clear(System.Boolean)">
            <summary>
            Clear 删除所有page。
            </summary>
        </member>
        <member name="T:OMCS.Paint.IWorkInputs">
            <summary>
            接收来自网络的消息，变成白板的输入。
            </summary>
        </member>
        <member name="T:OMCS.Paint.ViewCanvas">
            <summary>
            集合了所有Paint功能的用户控件。
            </summary>
        </member>
        <member name="P:OMCS.Paint.ViewCanvas.KeyMoveDistance">
            <summary>
            KeyMoveDistance 当ArrowKeyEnabled为true时，每按一下方向键时移动选中的ViewObject的距离
            </summary>
        </member>
        <member name="P:OMCS.Paint.ViewCanvas.ArrowKeyEnabled">
            <summary>
            ArrowKeyEnabled 是否启用方向键来移动选中的ViewObject
            </summary>
        </member>
        <member name="P:OMCS.Paint.ViewCanvas.NewViewSelected">
            <summary>
            是否选中新创建的view。默认值false。
            </summary>
        </member>
        <member name="P:OMCS.Paint.ViewCanvas.SpringEventWhenScrollWorkSpace">
            <summary>
            当滚动工作区的滚动条时，是否触发WorkSpaceScrollPositionChanged事件。默认值：false。
            </summary>
        </member>
        <member name="P:OMCS.Paint.ViewCanvas.FocusOnNewViewByOther">
            <summary>
            如果协作者新建了一个view，则自动选中该view，并调节滚动条使其在可视区域内。
            </summary>
        </member>
        <member name="M:OMCS.Paint.ViewCanvas.SetCurrentViewType(OMCS.Paint.ViewType)">
            <summary>
            设置当前要绘制的View的类型。
            </summary>
        </member>
        <member name="M:OMCS.Paint.ViewCanvas.SetLineDash(System.Boolean)">
            <summary>
            设置线条是否为虚线。
            </summary>   
        </member>
        <member name="M:OMCS.Paint.ViewCanvas.SetLineWidth(System.Int32)">
            <summary>
            设置线条的宽度。
            </summary> 
        </member>
        <member name="M:OMCS.Paint.ViewCanvas.SetTextBoxMinSize(System.Drawing.Size)">
            <summary>
            设置文本输入框的最小尺寸。
            </summary>        
        </member>
        <member name="M:OMCS.Paint.ViewCanvas.SetFilledColor(System.Drawing.Color)">
            <summary>
            设置填充颜色。
            </summary>
        </member>
        <member name="M:OMCS.Paint.ViewCanvas.SetLineColor(System.Drawing.Color)">
            <summary>
            设置线条颜色。
            </summary>
        </member>
        <member name="M:OMCS.Paint.ViewCanvas.SetTextFormat(OMCS.Paint.TextFont)">
            <summary>
            设置文本格式（字体、颜色）。
            </summary>
        </member>
        <member name="T:OMCS.Paint.PageZoomFactor">
            <summary>
            白板页面的缩放系数。
            </summary>
        </member>
        <member name="F:OMCS.Paint.PageZoomFactor.Percent25">
            <summary>
            0.25
            </summary>
        </member>
        <member name="F:OMCS.Paint.PageZoomFactor.Percent50">
            <summary>
            0.5
            </summary>
        </member>
        <member name="F:OMCS.Paint.PageZoomFactor.Percent75">
            <summary>
            0.75
            </summary>
        </member>
        <member name="F:OMCS.Paint.PageZoomFactor.Percent100">
            <summary>
            1.0
            </summary>
        </member>
        <member name="F:OMCS.Paint.PageZoomFactor.Percent125">
            <summary>
            1.25
            </summary>
        </member>
        <member name="F:OMCS.Paint.PageZoomFactor.Percent150">
            <summary>
            1.5
            </summary>
        </member>
        <member name="F:OMCS.Paint.PageZoomFactor.Percent200">
            <summary>
            2.0
            </summary>
        </member>
        <member name="E:OMCS.Paint.Work.CurrentPageIndexChanged">
            <summary>
            参数：int pageIndex, bool toNetwork
            </summary>
        </member>
        <member name="P:OMCS.Paint.Work.Landscape">
            <summary>
            Landscape 如果页面应横向打印，则为 true；反之，则为 false。默认值为true。
            </summary>
        </member>
        <member name="P:OMCS.Paint.Work.ViewIDCreator">
            <summary>
            ViewIDCreator 当多人协作时，同步ViewID的生成。另外可以考虑使用ESBasic.ObjectManagement.Basic.BeforehandCreator来提前生成许多ViewID。
            </summary>
        </member>
        <member name="P:OMCS.Paint.Work.PreCurrentPageIndex">
            <summary>
            上一个当前页的Index。
            </summary>
        </member>
        <member name="P:OMCS.Paint.Work.Boundary">
            <summary>
            Page的边界。值为null时，表示没有边界。
            </summary>
        </member>
        <member name="P:OMCS.Paint.Work.WorkInputsCallback">
            <summary>
            当Work接收到来自网络的白板消息，首先会改变当前Work的内容，然后，再回调WorkInputsCallback通知外部该变化。
            </summary>
        </member>
        <member name="P:OMCS.Paint.Work.BackImageLocationInPage">
            <summary>
            每一页背景图片左上角的位置。
            </summary>
        </member>
        <member name="M:OMCS.Paint.Work.SubscribeViewEventInPage">
            <summary>
            SubscribeViewEventInPage 让每个Page预定其内部所有view实例的相关事件。该方法用于网络系统中，当客户端从服务器获取当前work实例后，
            需要调用Work.SubscribeViewEventInPage来将View与page联系起来。 -- 因为view的相关事件是NonSerialized。
            </summary>
        </member>
        <member name="M:OMCS.Paint.Work.SubscribePageEvent">
            <summary>
            SubscribePageEvent 当反序列化获得work实例后(从网络或本地文件)，需要调用此方法预定各个Page的相关事件，因为Page的相关事件是NonSerialized的。
            </summary>
        </member>
        <member name="T:OMCS.Paint.WorkSpaceDevice">
            <summary>
            WorkSpaceDevice 白板工作者设备。
            1. 激光笔，视频会议中主持人使用激光笔来指示位置。跟work没有关系，被ViewEditor控件使用。
            (1)显示并捕捉当前用户的激光笔位置（红色），并触发LaserPointerPositionChanged事件。
            (2)显示远程用户的激光笔的位置（蓝色）。
            2. 滚动条
            (1)当滚动时，触发WorkSpaceScrollPositionChanged事件。
            (2)当接收到远程滚动位置变化时，同步本地滚动条。
            </summary>
        </member>
        <member name="E:OMCS.Paint.WorkSpaceDevice.LaserPointerPositionChanged">
            <summary>
            本地激光笔的位置发生变化。
            </summary>
        </member>
        <member name="E:OMCS.Paint.WorkSpaceDevice.LaserPointerVisibleChanged">
            <summary>
            本地激光笔的可见性发生变化。
            </summary>
        </member>
        <member name="E:OMCS.Paint.WorkSpaceDevice.WorkSpaceScrollPositionChanged">
            <summary>
            当工作区的滚动条位置发生变化时，触发该事件。参数为AutoScrollPosition
            </summary>
        </member>
        <member name="P:OMCS.Paint.WorkSpaceDevice.SpringEventWhenScrollWorkSpace">
            <summary>
            当滚动工作区的滚动条时，是否触发WorkSpaceScrollPositionChanged事件。默认值：false。
            </summary>
        </member>
        <member name="P:OMCS.Paint.WorkSpaceDevice.LaserPointerVisible">
            <summary>
            是否绘制本地激光笔。
            </summary>
        </member>
        <member name="P:OMCS.Paint.WorkSpaceDevice.RemoteLaserPointerPosition">
            <summary>
            RemoteLaserPointerPosition 远程主持人当前的激光笔的位置。
            </summary>
        </member>
        <member name="M:OMCS.Paint.WorkSpaceDevice.ClearEvent">
            <summary>
            ClearEvent 清除PositionChanged和VisibleChanged事件的处理器。
            </summary>
        </member>
        <member name="T:OMCS.Paint.IPaintPanel">
            <summary>
            电子白板使用的Panel接口。
            </summary>
        </member>
        <member name="E:OMCS.Paint.IPaintPanel.Paint">
            <summary>
            当UI渲染时，触发此事件。参数：Graphics，或者 DrawingContext
            </summary>
        </member>
        <member name="E:OMCS.Paint.IPaintPanel.MouseMove2">
            <summary>
            鼠标移动时，触发此事件。参数：location - leftButtonDown
            </summary>
        </member>
        <member name="M:OMCS.Paint.IPaintPanel.PointToScreen(System.Drawing.Point)">
            <summary>
            将控件的相对坐标转换为屏幕坐标。
            </summary>        
        </member>
        <member name="M:OMCS.Paint.IPaintPanel.GetCursorPosition">
            <summary>
            获取当前光标相对于屏幕左上角的位置。
            </summary>        
        </member>
        <member name="M:OMCS.Paint.IPaintPanel.Refresh">
            <summary>
            刷新控件UI。
            </summary>
        </member>
        <member name="P:OMCS.Paint.PositionChangedContract.Closed">
            <summary>
            closed 如果为true，表示关闭了激光笔。
            </summary>
        </member>
        <member name="T:OMCS.Paint.WBOutter">
            <summary>
            WBOutter 用于将白板变化事件通过网络传递出去。
            在使用之前请先调用BindWBEventPublishers方法初始化。
            </summary>
        </member>
        <member name="M:OMCS.Paint.WBOutter.BindWork(OMCS.Paint.IWork)">
            <summary>
            将白板的事件与WBOutter提供的事件处理器关联起来。
            </summary>  
        </member>
        <member name="T:OMCS.Paint.Server.IWBWorkGetter">
            <summary>
            IWBWorkGetter 根据groupID获取对应的Work实例。
            </summary>
        </member>
        <member name="T:OMCS.Paint.Server.WBHandler">
            <summary>  
            (1)将对work的变更应用到服务器上的对应的Work实例中。
            (2)将对work的变更转发给组内的其它成员
            </summary>
        </member>
        <member name="T:OMCS.Paint.WBBroadcastTypes">
            <summary>
            电子白板协作时所有的P2P消息。
            </summary>
        </member>
        <member name="T:OMCS.Paint.CurveEditor">
            <summary>
            CurveEditor 自由曲线编辑器。
            zhuweisky 2010.03.23
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:OMCS.Paint.ElbowEditor" -->
        <!-- Badly formed XML comment ignored for member "T:OMCS.Paint.EllipseEditor" -->
        <member name="T:OMCS.Paint.IViewEditor">
            <summary>
            IViewEditor 用于接收鼠标的拖拽事件，以编辑即将新加入的View对象的编辑器的基础接口。
            zhuweisky 2010.03.21
            </summary>
        </member>
        <member name="M:OMCS.Paint.IViewEditor.OnPaint(OMCS.Passive.ISysRender)">
            <summary>
            当控件Paint事件时，调用该方法绘制当前正在编辑的对象。
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:OMCS.Paint.LineEditor" -->
        <member name="T:OMCS.Paint.OperationMockEditor">
            <summary>
            虚拟的View编辑器，主要用于单选或框选View对象、或移动、改变它们的大小。
            zhuweisky 2010.03.21
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:OMCS.Paint.RectangleEditor" -->
        <member name="T:OMCS.Paint.SquareEditor">
            <summary>
            正方形编辑器。
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:OMCS.Paint.TextEditor" -->
        <member name="T:OMCS.Paint.TriangleEditor">
            <summary>
            TriangleEditor 三角形编辑器。
            zhuweisky 2010.03.30
            </summary>
        </member>
        <member name="T:OMCS.Paint.ViewEditorContainer">
            <summary>
            ViewEditorContainer 用于管理所有的IViewEditor，并将其与Panel的事件关联起来。
            注意：拖放产生的事件顺序：MouseDown、MouseMove、MouseUp
            </summary>
        </member>
        <member name="M:OMCS.Paint.ViewEditorContainer.panel_Paint(OMCS.Passive.ISysRender)">
            <summary>
            当控件Paint事件时，调用该方法绘制当前正在编辑的对象。
            </summary>        
        </member>
        <member name="M:OMCS.Paint.ViewEditorContainer.CheckCursorPoisition">
            <summary>
            CheckCursorPoisition 查看鼠标是否落在View或热点上
            </summary>
        </member>
        <member name="T:OMCS.Paint.VirtualEditor">
            <summary>
            VirtualEditor 对应于ViewType.None，通常用于在执行其他Editor时，按下ESC取消后续操作时，这时将用VirtualEditor来模拟完成后续的鼠标事件。
            </summary>
        </member>
        <member name="T:OMCS.Paint.BaseRectangleView">
            <summary>
            BaseRectangleView 所有拥有矩形边框的View都可从此基类继承。
            </summary>
        </member>
        <member name="M:OMCS.Paint.BaseRectangleView.Rotate(OMCS.RotateAngle)">
            <summary>
            以矩形的中心点旋转。
            </summary>
            <param name="angle">旋转的角度</param>
        </member>
        <member name="M:OMCS.Paint.BaseRectangleView.ChangeLocation(System.Drawing.Point)">
            <summary>
            修改矩形左上角的位置。
            </summary>        
        </member>
        <member name="T:OMCS.Paint.BaseView">
            <summary>
            BaseView 所有视图元件的基类。
            注意，在视频会议系统中，必须保证BaseView的各个与事件是NonSerialized，从而在New View时，不会序列化这些事件的预订者。
            </summary>
        </member>
        <member name="P:OMCS.Paint.BaseView.CanvasBoundary">
            <summary>
            画布的边界。值为null时，表示没有边界。如果边界存在，则View只能在边界内移动。
            </summary>
        </member>
        <member name="P:OMCS.Paint.BaseView.CheckBoundary">
            <summary>
            是否检测边界。
            </summary>
        </member>
        <member name="P:OMCS.Paint.BaseView.AllowRotate">
            <summary>
            是否允许旋转。
            </summary>
        </member>
        <member name="T:OMCS.Paint.CoordinateTransformatter">
            <summary>
            CoordinateTransformatter 用于进行缩放、滚动条的坐标变换。
            将在ViewEditor的viewPanel1_Paint方法中设定ISysRender的绘制比例和变形偏移。
            </summary>
        </member>
        <member name="M:OMCS.Paint.CoordinateTransformatter.Translate(System.Drawing.Point)">
            <summary>
            Translate 将鼠标位置转换（Scroll和Scale）还原为实际位置。
            </summary>      
        </member>
        <member name="M:OMCS.Paint.CoordinateTransformatter.Translate(System.Drawing.Rectangle)">
            <summary>
            Translate 将鼠标绘制的矩形转换（Scroll和Scale）还原为实际的矩形。
            </summary>
        </member>
        <member name="M:OMCS.Paint.CoordinateTransformatter.AntiTranslate(System.Drawing.Point)">
            <summary>
            AntiTranslate 将实际位置变换（Scroll和Scale）为鼠标位置。
            </summary>  
        </member>
        <member name="M:OMCS.Paint.CoordinateTransformatter.AntiTranslate(System.Drawing.Rectangle)">
            <summary>
            AntiTranslate 将实际矩形变换（Scroll和Scale）为鼠标矩形。
            </summary>    
        </member>
        <member name="T:OMCS.Paint.IPage">
            <summary>
            IPage 用于管理当前页的所有IView对象。
            IPage的方法的所有位置参数都采用绝对的坐标（即采用与View对象所使用的坐标一致的表示）。
            </summary>
        </member>
        <member name="E:OMCS.Paint.IPage.ViewAddedByOther">
            <summary>
            当其它协作者向白板中添加一个View时，触发此事件。
            </summary>
        </member>
        <member name="M:OMCS.Paint.IPage.NewView(OMCS.Paint.IView)">
            <summary>
            如果view不再Page的Boundary之内，则view不会被添加到page中。
            </summary>       
        </member>
        <member name="M:OMCS.Paint.IPage.SubscribeAllViewsEvents">
            <summary>
            SubscribeAllViewsEvents 预定所有view实例的相关事件。该方法用于网络系统中，当客户端从服务器获取当前work实例后，
            需要调用Work.SubscribeViewEventInPage来将View与page联系起来。 -- 因为view的相关事件是NonSerialized。
            </summary>
        </member>
        <member name="M:OMCS.Paint.IPage.Draw(OMCS.Passive.ISysRender)">
            <summary>
            当控件Paint事件时，调用该方法绘制各视图对象。
            </summary>        
        </member>
        <member name="M:OMCS.Paint.IPage.GetBoundary">
            <summary>
            获取真实的边界。如果Boundary属性值不为null，则直接返回。否则，返回所有view的Bounds的并集。
            </summary>        
        </member>
        <member name="T:OMCS.Paint.IView">
            <summary>
            IView 所有可视化主体的基础接口。
            zhuweisky 2006.09.19
            </summary>
        </member>
        <member name="P:OMCS.Paint.IView.CheckBoundary">
            <summary>
            是否检测边界。
            </summary>
        </member>
        <member name="P:OMCS.Paint.IView.CanvasBoundary">
            <summary>
            画布的边界。值为null时，表示没有边界。如果边界存在，则View只能在边界内移动。
            </summary>
        </member>
        <member name="M:OMCS.Paint.IView.Contains(System.Drawing.Point)">
            <summary>
            Contains 判断目标点是否落在IViewObject的范围内
            </summary>      
        </member>
        <member name="M:OMCS.Paint.IView.OnClick(OMCS.Paint.IPaintPanel,OMCS.Paint.CoordinateTransformatter)">
            <summary>
            如果View在被Click的时候，有特别的行为，则可以实现该方法。
            </summary>        
        </member>
        <member name="P:OMCS.Paint.Page.ViewIDCreator">
            <summary>
            ViewIDCreator 当多人协作时，同步ViewID的生成。另外可以考虑使用ESBasic.ObjectManagement.Basic.BeforehandCreator来提前生成许多ViewID。
            </summary>
        </member>
        <member name="P:OMCS.Paint.Page.BackImage">
            <summary>
            背景图片【用于课件】。
            </summary>
        </member>
        <member name="P:OMCS.Paint.Page.BackImageLocation">
            <summary>
            背景图片左上角的位置。
            </summary>
        </member>
        <member name="P:OMCS.Paint.Page.Boundary">
            <summary>
            Page的边界。值为null时，表示没有边界。
            </summary>
        </member>
        <member name="P:OMCS.Paint.Page.NewViewSelected">
            <summary>
            是否选中新创建的view。默认值false。
            </summary>
        </member>
        <member name="M:OMCS.Paint.Page.SubscribeAllViewsEvents">
            <summary>
            SubscribeAllViewsEvents 预定所有view实例的相关事件。该方法用于网络系统中，当客户端从服务器获取当前work实例后，
            需要调用Work.SubscribeViewEventInPage来将View与page联系起来。 -- 因为view的相关事件是NonSerialized。
            </summary>
        </member>
        <member name="T:OMCS.Paint.PageEventBase">
            <summary>
            PageEventBase Page和Work公用的事件。 
            注意，在视频会议系统中，可以使BaseView的各个与事件是Serialized，即使我们在服务端会保存当前work的完整实例，因为page仅仅被work引用，而且服务器上的work的事件预订者都是null。
            </summary>
        </member>
        <member name="E:OMCS.Paint.PageEventBase.PageCleared">
            <summary>
            PageCleared page上的所有view被移除。参数为pageID。
            </summary>
        </member>
        <member name="F:OMCS.Paint.ViewType.None">
            <summary>
            None 针对鼠标事件，不进行任何动作。通常用于ESC取消其它ViewEditor的当前动作时。
            </summary>
        </member>
        <member name="F:OMCS.Paint.ViewType.Operation">
            <summary>
            虚拟的View编辑器，主要用于单选或框选View对象、或移动、改变它们的大小。        
            </summary>
        </member>
        <member name="T:OMCS.Paint.CurveView">
            <summary>
            CurveView 自由曲线。
            zhuweisky 2010.03.23
            </summary>
        </member>
        <member name="T:OMCS.Paint.ElbowView">
            <summary>
            ElbowView 表示肘形的View。
            zhuweisky 2010.03.30
            </summary>
        </member>
        <member name="T:OMCS.Paint.IResizeAction">
            <summary>
            用于封装一个Resize动作。
            </summary>
        </member>
        <member name="T:OMCS.Paint.RectHotPointCache">
            <summary>
            RectHotPointCache 用于缓存一个矩形上的8个热点对象。
            zhuweisky 2010.03.22
            </summary>
        </member>
        <member name="M:OMCS.Paint.RectHotPointCache.GetCursor(OMCS.Paint.RectHotPointPosition)">
            <summary>
            GetCursor 根据热点所处于Rectangle的位置，获取表示修改Rectangle尺寸的正确光标。
            </summary>       
        </member>
        <member name="T:OMCS.Paint.RectHotPointPosition">
            <summary>
            RectHotPointPosition 一个矩形上8个热点位置。
            zhuweisky 2010.03.22
            </summary>
        </member>
        <member name="T:OMCS.Paint.RectResizeAction">
            <summary>
            RectResizeAction 表示即将执行某个BaseRectangleView对象的Resize动作的相关信息。
            zhuweisky 2010.03.22
            </summary>   
        </member>
        <member name="T:OMCS.Paint.SinglePointResizeAction">
            <summary>
            SinglePointResizeAction 用于类似线段、三角形等通过移动单个定点来改变形状的动作。
            zhuweisky 2010.03.30
            </summary>
        </member>
        <member name="M:OMCS.Paint.LineView.Contains(System.Drawing.Point)">
            <summary>
            目标点是否在线段上 (y2-y1)(x-x1) = (y-y1)(x2-x1)
            </summary>		
        </member>
        <member name="T:OMCS.Paint.TriangleView">
            <summary>
            TriangleView 表示三角形的View。
            zhuweisky 2010.03.30
            </summary>
        </member>
        <member name="T:OMCS.Server.IUserVerifier">
            <summary>
            用户验证器接口。用于验证登录用户的帐号密码。
            </summary>
        </member>
        <member name="T:OMCS.Server.DefaultUserVerifier">
            <summary>
            默认全部通过验证。
            </summary>
        </member>
        <member name="T:OMCS.Server.PlatformCallbackHandler">
            <summary>
            用于跨服。
            </summary>
        </member>
        <member name="T:OMCS.Server.ExDeviceInput.CaptureDeviceManager">
            <summary>
            扩展接入的采集设备管理器。采集设备（如监控摄像头）只会作为Owner端存在。
            扩展接入的采集设备并不是以标准的OMCS客户端登录的，走的是类似GB28181的协议。
            </summary>
        </member>
        <member name="M:OMCS.Server.ExDeviceInput.CaptureDeviceManager.RemoveGuest(System.String,System.String,System.Nullable{OMCS.MultimediaDeviceType})">
            <summary>
            移除某个Guest。
            </summary>
            <param name="guestID"></param>
            <param name="deviceID">如果为null，表示guest掉线，需要从所有MockClient中移除该Guest</param>
            <param name="type">如果为null，表示Camera和Mic都要移除</param>
        </member>
        <member name="T:OMCS.Server.ExDeviceInput.ICaptureDeviceGateway">
            <summary>
            用于接入的采集设备和终端（如监控摄像头等）
            </summary>
        </member>
        <member name="E:OMCS.Server.ExDeviceInput.ICaptureDeviceGateway.DeviceLogin">
            <summary>
            当采集设备注册上线时，触发此事件。参数：deviceID - deviceParas
            </summary>
        </member>
        <member name="E:OMCS.Server.ExDeviceInput.ICaptureDeviceGateway.DeviceLogout">
            <summary>
            当采集设备下线时，触发此事件。参数：deviceID 
            </summary>
        </member>
        <member name="E:OMCS.Server.ExDeviceInput.ICaptureDeviceGateway.CameraDataReceived">
            <summary>
            当收到某个采集设备的一帧摄像头数据时，触发此事件。参数：deviceID - frameIndex - video size -  video data
            </summary>
        </member>
        <member name="E:OMCS.Server.ExDeviceInput.ICaptureDeviceGateway.MicDataReceived">
            <summary>
            当收到某个采集设备的一帧或多帧麦克风数据时，触发此事件。参数：deviceID - audio data list
            </summary>
        </member>
        <member name="M:OMCS.Server.ExDeviceInput.ICaptureDeviceGateway.RequestStartCamera(System.String)">
            <summary>
            请求目标采集设备开始采集摄像头。
            </summary>       
        </member>
        <member name="M:OMCS.Server.ExDeviceInput.ICaptureDeviceGateway.RequestStopCamera(System.String)">
            <summary>
            请求目标采集设备停止采集摄像头。
            </summary>      
        </member>
        <member name="M:OMCS.Server.ExDeviceInput.ICaptureDeviceGateway.RequestStartMic(System.String)">
            <summary>
            请求目标采集设备开始采集麦克风。
            </summary>      
        </member>
        <member name="M:OMCS.Server.ExDeviceInput.ICaptureDeviceGateway.RequestStopMic(System.String)">
            <summary>
            请求目标采集设备停止采集麦克风。
            </summary>
        </member>
        <member name="M:OMCS.Server.ExDeviceInput.ICaptureDeviceGateway.Invite(System.String)">
            <summary>
            主动邀请终端。
            </summary>       
        </member>
        <member name="T:OMCS.Server.IGuestFilter">
            <summary>
            Guest过滤器。
            当服务器转发某个Owner的语音视频数据给其对应的Guest时，可以在服务端控制只转发给其中的部分Guest。
            </summary>
        </member>
        <member name="M:OMCS.Server.IGuestFilter.Filter4Broadcast(OMCS.MultimediaDeviceType,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            当拥有多个guest而广播数据时，过滤Guest。
            </summary>
            <param name="type">要转发的数据类型</param>
            <param name="ownerID">数据的Owner的UserID</param>
            <param name="guestList">原始的接收数据的Guest列表</param>
            <returns>过滤后的Guest列表</returns>
        </member>
        <member name="M:OMCS.Server.IGuestFilter.Filter(OMCS.MultimediaDeviceType,System.String,System.String)">
            <summary>
            当只有一个guest而发送数据时，过滤Guest。
            </summary>
            <param name="type">要转发的数据类型</param>
            <param name="ownerID">数据的Owner的UserID</param>
            <param name="guestID">接收数据的Guest</param>
            <returns>返回true表示放行，false表示阻止</returns>
        </member>
        <member name="T:OMCS.Server.IMultimediaServer">
            <summary>
            OMCS多媒体服务器。
            </summary> 
        </member>
        <member name="M:OMCS.Server.IMultimediaServer.Close">
            <summary>
            关闭OMCS多媒体服务器。
            </summary>
        </member>
        <member name="M:OMCS.Server.IMultimediaServer.GetOnlineUserList">
            <summary>
            获取在线用户的ID列表。
            </summary>     
        </member>
        <member name="M:OMCS.Server.IMultimediaServer.IsUserOnLine(System.String)">
            <summary>
            目标用户是否在线。
            </summary>   
        </member>
        <member name="P:OMCS.Server.IMultimediaServer.Port">
            <summary>
            当前服务器所监听的端口。
            </summary>
        </member>
        <member name="P:OMCS.Server.IMultimediaServer.UserCount">
            <summary>
            当前在线用户的数量。
            </summary>
        </member>
        <member name="P:OMCS.Server.IMultimediaServer.GuestFilter">
            <summary>
            Guest过滤器。
            当服务器转发某个Owner的语音视频数据给其对应的Guest时，可以在服务端控制只转发给其中的部分Guest。
            </summary>
        </member>
        <member name="P:OMCS.Server.IMultimediaServer.Advanced">
            <summary>
            OMCS高级控制选项。
            </summary>
        </member>
        <member name="P:OMCS.Server.IMultimediaServer.CoursewaresRootPath">
            <summary>
            用于存放用户上传的白板课件的根目录。默认值为运行目录下的"Coursewares"文件夹。
            </summary>
        </member>
        <member name="E:OMCS.Server.IMultimediaServer.UserConnected">
            <summary>
            客户端连接到服务器时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Server.IMultimediaServer.UserDisconnected">
            <summary>
            客户端连接断开时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Server.IMultimediaServer.AudioMessagePostFailed">
            <summary>
            当语音消息的接收者不在线时，将触发此事件。参数：语音消息接收者ID - 语音消息发送者ID - AudioMessage。
            注：实现群内语音消息时，可将 语音消息接收者ID 设为null，AudioMessage.Tag设置为群ID。
            </summary>
        </member>
        <member name="E:OMCS.Server.IMultimediaServer.SomeoneJoinChatGroup">
            <summary>
            当某人加入聊天组时，触发此事件。参数：ChatType - UserID - GroupID
            </summary>
        </member>
        <member name="E:OMCS.Server.IMultimediaServer.SomeoneQuitChatGroup">
            <summary>
            当某人离开聊天组时，触发此事件。参数：ChatType - UserID - GroupID
            </summary>
        </member>
        <member name="E:OMCS.Server.IMultimediaServer.FrameDiscarded">
            <summary>
            当在服务端丢帧的时候，触发此事件。参数：MultimediaDeviceType - ownerID - guestID
            </summary>
        </member>
        <member name="E:OMCS.Server.IMultimediaServer.CustomizedMessageReceived">
            <summary>
            当收到来自客户端的自定义消息时，触发此事件。参数：string srcUserID, int msgType, byte[] msg, string tag。       
            </summary>
        </member>
        <member name="M:OMCS.Server.IMultimediaServer.SendCustomizedMessage(System.String,System.Int32,System.Byte[],System.String)">
            <summary>
            向在线用户发送自定义消息。
            </summary>          
        </member>
        <member name="M:OMCS.Server.IMultimediaServer.SendAudioMessage(System.String,OMCS.Passive.ShortMessages.AudioMessage)">
            <summary>
            发送语音消息给目标用户。
            </summary>       
            <param name="destUserID">语音消息的接收者ID</param>
            <param name="msg">语音消息</param>
        </member>
        <member name="M:OMCS.Server.IMultimediaServer.RefreshCoursewares(System.String)">
            <summary>
            刷新指定白板的课件列表（将从目标白板对应的课件文件夹重新加载课件列表，并通知该白板的guest）。
            </summary>
            <param name="whiteBoardID">目标白板的ID</param>
        </member>
        <member name="M:OMCS.Server.IMultimediaServer.GetMultiChatMembers(OMCS.Contracts.ChatType,System.String)">
            <summary>
            获取多人语音/视频组的成员。注意：返回的集合不可被修改。
            </summary>        
        </member>
        <member name="T:OMCS.Server.MultimediaServer">
            <summary>
            OMCS多媒体服务器。
            </summary>
        </member>
        <member name="P:OMCS.Server.MultimediaServer.Port">
            <summary>
            当前服务器所监听的端口。
            </summary>
        </member>
        <member name="P:OMCS.Server.MultimediaServer.UserCount">
            <summary>
            当前在线用户的数量。
            </summary>
        </member>
        <member name="M:OMCS.Server.MultimediaServer.IsUserOnLine(System.String)">
            <summary>
            目标用户是否在线。
            </summary>       
        </member>
        <member name="M:OMCS.Server.MultimediaServer.GetOnlineUserList">
            <summary>
            获取在线用户的ID列表。
            </summary>        
        </member>
        <member name="E:OMCS.Server.MultimediaServer.UserDisconnected">
            <summary>
            客户端连接断开时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Server.MultimediaServer.UserConnected">
            <summary>
            客户端连接到服务器时，将触发此事件。
            </summary>
        </member>
        <member name="M:OMCS.Server.MultimediaServer.Close">
            <summary>
            关闭OMCS多媒体服务器。
            </summary>
        </member>
        <member name="T:OMCS.Server.MultimediaServerFactory">
            <summary>
            OMCS多媒体服务器工厂，用于创建多媒体服务器实例。
            </summary>
        </member>
        <member name="M:OMCS.Server.MultimediaServerFactory.CreateMultimediaServer(System.Int32,OMCS.Server.IUserVerifier,OMCS.Server.WssOption,System.Boolean,ESBasic.Loggers.IAgileLogger)">
            <summary>
            创建多媒体服务器实例。
            </summary>
            <param name="port">监听的端口。</param>
            <param name="userVerifier">用户帐密验证器。</param>       
            <param name="securityLogEnabled">是否记录详细的安全日志，一般在debug时使用</param>
            <param name="logger">日志记录器</param>
        </member>
        <member name="M:OMCS.Server.MultimediaServerFactory.CreateMultimediaServer(System.Int32,OMCS.Server.IUserVerifier,System.Boolean,ESBasic.Loggers.IAgileLogger)">
            <summary>
            创建多媒体服务器实例。
            </summary>
            <param name="port">监听的端口。</param>
            <param name="userVerifier">用户帐密验证器。</param>       
            <param name="securityLogEnabled">是否记录详细的安全日志，一般在debug时使用</param>
            <param name="logger">日志记录器</param>
        </member>
        <member name="M:OMCS.Server.MultimediaServerFactory.CreateMultimediaServer(System.String,System.Int32,System.String,System.Int32,OMCS.Server.IUserVerifier,OMCS.Server.WssOption,System.Boolean,ESBasic.Loggers.IAgileLogger)">
            <summary>
            创建OMCS群集系统中的多媒体服务器节点实例。
            </summary>       
            <param name="acmsIP">群集管理服务器的IP</param>
            <param name="acmsPort">群集管理服务器的端口</param>
            <param name="currentServerID">当前服务器节点的ID</param>
            <param name="currentServerPort">当前OMCS节点服务器监听的端口。</param>
            <param name="userVerifier">用户帐密验证器。</param>       
            <param name="securityLogEnabled">是否记录详细的安全日志，一般在debug时使用</param>
            <param name="logger">日志记录器</param>
        </member>
        <member name="M:OMCS.Server.MultimediaServerFactory.CreateOmcsPlatformServer(System.Int32)">
            <summary>
            创建群集平台服务器。
            </summary>
            <param name="platformServerPort">平台服务器端口</param>       
        </member>
        <member name="P:OMCS.Server.ServerAdvancedOptions.UnCompletedCount4DiscardVideoFrame">
            <summary>
            当某通道上等待发送的视频帧个数大于该值时，丢弃接下来要在该通道上发送的视频帧。默认值：30
            </summary>
        </member>
        <member name="P:OMCS.Server.ServerAdvancedOptions.UnCompletedCount4DiscardAudioFrame">
            <summary>
            当某通道上等待发送的音频帧个数大于该值时，丢弃接下来要在该通道上发送的音频帧。默认值：10
            </summary>
        </member>
        <member name="P:OMCS.Server.ServerAdvancedOptions.UnCompletedCount4DiscardDesktopFrame">
            <summary>
            当某通道上等待发送的桌面帧个数大于该值时，丢弃接下来要在该通道上发送的桌面帧。默认值：30
            </summary>
        </member>
        <member name="F:OMCS.Server.ServerAdvancedOptions.DiscardFrameRecoverEnabled">
            <summary>
            是否开启丢帧恢复？默认值：true。
            注：当某个下行通道（比如到GuestA的通道）堵塞时，会丢弃接下来要在该通道上发送的视频帧。当丢帧发生后，是否需要通知Owner端强制输出I帧，以减少GuestA观看视频卡住的时间。
            </summary>
        </member>
        <member name="P:OMCS.Server.ServerAdvancedOptions.SocketSendBuffSize">
            <summary>
            发送缓冲区的大小。默认值：64K。
            </summary>
        </member>
        <member name="P:OMCS.Server.ServerAdvancedOptions.SocketReceiveBuffSize">
            <summary>
            接收缓冲区的大小。默认值：64K。
            </summary>
        </member>
        <member name="P:OMCS.Server.ServerAdvancedOptions.HeartbeatTimeoutInSecs">
            <summary>
            心跳超时间隔（秒）。即服务端多久没有收到客户端的心跳消息，则视客户端为超时掉线。默认值为30秒。（如果要set该属性，则必须在调用MultimediaServerFactory.CreateMultimediaServer方法之前设置才有效。）
            </summary>
        </member>
        <member name="T:OMCS.Server.WBWorkManager">
            <summary>
            白板Work管理器，课件管理器。
            课件列表由服务端主动管理。发生变化时，服务端主动通知对应的客户端。
            </summary>
        </member>
        <member name="M:OMCS.Server.WBWorkManager.UpdateCoursewares(System.String)">
            <summary>
            当第一次新建白板的Work时，或者用户上传课件完成时，调用此方法刷新课件列表并通知白板用户。
            </summary>        
        </member>
        <member name="T:OMCS.ClusterPlatform.IOmcsPlatformServer">
            <summary>
            OMCS群集平台服务器。
            </summary>
        </member>
        <member name="E:OMCS.ClusterPlatform.IOmcsPlatformServer.ServerRegistered">
            <summary>
            群集中有新的服务器注册进来。
            </summary>
        </member>
        <member name="E:OMCS.ClusterPlatform.IOmcsPlatformServer.ServerUnregistered">
            <summary>
            群集中的某服务已被注销。参数：服务器ID
            </summary>
        </member>
        <member name="E:OMCS.ClusterPlatform.IOmcsPlatformServer.MessageTransfered">
            <summary>
            当在AS之间转发消息时，触发该事件。参数：SourceUserID - DestUserID - MessageLength
            </summary>        
        </member>
        <member name="M:OMCS.ClusterPlatform.IOmcsPlatformServer.IsServerOnline(System.String)">
            <summary>
            目标服务器是否正在线？
            </summary>
            <param name="serverID">目标服务器的ServerID</param>
            <returns>在线？</returns>
        </member>
        <member name="M:OMCS.ClusterPlatform.IOmcsPlatformServer.GetOnlineUserCount">
            <summary>
            获取总的在线用户数。
            </summary>        
        </member>
        <member name="M:OMCS.ClusterPlatform.IOmcsPlatformServer.GetServer(System.String)">
            <summary>
            获取目标服务器的信息。
            </summary>       
        </member>
        <member name="M:OMCS.ClusterPlatform.IOmcsPlatformServer.GetAllServers">
            <summary>
            获取群集中在线的所有服务器。
            </summary>
        </member>
        <member name="M:OMCS.ClusterPlatform.IOmcsPlatformServer.Close">
            <summary>
            关闭OMCS群集平台服务器。
            </summary>
        </member>
        <member name="M:OMCS.Service4Web.ConnectorManager.Reset">
            <summary>
            插件与JS的Websocket断开
            </summary>
        </member>
        <member name="M:OMCS.Service4Web.ConnectorManager.Reset2">
            <summary>
            与OMCS服务器断开连接
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.LogonOMCSContract">
            <summary>
            登录OMCS协议
            </summary>
        </member>
        <member name="P:OMCS.Service4Web.LogonOMCSContract.AutoAdjustCameraOutputSize">
            <summary>
            自动调节摄像头的输出尺寸
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.BaseResult.ResultCode">
            <summary>
            返回结果码  0：成功，其余：失败（原因见Cause值）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.BaseResult.FailCause">
            <summary>
            失败原因
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.BaseResult.OwnerID">
            <summary>
            设备主人
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.CustomMessageContract">
            <summary>
            自定义消息协议
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.MultimediaConnectStateEventContract">
            <summary>
            多媒体连接断开事件通知
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.ConnectorDisconnectEventContract">
            <summary>
            连接器断开事件通知
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.ConnectorAutoReconnectStartContract">
            <summary>
            连接器重连开始事件通知
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.ConnectorAutoReconnectFailedContract">
            <summary>
            连接器重连失败通知
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.ConnectorAutoReconnectSucceedContract">
            <summary>
            连接器重连成功事件通知
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.DeviceListContract">
            <summary>
            本地设备列表
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.CameraSupportSizeContract">
            <summary>
            摄像头支持的分辨率协议
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.DeviceIsWorkingContract">
            <summary>
            设置是否正在使用
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.SizeChangedContract">
            <summary>
            摄像头连接器对方采集分辨率变化
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.OwnerOutputChangedContract">
            <summary>
            连接器对方输出视频变化
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.WindowSizeChangedContract">
            <summary>
            显示对方图像控件大小变动
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.VideoJustListenContract">
            <summary>
            视频是否启用仅监听模式。如果为true，表示只接收数据，而不解码和绘制图像。
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.RequestIFrameContract">
            <summary>
            请求重置I帧
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.NewFrameReceivedContract">
            <summary>
            收到新视频帧 通知
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.MuteMicrophoneContract">
            <summary>
            静音
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.SendKeyOperationContract">
            <summary>
            发送桌面按键指令
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.SendMouseOperationContract">
            <summary>
            发送桌面鼠标指令
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.SendMouseMoveContract">
            <summary>
            发送鼠标移动
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.ChatGroupContract">
            <summary>
            加入群聊成功后，返回结果
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.MoveViewsContract">
            <summary>
            移动Views
            </summary>
        </member>
        <member name="P:OMCS.Service4Web.ResizeSinglePointViewContract.SinglePointIndex">
            <summary>
            point 的索引
            </summary>
        </member>
        <member name="P:OMCS.Service4Web.ResizeRectPointViewContract.PointPosition">
            <summary>
            一个矩形上热点位置
            </summary>
        </member>
        <member name="P:OMCS.Service4Web.WhiteBoardViewChangedPassiveContract.ViewIDs">
            <summary>
            有变化的view
            </summary>
        </member>
        <member name="P:OMCS.Service4Web.WhiteBoardViewRemovedPassiveContract.ViewID">
            <summary>
            被移除的viewID
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.BaseCoursewareContract">
            <summary>
            课件被打开
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.CoursewareManager.coursewareImageManager">
            <summary>
            课件图片管理器，支持延迟加载。coursewareImageManager为null，表示没有使用课件。
            </summary>
        </member>
        <member name="P:OMCS.Service4Web.CoursewareManager.IsManager">
            <summary>
            是否为管理员身份。管理员的特殊权限：翻页、上传课件。
            </summary>
        </member>
        <member name="P:OMCS.Service4Web.CoursewareManager.CoursewareUsed">
            <summary>
            是否正在使用课件。
            </summary>
        </member>
        <member name="P:OMCS.Service4Web.CoursewareManager.AutoAdaptiveCoursewareImageSize">
            <summary>
            加载课件时，是否将白板边界自动设定为课件图的大小。
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.CoursewareImageManager">
            <summary>
            课件图片管理器，支持LazyLoad
            </summary>
        </member>
        <member name="T:OMCS.Service4Web.CoursewareProcessState">
            <summary>
            当前加载课件的进度。
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.CoursewareProcessState.Damaged">
            <summary>
            损坏
            </summary>
        </member>
        <member name="P:OMCS.Service4Web.CustomizeHandler.Window4DesktopCapture">
            <summary>
            在linux上采集屏幕，需要绑定一个Window实例。
            </summary>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.SetCameraParameters(System.String)">
            <summary>
            设置摄像头连接器参数
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.SetDesktopParameters(System.String)">
            <summary>
            设置桌面连接器参数
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.AddView(System.String,OMCS.Paint.IView)">
            <summary>
            向当前页添加新的View
            </summary>
            <param name="destID"></param>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.RemoveView(System.String,System.String)">
            <summary>
            从当前页移除指定ID的View
            </summary>
            <param name="destID"></param>
            <param name="viewID"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.RemoveMyLastView(System.String)">
            <summary>
            移除当前页最后一笔
            </summary>
            <param name="destID"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.SelectAll(System.String)">
            <summary>
            全选
            </summary>
            <param name="destID"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.SelectNone(System.String)">
            <summary>
            全不选
            </summary>
            <param name="destID"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.SetSelectedViews(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            设置已选Views
            </summary>
            <param name="destID"></param>
            <param name="viewIDs"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.RemoveSelectedViews(System.String)">
            <summary>
            移除所有被选中的Views
            </summary>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.MoveSlectedViews(System.String,System.Int32,System.Int32)">
            <summary>
            移动所有被选中的Views
            </summary>
            <param name="deltX">x坐标偏移值</param>
            <param name="deltY">y坐标偏移值</param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.TopMostView(System.String,System.String)">
            <summary>
            置顶View
            </summary>
            <param name="destID"></param>
            <param name="viewID"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.BottomMostView(System.String,System.String)">
            <summary>
            置底View
            </summary>
            <param name="destID"></param>
            <param name="viewID"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.ClearPage(System.String)">
            <summary>
            清理当前页（移除所有View）
            </summary>
            <param name="destID"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.ResizeView(System.String,System.String,System.Int32,System.Drawing.Point)">
            <summary>
            缩放View
            </summary>
            <param name="destID"></param>
            <param name="viewID"></param>
            <param name="_singlePointIndex">point 的索引</param>
            <param name="endPt">结束位置</param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.ResizeView(System.String,System.String,OMCS.Paint.RectHotPointPosition,System.Drawing.Point)">
            <summary>
            缩放矩形
            </summary>
            <param name="destID"></param>
            <param name="viewID"></param>
            <param name="pointPosition">矩形的位置</param>
            <param name="endPt">结束位置</param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.RotateView(System.String,System.String,OMCS.RotateAngle)">
            <summary>
            选择试图
            </summary>
            <param name="destID"></param>
            <param name="viewID"></param>
            <param name="angle"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.SetPictureViewAsBackImage(System.String,System.String)">
            <summary>
            将PictureView设为背景图
            </summary>
            <param name="destID"></param>
            <param name="viewID">PictureViewID</param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.RemoveWhiteBoardBackImage(System.String)">
            <summary>
            移除背景图
            </summary>
            <param name="destID"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.SavePictureViewToLocal(System.String,System.String)">
            <summary>
            图片另存为
            </summary>
            <param name="destID"></param>
            <param name="viewID">PictureView 的ID</param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.SaveWhiteBoardImageToLocal(System.String)">
            <summary>
            保存当前白板页到本地
            </summary>
            <param name="destID"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.SendSaveImageResultToClient(System.String)">
            <summary>
            发送文件保存的结果给web
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.SaveImage(CPF.Drawing.Bitmap)">
            <summary>
            保存到本地
            </summary>
            <param name="bitmap"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.GetAllCourseware(System.String)">
            <summary>
            获取所有课件
            </summary>
            <param name="destID"></param>
            <returns></returns>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.UploadCourseware(System.String,System.String)">
            <summary>
            上传课件
            </summary>
            <param name="destID"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.DownloadCourseware(System.String,System.String)">
            <summary>
            重新下载指定名称课件
            </summary>
            <param name="destID"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.DeleteCourseware(System.String,System.String)">
            <summary>
            删除指定名称的课件
            </summary>
            <param name="destID"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:OMCS.Service4Web.CustomizeHandler.OpenCourseware(System.String,System.String)">
            <summary>
            打开课件
            </summary>
            <param name="destID"></param>
            <param name="fileName"></param>
        </member>
        <member name="T:OMCS.Service4Web.IOmcsService4Web">
            <summary>
            OMCS视频服务Web插件接口。
            </summary>
        </member>
        <member name="P:OMCS.Service4Web.IOmcsService4Web.CallBeforeLogin">
            <summary>
            注入自定义回调，Web插件将在每次登录OMCS服务器之前（即调用IMultimediaManager的Initialize方法之前）调用此回调。
            作用：通过注入此回调，使用者可以在登录之前对IMultimediaManager进行更多的设置。
            </summary>
        </member>
        <member name="P:OMCS.Service4Web.IOmcsService4Web.Logger">
            <summary>
            插件内部的日志记录器。
            </summary>
        </member>
        <member name="P:OMCS.Service4Web.IOmcsService4Web.Window4DesktopCapture">
            <summary>
            在linux上采集屏幕，需要绑定一个Window实例。
            </summary>
        </member>
        <member name="M:OMCS.Service4Web.IOmcsService4Web.Initialize(System.Int32)">
            <summary>
            初始化OMCS视频服务Web插件。如果初始化失败，将会抛出对应的异常。
            </summary>
            <param name="port">插件所使用的TCP端口</param>
        </member>
        <member name="M:OMCS.Service4Web.IOmcsService4Web.Initialize">
            <summary>
            初始化OMCS视频服务Web插件，默认使用端口9910。如果初始化失败，将会抛出对应的异常。
            </summary>
        </member>
        <member name="E:OMCS.Service4Web.IOmcsService4Web.VideoFrameDiscarded">
            <summary>
            当丢弃一帧给web的图像（摄像头、视频）时，触发此事件。参数：DestID - type 
            </summary>
        </member>
        <member name="M:OMCS.Service4Web.IOmcsService4Web.SendMessageToJs(System.Int32,System.String)">
            <summary>
            通过WebSocket通道发送消息给JS。消息类型msgType >= 1000
            </summary>       
        </member>
        <member name="E:OMCS.Service4Web.IOmcsService4Web.JsMessageReceived">
            <summary>
            当通过WebSocket通道收到来自JS的消息时，触发此事件。消息类型msgType >= 1000
            </summary>      
        </member>
        <member name="E:OMCS.Service4Web.IOmcsService4Web.LoginOmcsServer">
            <summary>
            当成功登录到OMCS服务器时，触发此事件。参数:登录账号 userID 
            </summary>
        </member>
        <member name="E:OMCS.Service4Web.IOmcsService4Web.LogoutOmcsServer">
            <summary>
            当从OMCS服务退出时，触发此事件。参数:账号 userID 
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.OmcsService4Web.window4DesktopCapture">
            <summary>
            在linux上采集屏幕，需要绑定一个Window实例。
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.CommonOptions.WellSeparatorStr">
            <summary>
            $号分隔符
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.LoginOmcs">
            <summary>
            登录OMCS （C->S）参数：LogonOMCSContract
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.LoginOmcsResult">
            <summary>
            返回登录OMCS结果 （S->C） 参数：BaseResult
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.LogoutOmcs">
            <summary>
            退出OMCS （C->S）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SetMultimediaManagerParameters">
            <summary>
            设置多媒体管理器参数
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.MultimediaDeviceDisconnectEvent">
            <summary>
            当某一个guest连接到的当前设备断开时触发，事件通知 （S->C）  参数：MultimediaConnectStateEventContract
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.MultimediaDeviceConnectedEvent">
            <summary>
            当某一个guest连接到当前设备时触发，事件通知 （S->C）  参数：MultimediaConnectStateEventContract
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.MultimediaManagerConnectionInterruptedEvent">
            <summary>
            多媒体断开与服务器的连接 事件通知 （S->C）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.MultimediaManagerConnectionRebuildSucceedEvent">
            <summary>
            多媒体重连成功事件通知 （S->C）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.MultimediaManagerAudioCaptured">
            <summary>
            刚刚从麦克风或自定义声音采集器采集的音频帧（20ms的PCM数据） （S->C）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SendCustomMessage">
            <summary>
            发送自定义消息
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.CustomMessageReceived">
            <summary>
            收到自定义消息
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.DeviceIsWorking">
            <summary>
            查询本地的某设备是否正在工作？ 参数：MultimediaDeviceType枚举值 （C->S）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.DisconnectGuest">
            <summary>
            主动断开所有来访者到本地多媒体设备的连接。 参数： 是否通知对方。如果通知对方，对方的连接器将触发Disconnected事件。 （C->S）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.DisconnectGuest2">
            <summary>
            主动断开所有来访者到本地多媒体设备的连接。 参数：guestID:来访者的用户ID ；deviceType：设备类型 ；notifyGuest：是否通知对方。如果通知对方，对方的连接器将触发Disconnected事件。（C->S）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.GetGuests">
            <summary>
            获取所有连接到当前多媒体设备的Guest列表。（C->S）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.IsUserOnline">
            <summary>
            用户是否在线 （C->S）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ConnectMicrophone">
            <summary>
            连接麦克风（C->S）参数：destID
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ConnectMicrophoneResult">
            <summary>
            返回连接麦克风结果 （S->C） 参数：BaseResult
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.DisconnectMicrophone">
            <summary>
            断开麦克风（C->S） 参数：destID
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.MuteMicrophone">
            <summary>
            静音麦克风 （C->S） 参数：destID
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.MicrophonOwnerOutputChanged">
            <summary>
            主人输出麦克风音频状态变化 （S->C）参数：OwnerOutputChangedContract
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.MicrophonConnectorDisconnectEvent">
            <summary>
            麦克风连接器断开 （S->C）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SetMicrophoneParameters">
            <summary>
            设置麦克风参数 （C->S）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.MaxVoiceSpeakerNotified">
            <summary>
            最大声音说话者的通知
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SpeakerVoiceNotified">
            <summary>
             说话者分贝通知 如果连接到了一个或多个人的麦克风，此事件用于定时通知每个发言人的声音分贝值(每秒钟触发5次)。如果事件参数1ist中不包含某个人的rp，表示该人的分贝值为01/注:只有当Advanced.AudioMixedstrategy的值不是AudioMixedBtrategy.All时，才会触发此事件。
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ConnectCamera">
            <summary>
            连接摄像头（C->S） 参数：destID
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ConnectCameraResult">
            <summary>
            返回连接摄像头结果 （S->C） 参数：BaseResult
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.DisconnectCamera">
            <summary>
            断开摄像头（C->S）参数：destID
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.NewVideoFrameReceived">
            <summary>
            收到新的摄像头帧 （C->S）参数：Bitmap 转 base64
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SetCameraParameters">
            <summary>
            设置摄像头参数 （C->S）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.CameraVideoSizeChanged">
            <summary>
            采集摄像头尺寸变化 （S->C） 参数：Size
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.CameraOwnerOutputChanged">
            <summary>
            主人输出视频状态变化 （S->C）参数：OwnerOutputChangedContract
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.CameraConnectorDisconnectEvent">
            <summary>
            摄像头连接器断开
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.WindowSizeChanged">
            <summary>
            显示对方图像控件大小变动
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.RequestIFrame">
            <summary>
            请求重置I帧
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ConnectDesktop">
            <summary>
            连接桌面（C->S） 参数：destID
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ConnectDesktopResult">
            <summary>
            返回连接桌面结果 （S->C） 参数：BaseResult
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.DisconnectDesktop">
            <summary>
            断开桌面（C->S）参数：destID
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.NewDesktopFrameReceived">
            <summary>
            收到新的桌面帧 （C->S）参数：Bitmap 转 base64
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SetDesktopParameters">
            <summary>
            设置桌面参数 （C->S）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.DesktopVideoSizeChanged">
            <summary>
            采集桌面尺寸变化 （S->C） 参数：Size
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.DesktopOwnerOutputChanged">
            <summary>
            主人输出桌面状态变化 （S->C）参数：OwnerOutputChangedContract
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.DesktopConnectorDisconnectEvent">
            <summary>
            桌面连接器断开
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SendMouseMove">
            <summary>
            鼠标移动
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SendKeyOperation">
            <summary>
            发送按键操作
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SendMouseOperation">
            <summary>
            发送鼠标操作
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ConnectWhiteBoardConnector">
            <summary>
            连接电子白板（C->S） 参数：destID
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ConnectWhiteBoardConnectorResult">
            <summary>
            返回连接电子白板结果 （S->C） 参数：BaseResult
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.DisconnectWhiteBoardConnector">
            <summary>
            断开电子白板（C->S）参数：destID
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.NewWhiteBoardConnectorFrame">
            <summary>
            收到新的电子白板帧 （C->S）参数：Bitmap 转 base64
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.WhiteBoardConnectorDisconnectEvent">
            <summary>
            电子白板连接器断开
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.WhiteBoardVideoSizeChanged">
            <summary>
            电子白板尺寸变化 （S->C） 参数：Size
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SetWhiteBoardParameters">
            <summary>
            设置麦克风参数 （C->S）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ConnectWhiteBoard">
            <summary>
            连接白板 （仅供调试时使用）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.DisConnectWhiteBoard">
            <summary>
            断开白板连接 （仅供调试时使用）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.GetWhiteBoardCurrentPage">
            <summary>
            获取白板当前页
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.AddWhiteBoardView">
            <summary>
            向白板当前页添加view
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.RemoveWhiteBoardView">
            <summary>
            从白板当前页移除指定id的view
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.RemoveMyLastWhiteBoardView">
            <summary>
            从白板移除当前页最后一笔
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SelectAllWhiteBoardView">
            <summary>
            全选View
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SelectNoneWhiteBoardView">
            <summary>
            全不选View
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SetSelectedViews">
            <summary>
            选中指定的Views
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.RemoveSelectedViews">
            <summary>
            删除已选的Views
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.MoveSlectedViews">
            <summary>
            移动已选的Views
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ClearPageViews">
            <summary>
            清理当前页面
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ResizeSinglePointView">
            <summary>
            缩放单点视图  （线、三角形）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ResizeRectPointView">
            <summary>
            缩放矩形试图  （矩形、椭圆、文本）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.WhiteBoardViewChangedPassive">
            <summary>
            白板View 被修改 （新增、修改 等）除移除外
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.WhiteBoardViewRemovedPassive">
            <summary>
            白板View被移除
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.GetWhiteBoardPageCount">
            <summary>
            获取白板总页数
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.WhiteBoardNewPage">
            <summary>
            新建白板页
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.WhiteBoardRemoveCurrentPage">
            <summary>
            移除白板页当前页
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.WhiteBoardFirstPage">
            <summary>
            首页
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.WhiteBoardLastPage">
            <summary>
            底页
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.WhiteBoardNextPage">
            <summary>
            白板下一页
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.WhiteBoardPrevPage">
            <summary>
            白板上一页
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SavePictureViewToLocal">
            <summary>
            白板图片View另存为
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SaveWhiteBoardImageToLocal">
            <summary>
            当前白板页内容图像另存为
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SaveImageResult">
            <summary>
            保存图像结果  （S->C）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SetPictureViewAsBackImage">
            <summary>
            将PictureView设为背景图
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.RemoveWhiteBoardBackImage">
            <summary>
            移除背景图
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.GetWhiteBoardCurrentPageIndex">
            <summary>
            获取白板当前页的索引
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SetTopMostView">
            <summary>
            置顶View
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.SetBottomMostView">
            <summary>
            置底View
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.RotateView">
            <summary>
            旋转试图
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.RefreshCurrentPage">
            <summary>
            刷新当前页
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.GetAllCourseware">
            <summary>
            获取所有课件
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.UploadCourseware">
            <summary>
            上传课件 (C->S)
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.DownloadCourseware">
            <summary>
            下载课件 (C->S)
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.DeleteCourseware">
            <summary>
            删除课件 (C->S)
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.OpenCourseware">
            <summary>
            打开课件 (C->S)
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.CoursewareProgressChanged">
            <summary>
            课件进度变化 （S->C）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ShowMessageBox">
            <summary>
            弹出提示 （S->C）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.CoursewareStateChanged">
            <summary>
            课件状态改变 （S->C）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.CoursewareOpened">
            <summary>
            课件打开了 （S->C）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.CoursewareTransferCompleted">
            <summary>
            课件传输完成 （S->C）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.CoursewareTransferDisruptted">
            <summary>
            课件传输失败 （S->C）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.CoursewareTransferState">
            <summary>
            课件传输状态 （S->C）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.CoursewareTransferProgress">
            <summary>
            课件传输的进度 （S->C）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.CoursewareTransferTotalProgress">
            <summary>
            课件总传输进度 （S->C）
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.GetDeviceList">
            <summary>
            获取本地设备列表
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.GetFirstValidDeviceIndex">
            <summary>
            获取第一个有效的设备索引 (C->S)
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.GetCameraSupportSize">
            <summary>
            获取摄像头支持的尺寸
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.GetZoomImageData">
            <summary>
            获取缩放后的图片数据
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.StartCaptureAudio">
            <summary>
            开始采集语音消息
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.StopCaptureAudio">
            <summary>
            停止采集语音消息 并返回采集到的byte[]
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.PlayAudio">
            <summary>
            播放语音消息
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.StopPlayAudio">
            <summary>
            停止播放语音消息
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.CaptureScreen">
            <summary>
            截屏
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ConnectorAutoReconnectStart">
            <summary>
            连接器开始自动重连
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ConnectorAutoReconnectFailed">
            <summary>
            连接器开始重连失败
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ConnectorAutoReconnectSucceed">
            <summary>
            连接器开始重连成功
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.JoinChatGroup">
            <summary>
            加入群视频聊天（C->S）参数：groupID
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ExitChatGroup">
            <summary>
            退出群视频聊天（C->S）参数：groupID
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ChatGroupSomeoneJoin">
            <summary>
            有人加入到群视频聊天 （S->C） 参数：memberID
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ChatGroupSomeoneExit">
            <summary>
            有人退出群视频聊天 （S->C） 参数：Size
            </summary>
        </member>
        <member name="F:OMCS.Service4Web.WebMessageTypes.ChatGroupMemberIDs">
            <summary>
            加入成功返回群组成员
            </summary>
        </member>
        <member name="T:OMCS.Passive.AdvancedOptions">
            <summary>
            OMCS客户端高级设置。
            必须在调用IMultimediaManager的Initialize方法之前设置AdvancedOptions的相关属性才有效。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.UseAEC4Audio">
            <summary>
            是否对语音启用回音消除。默认值：true。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.UseNS4Audio">
            <summary>
            是否对语音启用降噪处理。默认值：true。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.UseAGC4Audio">
            <summary>
            是否对语音启用音量自动调节。默认值：false。
            （如果开启了音量自动调节，则引擎内部会自动开启降噪处理）
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.UseAEQ4Audio">
            <summary>
            是否对语音启用音质透明。默认值：true。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.WriteTimeoutInSecs">
            <summary>
            写超时。单位：秒。默认值：0。0表示不设定超时。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.SocketSendBuffSize">
            <summary>
            发送缓冲区的大小。默认值：64K。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.SocketReceiveBuffSize">
            <summary>
            接收缓冲区的大小。默认值：64K。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.JitterBufferSize">
            <summary>
            抖动缓冲区的尺寸（JitterBuffer中的一个单位相当于20ms的音频数据）。默认值40。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.EncodedAudioFrameCountInPackage">
            <summary>
            传输采集到的音频数据时，一个传送单元内包含多少个编码帧（一个编码帧即20ms的音频数据）。默认值为5。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.MaxInterval4CameraKeyFrame">
            <summary>
            摄像头视频编码时，两个关键帧之间最多间隔多少秒。单位：秒。默认值为300。       
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.MaxInterval4DesktopKeyFrame">
            <summary>
            桌面视频编码时，两个关键帧之间最多间隔多少秒。单位：秒。默认值为300。           
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.UseOriginImage4Myself">
            <summary>
            如果自己作为guest连接自己的摄像头/桌面，是否直接使用采集的图像（不需要经过视频编解码）？默认值为true。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.CheckCameraStateEveryTime">
            <summary>
            每次摄像头启动前，都先检查其状态（是否被占用）？ 默认值：false
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.VideoFrameDisardedMode">
            <summary>
            当通道繁忙时，在采集视频帧（摄像头/桌面）时的丢弃模型。默认值为DontDiscard。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.RecheckMembersOfChatGroup">
            <summary>
            是否复查聊天组（MultiChat）成员。默认值：true。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.FdPercent4DEQ">
            <summary>
            当视频丢帧比例达到百分之多少的时候，开始降低视频编码质量（即清晰度），以提升Guest观看视频的流畅度。取值范围：0~100。默认值：12。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.DontUseAudioDevice">
            <summary>
            不使用声音设备（声卡、麦克风）。默认值：false。（比如，在VPS服务器上录制时，由于服务器上没有声卡等硬件设备，可以将该属性设置为true。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.AudioMixedStrategy">
            <summary>
            当连接到多个owner的麦克风时，对多路声音混音采用的策略。默认值：AudioMixedStrategy.All
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.AudioCodecType">
            <summary>
            采用的声音编码策略：Speex或AAC。默认值：Speex。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.VideoCodecType">
            <summary>
            采用的视频编码：H264或H265。默认值：H264New。
            注：与H264相比，H265虽然节省了带宽，但是由于计算复杂度的急剧增加，将导致编码缓慢（至少比H264慢3倍）。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.VideoEncodeThreadCount">
            <summary>
            视频编码使用的线程数。默认值：1。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.VideoDecodeThreadCount">
            <summary>
            视频解码使用的线程数。默认值：2。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.GpuEnabled4EncodeCamera">
            <summary>
            摄像头视频编码是否启用GPU？默认值：false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.GpuEnabled4EncodeDesktop">
            <summary>
            桌面视频编码是否启用GPU？默认值：false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.GpuEnabled4Decode">
            <summary>
            视频解码是否启用GPU？默认值：false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.Yuv444First4Desktop">
            <summary>
            桌面视频编码优先使用YUV444格式作为输入源？默认值：false（表示使用YUV420P）。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.AutoAdjustCameraOutputSize">
            <summary>
            是否根据Guest的显示窗口大小自动调整摄像头视频输出的分辨率？默认值：false。
            如果为true，则不能在运行过程中修改摄像头的采集分辨率。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.MaxImageLengthInsertWhiteBoard">
            <summary>
            当插入白板的图片的宽高超过该值时，会将该图片等比缩小后，再插入白板。默认值：1400。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.TimeSpentLogEnabled">
            <summary>
            是否开启视频各个环节的耗时日志记录。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.VideoDecodeSlowFeedbackEnabled">
            <summary>
            是否开启视频解码慢的反馈机制。默认值：true。
            如果开启了该机制，当Guest端因为解码慢而导致待解码视频帧开始累积时，将发送一个通知给Owner，Owner收到该通知后，将自动降低采集的帧频。 
            </summary>
        </member>
        <member name="P:OMCS.Passive.AdvancedOptions.MinFpsWhenDecodeSlowFeedback">
            <summary>
            当开启了视频解码慢的反馈机制（VideoDecodeSlowFeedbackEnabled为true），Owner自动降低采集的帧频能达到的最小值。默认值：5 
            </summary>
        </member>
        <member name="F:OMCS.Passive.AdvancedOptions.OutputOriginDesktopSizeAlways">
            <summary>
            当IMultimediaManager的DesktopRegion指定了部分桌面区域时，是否仍然输出整个桌面尺寸（DesktopRegion之外的区域显示黑色）？默认值：false。
            </summary>
        </member>
        <member name="T:OMCS.Passive.AudioMixedStrategy">
            <summary>
            混音策略。
            </summary>
        </member>
        <member name="F:OMCS.Passive.AudioMixedStrategy.All">
            <summary>
            只要有声音数据的line，都参与混音。
            </summary>
        </member>
        <member name="F:OMCS.Passive.AudioMixedStrategy.DecibelTop1">
            <summary>
            只混音分贝值排名第一的line。
            </summary>
        </member>
        <member name="F:OMCS.Passive.AudioMixedStrategy.DecibelTop2">
            <summary>
            只混音分贝值排名前二的line。
            </summary>
        </member>
        <member name="F:OMCS.Passive.AudioMixedStrategy.DecibelTop3">
            <summary>
            只混音分贝值排名前三的line。
            </summary>
        </member>
        <member name="T:OMCS.Passive.BitrateControlType">
            <summary>
            视频码率控制策略。
            </summary>
        </member>
        <member name="F:OMCS.Passive.BitrateControlType.CQP">
            <summary>
            恒定质量。
            </summary>
        </member>
        <member name="F:OMCS.Passive.BitrateControlType.CRF">
            <summary>
            恒定码率系数。
            </summary>
        </member>
        <member name="F:OMCS.Passive.BitrateControlType.ABR">
            <summary>
            平均码率。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.AudioDeviceManager.Singleton">
            <summary>
            多媒体管理器初始化时，一定会保证Singleton不为null的。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.AudioDeviceManager.CreateSingleton(System.String,OMCS.Passive.Core.IAudioCapturerFactory,System.Int32,System.Int32,ESBasic.Loggers.IAgileLogger)">
            <summary>
            之所以改成Singleton，是为了支持多人音频/视频聊天。（多个MultimediaManager对象，每个连接一个OMCS服务器。）
            灵活使用单向传递。每个人连接的第一个OMCS服务器称为主OMCS服务器，本地采集的所有音视频数据都发往（也仅仅发往）主服务器，
            如果其它的用户需要连接目标用户的多媒体，那么可以先连接目标用户所在的主OMCS服务器。这样就可以解决一个人同时和多个人聊天的问题。
            </summary>       
        </member>
        <member name="T:OMCS.Passive.Audio.AudioInOutMixer">
            <summary>
            将本地话筒设备的输入数据以及本地声音播放的输出数据进行混音。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.AudioInOutMixer.AudioMixed">
            <summary>
            本地话筒设备采集的一帧音频数据以及本地扬声器播放的一帧输出数据进行混音。（音频数据长度：10ms）
            </summary>
        </member>
        <member name="T:OMCS.Passive.Audio.IAudioEncoder">
            <summary>
            音频编码器基础接口。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.IAudioEncoder.Encode(System.Byte[])">
            <summary>
            对音频数据进行编码。每次10ms数据。
            </summary>       
        </member>
        <member name="T:OMCS.Passive.Audio.IAudioDecoder">
            <summary>
            音频解码器基础接口。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.IAudioDecoder.Decode(System.Byte[])">
            <summary>
            对音频数据进行解码码。如果编解码器已经被释放，则返回null。
            </summary>
            <param name="data">编码后的音频数据</param>
            <returns>解码后的数据。如果编解码器已经被释放，则返回null。</returns>
        </member>
        <member name="T:OMCS.Passive.Audio.AudioDevice">
            <summary>
            音频设备。
            (1)采样位数为16bit，单声道。
            (2)每10毫秒采集一帧。
            (3)Speex 一次编码10ms，AAC必须每次编码1024个样本。
            </summary>
        </member>
        <member name="F:OMCS.Passive.Audio.AudioDevice.EmptyOneFrame">
            <summary>
            10ms ，320字节
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.AudioDevice.AudioCaptured">
            <summary>
            采集到的音频数据，里面包含frameCountInTransPackage个已编码音频帧，使用CompactPropertySerializer序列化。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.AudioDevice.EncodedAudioCaptured">
            <summary>
            采集到的音频数据，每个编码帧为10ms。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.AudioDevice.RawAudioPlayed">
            <summary>
            刚刚播放的音频帧（raw data，10ms）。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.AudioDevice.RawAudioCaptured">
            <summary>
            刚刚从话筒或自定义采集器采集的音频帧（raw data，10ms数据）。
            </summary>
        </member>
        <member name="F:OMCS.Passive.Audio.AudioDevice.capturedAudioQueue">
            <summary>
            采集的声音存放的队列。麦克风数据（PCM）或者扩展音频输入（PCM、Speex、AAC）。
            </summary>
        </member>
        <member name="F:OMCS.Passive.Audio.AudioDevice.frameListToPublish">
            <summary>
            等待发送的已编码好的音频帧。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.AudioDevice.HanleAudioIn(System.Byte[])">
            <summary>
            麦克风采集回调。
            </summary>  
        </member>
        <member name="M:OMCS.Passive.Audio.AudioDevice.GetFrame4AudioOut">
            <summary>
            扬声器播放回调。必须每次严格地传入一个Frame（10ms）。
            </summary>       
        </member>
        <member name="P:OMCS.Passive.Audio.AudioDevice.MicrophoneDeviceIndex">
            <summary>
            使用的麦克风的索引。-1表示采集声卡。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.AudioDevice.OutputAudio">
            <summary>
            是否输出麦克风采集到的声音。如果为false，将不会触发AudioCaptured事件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.AudioDevice.IsMicValid">
            <summary>
            音频设备是否有效。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.AudioDevice.IsSpeakerWorkWell">
            <summary>
            扬声器是否正在正常工作？
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.AudioDevice.Start">
            <summary>
            启动音频设备。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.AudioDevice.Stop">
            <summary>
            停止音频设备。可以在后台线程中调用。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.AudioDevice.StopAsyn">
            <summary>
            异步停止设备。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Audio.FourierTransformer">
            <summary>
            傅立叶变换。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Audio.IAudioCapturer">
            <summary>
            声音采集器。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.IAudioCapturer.IsEncodedAudioData">
            <summary>
            采集的数据是编码后的数据？（当为PCM数据且需要参与混音，则AudioCaptured事件每次输出10ms即320字节的数据；否则，每次输出的字节长度不作限制）。
            比如：
            （1）从网络摄像头拿到的已编码的音频流。
            （2）从MicrophoneConnector  的 AudioDataEncodedReceived 事件拿到的数据。
            （3）在部署相互关联的多套OMCS服务器时，可在桥接器上使用。       
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.IAudioCapturer.AudioCaptured">
            <summary>
            当采集到声音数据（16bit，16000，1声道）时，触发此事件。（如果要AudioInputMode.BothExtendAndMicrophone参与混音，则必须每次输出10ms数据）
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.IAudioCapturer.AudioError">
            <summary>
            当采集发生错误时，触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.IAudioCapturer.IsAudioCapturing">
            <summary>
            是否正在采集？
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.IAudioCapturer.StartAudio">
            <summary>
            开始采集
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.IAudioCapturer.StopAudio">
            <summary>
            停止采集
            </summary>
        </member>
        <member name="T:OMCS.Passive.Audio.JitterBuffer">
            <summary>
            抖动缓冲区。根据网络抖动的变化情况自动修改缓冲深度。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.JitterBuffer.AudioDataReceived">
            <summary>
            当接收到目标用户的麦克风的数据时，触发该事件。（解码后的数据，10ms）
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.JitterBuffer.BufferBecomeEmpty">
            <summary>
            当数据播放完毕时，将触发该事件。参数：lineID。       
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.JitterBuffer.OwnerOutputAudio">
            <summary>
            麦克风的主人是否输出了语音？
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.JitterBuffer.GetPercentOfFrameLatestSecond">
            <summary>
            获取最后一秒的音频帧到达率（乘以100）。
            </summary>        
        </member>
        <member name="T:OMCS.Passive.Audio.IMixAlgorithm">
            <summary>
            多路音频混音器。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.IMixAlgorithm.MaxAmplifier">
            <summary>
            音量放大系数。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.IMixAlgorithm.Mix(System.Collections.Generic.IList{System.Byte[]})">
            <summary>
            混音。
            </summary>        
        </member>
        <member name="T:OMCS.Passive.Audio.MixAlgorithm16Bit">
            <summary>
            采样位数16bit的混音算法
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.MixAlgorithm16Bit.MaxAmplifier">
            <summary>
            音量放大系数。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Audio.MixAlgorithm32Bit">
            <summary>
            采样位数32bit的混音算法
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.MixAlgorithm32Bit.MaxAmplifier">
            <summary>
            音量放大系数。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Audio.MixAlgorithm8Bit">
            <summary>
            采样位数8bit的混音算法
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.MixAlgorithm8Bit.MaxAmplifier">
            <summary>
            音量放大系数。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.Mixer.AudioDataReceived">
            <summary>
            当接收到目标用户的麦克风的数据时，触发该事件。（解码后的数据，10ms）
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.Mixer.MaxAmplifier">
            <summary>
            声音放大的倍数。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.Mixer.Play(System.String,System.Byte[])">
            <summary>
            将接收到的音频数据包解析后并混音播放。
            </summary>
            <param name="lineID">音频数据的来源（UserID）</param>
            <param name="data">EncodedFrameCountInTransPackage个编码帧，EncodedFrameCountInTransPackage*12个采集帧</param>
        </member>
        <member name="M:OMCS.Passive.Audio.Mixer.Play(System.String,System.Collections.Generic.List{System.Byte[]})">
            <summary>
            将接收到的音频数据包解析后并混音播放。
            </summary>
            <param name="lineID">音频数据的来源（UserID）</param>        
        </member>
        <member name="M:OMCS.Passive.Audio.Mixer.GetPercentOfFrameLatestSecond(System.String)">
            <summary>
            获取最后一秒的音频帧到达率（乘以100）。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.Audio.Mixer.RemoveAudioBuffer(System.String)">
            <summary>
            当不再使用目标AudioPlayBuffer后，调用此方法将其移除
            </summary>
            <param name="lineID">可以为virtualLineID</param>
        </member>
        <member name="M:OMCS.Passive.Audio.Mixer.GetDelayMSecs(System.String)">
            <summary>
            获取因为JitterBuffer而导致的音频延迟时间。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.Audio.Mixer.GetNextMixedFrame(OMCS.Passive.Audio.UserDecibel@,System.Collections.Generic.List{OMCS.Passive.Audio.UserDecibel}@)">
            <summary>
            每次返回10ms的语音数据。如果返回的长度为0，则表示为静音帧。
            </summary>        
        </member>
        <member name="T:OMCS.Passive.Audio.SpeexEncoder">
            <summary>
            对Speex的C#封装。
            zhuweisky 2010.05.13
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.SpeexEncoder.#ctor(System.Int32,System.Int32)">
            <summary>
            初始化。
            </summary>
            <param name="quality">编码质量，取值0~10。值越大，质量越高。</param>
        </member>
        <member name="T:OMCS.Passive.Audio.SpeexDecoder">
            <summary>
            对Speex的C#封装。
            zhuweisky 2010.05.13
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.SpeexDecoder.#ctor(System.Int32)">
            <summary>
            初始化。
            </summary>
            <param name="quality">编码质量，取值0~10。值越大，质量越高。</param>
        </member>
        <member name="M:OMCS.Passive.Audio.SpeexDecoder.Decode(System.Byte[])">
            <summary>
            将编码后的数据进行解码得到原始的音频数据。
            </summary>      
        </member>
        <member name="T:OMCS.Passive.Audio.MicrophoneConnector">
            <summary>
            话筒连接器。通过该组件可以连接到对方的话筒，播放对方话筒捕获到的声音。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.MicrophoneConnector.AudioDataReceived">
            <summary>
            当接收到目标用户的麦克风的数据时，触发该事件。参数：ownerID - data（解码后的数据，10ms）
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.MicrophoneConnector.AudioDataEncodedReceived">
            <summary>
            当接收到目标用户的麦克风的数据时，触发该事件。参数：ownerID - data（尚未解码的数据，10ms）
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.MicrophoneConnector.MultimediaDeviceType">
            <summary>
            目标多媒体设备的类型。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.MicrophoneConnector.SpringReceivedEventWhenMute">
            <summary>
            当Mute属性设置为true时，不会播放接收到的数据，但是，此时需要触发AudioDataReceived事件吗？默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.MicrophoneConnector.Mute">
            <summary>
            是否静音。默认值false。注意，即使设置为true，也不影响AudioDataReceived事件的触发。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.MicrophoneConnector.OwnerOutput">
            <summary>
            Owner是否输出了音频。【对应于Owner端的多媒体管理器的OutputAudio属性】
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.MicrophoneConnector.OwnerOutputChanged">
            <summary>
            当Owner音频输出控制改变时，触发此事件。参数：ownerID 。【对应于Owner端的多媒体管理器的OutputAudio属性的修改】
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.MicrophoneConnector.ChangeOwnerOutput(System.Boolean)">
            <summary>
            修改Owner的麦克风的输出控制。如果Owner方修改成功，将会触发本地的OwnerOutputChanged事件。
            </summary>
            <param name="output">是否输出音频</param>
        </member>
        <member name="M:OMCS.Passive.Audio.MicrophoneConnector.GetPercentOfFrameLatestSecond">
            <summary>
            获取最后一秒的音频帧到达率（乘以100）。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.Audio.MicrophoneConnector.GetRTAudioParameters">
            <summary>
            获取实时的视频参数。（RecordAudioParameters属性必须为true才有效）
            </summary>        
        </member>
        <member name="M:OMCS.Passive.Audio.MicrophoneConnector.GetChannelQuality">
            <summary>
            获取通道质量（从Owner到当前Guest的通道传输质量）。
            取值：0~10。值越大，表示通道质量越好。
            </summary>    
        </member>
        <member name="F:OMCS.Passive.Audio.MicrophoneConnector.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.MicrophoneConnector.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Passive.Audio.MicrophoneConnector.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Audio.MicrophoneConnectorMixer">
            <summary>
            【在服务器端使用】用于将多个MicrophoneConnector的声音数据混音。
            注：IMultimediaManager.Advanced.DontUseAudioDevice 必须为 true。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.MicrophoneConnectorMixer.AudioMixed">
            <summary>
            每隔10毫秒触发一次，输出混音数据。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.MicrophoneConnectorMixer.GetNextMixedFrame(System.String@,System.Int32@)">
            <summary>
            每次返回20ms的语音数据。如果返回的长度为0，则表示为静音帧。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.Audio.MicrophoneConnectorMixer.Dispose">
            <summary>
            释放混音器。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Audio.IMicrophoneConnectorMixer.AudioMixed">
            <summary>
            每隔20毫秒触发一次，输出混音数据。参数:声音最大的发言人UserID - data。
            如果此时无人发言，则UserID参数为null，data为静音数据。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.IMicrophoneConnectorMixer.AddMicrophoneConnector(OMCS.Passive.Audio.MicrophoneConnector)">
            <summary>
            添加要参与混音的MicrophoneConnector。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.Audio.IMicrophoneConnectorMixer.RemoveMicrophoneConnector(System.String)">
            <summary>
            移除参与混音的MicrophoneConnector。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.Audio.IMicrophoneConnectorMixer.Dispose">
            <summary>
            释放混音器。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Audio.MicrophoneDevice">
            <summary>
            话筒设备。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.MicrophoneDevice.DeviceInUsing">
            <summary>
            设备是否被其它进程独占。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Audio.MicrophoneDevice.OutputAudio">
            <summary>
            是否将话筒采集到的音频输出给Guest。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Audio.MicrophoneDevice.GetGuests">
            <summary>
            获取guest列表。可以包含自己。
            </summary>
        </member>
        <member name="T:OMCS.Passive.VideoSizeFraction">
            <summary>
            分数
            </summary>
        </member>
        <member name="P:OMCS.Passive.VideoSizeFraction.Numerator">
            <summary>
            分子
            </summary>
        </member>
        <member name="P:OMCS.Passive.VideoSizeFraction.Denominator">
            <summary>
            分母
            </summary>
        </member>
        <member name="P:OMCS.Passive.VideoSizeFraction.VideoSize">
            <summary>
            视频尺寸。
            </summary>
        </member>
        <member name="T:OMCS.Passive.VideoParameters">
            <summary>
            视频参数信息。
            </summary>
        </member>
        <member name="P:OMCS.Passive.VideoParameters.Size">
            <summary>
            视频图像尺寸。
            </summary>
        </member>
        <member name="P:OMCS.Passive.VideoParameters.FPS">
            <summary>
            帧频。
            </summary>
        </member>
        <member name="P:OMCS.Passive.VideoParameters.Quality">
            <summary>
            图像质量。
            </summary>
        </member>
        <member name="P:OMCS.Passive.VideoParameters.Bitrate">
            <summary>
            码率。
            </summary>
        </member>
        <member name="P:OMCS.Passive.VideoParameters.QueuedFrameCount">
            <summary>
            队列中等待解码的帧数。
            </summary>
        </member>
        <member name="T:OMCS.Passive.AudioParameters">
            <summary>
            音频参数信息。
            </summary>
        </member>
        <member name="P:OMCS.Passive.AudioParameters.FPS">
            <summary>
            帧频。（每帧为20ms的音频数据）
            </summary>
        </member>
        <member name="P:OMCS.Passive.AudioParameters.Bitrate">
            <summary>
            码率。
            </summary>
        </member>
        <member name="F:OMCS.Passive.VideoDrawMode.Origin">
            <summary>
            原始尺寸
            </summary>
        </member>
        <member name="F:OMCS.Passive.VideoDrawMode.Fill">
            <summary>
            填满控件表面
            </summary>
        </member>
        <member name="F:OMCS.Passive.VideoDrawMode.Scale">
            <summary>
            等比缩放
            </summary>
        </member>
        <member name="F:OMCS.Passive.VideoDrawMode.ScaleToFill">
            <summary>
            等比缩放至铺满控件（裁去多余的边）
            </summary>
        </member>
        <member name="F:OMCS.Passive.DeviceState.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:OMCS.Passive.DeviceState.NotExist">
            <summary>
            不存在
            </summary>
        </member>
        <member name="F:OMCS.Passive.DeviceState.InUsing">
            <summary>
            使用中
            </summary>
        </member>
        <member name="F:OMCS.Passive.DeviceState.Invalid">
            <summary>
            无效
            </summary>
        </member>
        <member name="T:OMCS.Passive.CameraInformation">
            <summary>
            摄像头的基础信息。
            </summary>
        </member>
        <member name="P:OMCS.Passive.CameraCapability.VideoSize">
            <summary>
            视频的分辨率、尺寸。
            </summary>
        </member>
        <member name="P:OMCS.Passive.CameraCapability.MaxFrameRate">
            <summary>
            支持采集的最高帧频。
            </summary>
        </member>
        <member name="M:OMCS.Passive.BaseConnectorComponent.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="P:OMCS.Passive.BaseConnectorComponent.IsDisposed">
            <summary>
            连接器是否已经被释放？
            </summary>
        </member>
        <member name="P:OMCS.Passive.BaseConnectorComponent.OwnerID">
            <summary>
            设备主人的UserID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.BaseConnectorComponent.Connected">
            <summary>
            与目标设备是否已连接？
            </summary>
        </member>
        <member name="P:OMCS.Passive.BaseConnectorComponent.AutoReconnect">
            <summary>
            在因为自己掉线或Owner掉线而导致当前连接器断开时，是否开启自动重连的功能。默认值为false。
            </summary>
        </member>
        <member name="E:OMCS.Passive.BaseConnectorComponent.Disconnected">
            <summary>
            当与目标设备的连接断开时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.BaseConnectorComponent.ConnectEnded">
            <summary>
            当连接对方设备的尝试结束时，触发此事件。事件参数说明了连接的结果。
            </summary>
        </member>
        <member name="E:OMCS.Passive.BaseConnectorComponent.AutoReconnectStart">
            <summary>
            在AutoReconnect为true的情况下，当开始自动重连目标多媒体设备时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.BaseConnectorComponent.AutoReconnectSucceed">
            <summary>
            在AutoReconnect为true的情况下，当自动重连目标多媒体设备成功时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.BaseConnectorComponent.AutoReconnectFailed">
            <summary>
            在AutoReconnect为true的情况下，当自动重连目标多媒体设备失败时，触发该事件。
            </summary>
        </member>
        <member name="M:OMCS.Passive.BaseConnectorComponent.BeginConnect(System.String)">
            <summary>
            尝试连接目标多媒体设备。如果多媒体设备未被授权、或多媒体管理器未成功初始化、或当前连接器已经连接成功、或上次的连接尝试还未结束，则将抛出相应的异常。      
            </summary>       
            <param name="destUserID">目标用户的UserID</param>        
        </member>
        <member name="M:OMCS.Passive.BaseConnectorComponent.Disconnect">
            <summary>
            与目标设备断开连接，并释放通道。
            </summary>
        </member>
        <member name="M:OMCS.Passive.BaseConnectorComponent.GetChannelQuality">
            <summary>
            获取通道质量（从Owner到当前Guest的通道传输质量）。
            取值：0~10。值越大，表示通道质量越好。
            </summary>    
        </member>
        <member name="F:OMCS.Passive.BaseConnectorComponent.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.BaseConnectorComponent.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Core.IAudioCapturerFactory">
            <summary>
            声音采集器工厂接口。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Core.IAudioCapturerFactory.CreateAudioCapturer(System.Int32)">
            <summary>
            创建一个新的声音采集器实例。
            如果返回null，则表示使用框架内置的声音采集器。
            </summary>
            <param name="deviceIndex">设备索引</param>      
        </member>
        <member name="T:OMCS.Passive.Core.IVideoCapturerFactory">
            <summary>
            视频采集器工厂接口。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Core.IVideoCapturerFactory.CreateVideoCapturer(System.Int32)">
            <summary>
            创建一个新的视频采集器实例。
            如果返回null，则表示使用框架内置的视频采集器。
            </summary>
            <param name="deviceIndex">摄像头索引</param>       
        </member>
        <member name="T:OMCS.Passive.Core.IVideoCodecFactory">
            <summary>
            视频编解码器工厂接口。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Core.IVideoCodecFactory.CreateVideoEncoder(System.Drawing.Size)">
            <summary>
            创建一个新的视频编码器实例。
            如果返回null，则表示使用框架内置的视频编码器。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.Core.IVideoCodecFactory.CreateVideoDecoder(System.Drawing.Size,System.Boolean)">
            <summary>
            创建一个新的视频解码器实例。
            如果返回null，则表示使用框架内置的视频解码器。
            </summary>       
        </member>
        <member name="T:OMCS.Passive.Core.AgileVideoCapturer">
            <summary>
            包装IVideoCapturer，并加入视频编码和丢帧控制功能。
            2021.06.11 AgileVideoCapturer 之前是在采集线程中进行H264编码的，会导致预览摄像头延迟不顺畅，现在改到后台线程中编码。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Core.AgileVideoCapturer.OriginVideoCaptured">
            <summary>
            采集到的原始视频帧。没有xvid，没有丢帧。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Core.AgileVideoCapturer.InnerVideoCapture">
            <summary>
            内部使用的采集器。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Core.AgileVideoCapturer.EncodeQuality">
            <summary>
            采集的视频的编码质量。取值0~31。取值越小，越清晰。可以在运行时动态修改。
            </summary>       
        </member>
        <member name="E:OMCS.Passive.Core.AgileVideoCapturer.FrameDiscarded">
            <summary>
            在过去的10秒内丢失的帧数。参数：total - discarded
            </summary>
        </member>
        <member name="M:OMCS.Passive.Core.AgileVideoCapturer.Stop">
            <summary>
            停止设备。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Core.AgileVideoCapturer.StopAsyn">
            <summary>
            异步停止设备。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Core.CameraCapturer.VideoSizeChanged">
            <summary>
            当摄像头的采集分辨率发生变化时，触发此事件。 参数为新的分辨率。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Core.CameraCapturer.StopVideo">
            <summary>
            停止设备。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Core.CameraCapturer.StopAsyn">
            <summary>
            异步停止设备。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Core.CameraQualityAdjuster">
            <summary>
            摄像头视频质量调节器。
            根据视频的丢帧自动调整视频编码质量。
            </summary>
        </member>
        <member name="F:OMCS.Passive.Core.FrameType.Original">
            <summary>
            未编码的帧。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Core.IAgileVideoCapturer">
            <summary>
            智能视频采集器基础接口。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Core.IAgileVideoCapturer.FrameDiscarded">
            <summary>
            在过去的10秒内丢失的帧数。参数：total - discarded
            </summary>
        </member>
        <member name="E:OMCS.Passive.Core.IAgileVideoCapturer.OriginVideoCaptured">
            <summary>
            采集到的原始视频帧。没有xvid，没有丢帧。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Core.EmptyVideoCapturer.FrameDiscarded">
            <summary>
            在过去的5秒内丢失的帧数。参数：total - discarded
            </summary>
        </member>
        <member name="T:OMCS.Passive.Core.ICaptureController">
            <summary>
            用于控制是否需要捕获下一帧。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Core.IVideoCapturer">
            <summary>
            视频采集器。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Core.IVideoCapturer.IsEncodedVideoData">
            <summary>
            采集的数据是编码后的数据？（true表示H264，false表示RGBA32）
            比如：
            （1）从网络摄像头拿到的已编码的视频流。
            （2）从DynamicCameraConnector 的 FrameEncodedReceived 事件拿到的数据。
            （3）在部署相互关联的多套OMCS服务器时，可在桥接器上使用。
            注意，若启用该属性，则在连接自己测试时，要将IMultimediaManager.Advanced.UseOriginImage4Myself设置为false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Core.IVideoCapturer.VideoSizeRevised">
            <summary>
            要采集的视频大小（分辨率）,宽和高都修正为8的整数倍。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Core.IVideoCapturer.IsVideoCapturing">
            <summary>
            是否正在采集？
            </summary>
        </member>
        <member name="P:OMCS.Passive.Core.IVideoCapturer.OutputRGBA">
            <summary>
            是否触发VideoCaptured事件？
            </summary>
        </member>
        <member name="P:OMCS.Passive.Core.IVideoCapturer.SupportOutputYuv420p">
            <summary>
            是否支持输出I420？
            </summary>
        </member>
        <member name="M:OMCS.Passive.Core.IVideoCapturer.StartVideo">
            <summary>
            开始采集
            </summary>
        </member>
        <member name="M:OMCS.Passive.Core.IVideoCapturer.StopVideo">
            <summary>
            停止采集
            </summary>
        </member>
        <member name="M:OMCS.Passive.Core.IVideoCapturer.ChangeVideoSize(System.Drawing.Size)">
            <summary>
            修改采集的分辨率。
            IVideoCapturer内部应按顺序执行如下动作：
            停止采集 =》 更改分辨率 =》 触发VideoSizeChanged事件 =》 启动采集 
            </summary>        
        </member>
        <member name="M:OMCS.Passive.Core.IVideoCapturer.ChangeFrameRate(System.Int32)">
            <summary>
            修改帧频。
            </summary>        
        </member>
        <member name="E:OMCS.Passive.Core.IVideoCapturer.VideoCaptured">
            <summary>
            当采集完一帧时，触发此事件。事件参数: （byte[]）图像数据（RGBA数据或者是H264/H265数据） - （bool）如果是编码后的数据，则表示是否为关键帧。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Core.IVideoCapturer.Yuv420pCaptured">
            <summary>
            当采集完一帧时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Core.IVideoCapturer.VideoError">
            <summary>
            当采集发生错误时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Core.IVideoCapturer.VideoSizeChanged">
            <summary>
            当采集的分辨率发生变化时，触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Core.IDesktopCapturer.CaptureRegion">
            <summary>
            实际捕捉的区域。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Core.IDesktopCapturer.ChangeCaptureRegion(System.Int32,System.Nullable{System.Drawing.Rectangle},System.Single)">
            <summary>
            动态修改捕捉区域。
            </summary>        
        </member>
        <member name="P:OMCS.Passive.Core.VideoEncoder.QuantCoef">
            <summary>
            编码质量控制量化参数，0~31。数值越小质量越高和码率成反比。可在运行的过程中动态修改。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Core.IVideoEncoder">
            <summary>
            视频编码器的基础接口。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Core.IVideoEncoder.QuantCoef">
            <summary>
            视频编码质量（0~31）。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Core.IVideoEncoder.Encode(System.Byte[],System.Boolean)">
            <summary>
            进行视频编码。
            </summary>
            <param name="imageBuff">RGBA32位图数据，不包含Header</param>
            <param name="iFrame">编码帧为I帧</param>
            <param name="forceIFrame">强制编码为I帧</param>
            <param name="frameNumber">编码帧的序号，从1开始计数到达最大后再循环</param>
            <returns>编码后的数据。（DataBuffer是要被复用的，所以调用者根据需要可能要拷贝编码结果）</returns>       
        </member>
        <member name="T:OMCS.Passive.Core.IVideoDecoder">
            <summary>
            视频解码器的基础接口。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Core.IVideoDecoder.Decode(System.Byte[],System.Boolean)">
            <summary>
            进行解码。如果编解码器已经被释放，则返回null。
            </summary>
            <param name="dataBuffer">编码后的数据</param>
            <param name="copyDataFromGPU">如果是使用GPU解码并渲染，是否将数据拷贝回内存并返回？</param>
            <returns>RGB位图数据，不包含Header。如果是GPU解码并渲染，并且copyDataFromGPU为false，将返回null。</returns>
        </member>
        <member name="P:OMCS.Passive.Core.IVideoDecoder.GpuRendering">
            <summary>
            是否使用GPU渲染？
            </summary>
        </member>
        <member name="P:OMCS.Passive.Core.IVideoDecoder.GpuDecode">
            <summary>
            是否使用GPU解码？
            </summary>
        </member>
        <member name="E:OMCS.Passive.Core.VideoConnector.OwnerVideoSizeChanged">
            <summary>
            当检测到Owner采集的视频大小发生变化时，触发此事件。参数：OwnerID - 新的视频大小。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Core.VideoConnector.OwnerOutputChanged">
            <summary>
            当Owner视频输出控制改变时，触发此事件。参数：OwnerID。【对应于Owner端的多媒体管理器的OutputVideo属性的修改】
            </summary>        
        </member>
        <member name="E:OMCS.Passive.Core.VideoConnector.NewFrameEncodedReceived">
            <summary>
            当接收到目标用户的一帧视频数据（尚未解码）时，触发该事件。参数：OwnerID - data（编码数据）。
            </summary>        
        </member>
        <member name="E:OMCS.Passive.Core.VideoConnector.NewFrameReceived">
            <summary>
            当接收到来自Owner的新的一帧图像时，触发此事件。参数：OwnerID - data（不包含头信息，RGBA32数据）。
            </summary>      
        </member>
        <member name="E:OMCS.Passive.Core.VideoConnector.ImageRendered">
            <summary>
            当渲染完一帧图像时，触发此事件。参数：OwnerID - data（RGBA32数据）- 原图像的采集时间。
            </summary>    
        </member>
        <member name="P:OMCS.Passive.Core.VideoConnector.MultimediaDeviceType">
            <summary>
            目标多媒体设备的类型。
            </summary>      
        </member>
        <member name="P:OMCS.Passive.Core.VideoConnector.OwnerOutput">
            <summary>
            Owner是否输出了视频。【对应于Owner端的多媒体管理器的OutputVideo属性】
            </summary>       
        </member>
        <member name="P:OMCS.Passive.Core.VideoConnector.OwnerMachineType">
            <summary>
            Owner端的机器类型。初始值为Unknown，连接对方摄像头成功后，才会返回正确的机器类型。
            </summary>       
        </member>
        <member name="P:OMCS.Passive.Core.VideoConnector.VideoSize">
            <summary>
            视频的尺寸。
            </summary>       
        </member>
        <member name="P:OMCS.Passive.Core.VideoConnector.DisplayVideoParameters">
            <summary>
            是否在视频图像上面打印视频的相关信息（视频尺寸、编码质量、帧频）。默认值：false。
            </summary>        
        </member>
        <member name="P:OMCS.Passive.Core.VideoConnector.JustListen">
            <summary>
            是否启用仅监听模式。默认值：false。
            如果为true，表示只接收数据，而不解码和绘制图像。也即：会触发FrameEncodedReceived事件，但是不会触发NewFrameReceived事件。
            注意：必须在BeginConnect之前设置该属性。
            </summary>       
        </member>
        <member name="P:OMCS.Passive.Core.VideoConnector.PostBackDataWhenGpuRendering">
            <summary>
            当使用GPU解码渲染时，是否将解码后的数据从显存拷贝回内存。默认值：false。
            在不回传的情况下，NewFrameReceived事件不会触发，GetCurrentImage方法将始终返回null。       
            除非特别需要（比如调用GetCurrentImage方法获取实时图像），一般不建议开启此功能，此将折损性能。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.Core.VideoConnector.GetWindowHandle(System.Drawing.Rectangle@)">
            <summary>
            获取用于渲染视频的窗口的句柄。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.Core.VideoConnector.GetVideoQuality">
            <summary>
            获取当前视频的编码质量。0~31，数值越小越清晰。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.Core.VideoConnector.GetReceivedFrameCount">
            <summary>
            获取自连接成功后接收到的视频帧的总数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:OMCS.Passive.Core.VideoConnector.GetRTVideoParameters">
            <summary>
            获取实时的视频参数。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.Core.VideoConnector.GetChannelQuality">
            <summary>
            获取通道质量（从Owner到当前Guest的通道传输质量）。
            取值：0~10。值越大，表示通道质量越好。
            </summary>    
        </member>
        <member name="T:OMCS.Passive.IMultimediaConnector">
            <summary>
            多媒体连接器。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaConnector.OwnerID">
            <summary>
            设备主人的UserID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaConnector.Connected">
            <summary>
            与目标设备是否已连接？
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaConnector.IsDisposed">
            <summary>
            连接器是否已经被释放？
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaConnector.AutoReconnect">
            <summary>
            在因为自己掉线或Owner掉线而导致当前连接器断开时，是否开启自动重连的功能。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaConnector.MultimediaDeviceType">
            <summary>
            目标多媒体设备的类型。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IMultimediaConnector.SetMultimediaManager(OMCS.Passive.IMultimediaManager)">
            <summary>
            当一个进程中有多个IMultimediaManager实例时，调用该方法来指定当前连接器究竟要使用哪一个。该方法必须在BeginConnect方法之前调用。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.IMultimediaConnector.BeginConnect(System.String)">
            <summary>
            尝试连接目标多媒体设备。如果多媒体设备未被授权、或多媒体管理器未成功初始化、或当前连接器正在工作、或目标多媒体设备已经被连接、或上次的连接尝试还未结束，则将抛出相应的异常。
            </summary>       
            <param name="destUserID">目标用户的UserID</param>
        </member>
        <member name="M:OMCS.Passive.IMultimediaConnector.Disconnect">
            <summary>
            与目标用户的多媒体设备断开连接，并释放通道。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IMultimediaConnector.GetChannelQuality">
            <summary>
            获取通道质量（从Owner到当前Guest的通道传输质量）。
            取值：0~10。值越大，表示通道质量越好。
            </summary>        
        </member>
        <member name="E:OMCS.Passive.IMultimediaConnector.ConnectEnded">
            <summary>
            当连接目标多媒体设备的尝试（由BeginConnect发起）结束时，触发此事件。事件参数说明了连接的结果。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaConnector.Disconnected">
            <summary>
            当与目标多媒体设备的连接断开时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaConnector.AutoReconnectStart">
            <summary>
            在AutoReconnect为true的情况下，当开始自动重连目标多媒体设备时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaConnector.AutoReconnectSucceed">
            <summary>
            在AutoReconnect为true的情况下，当自动重连目标多媒体设备成功时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaConnector.AutoReconnectFailed">
            <summary>
            在AutoReconnect为true的情况下，当自动重连目标多媒体设备失败时，触发该事件。事件参数说明了连接失败的原因。
            </summary>
        </member>
        <member name="T:OMCS.Passive.IVideoConnector">
            <summary>
            视频连接器接口。（如摄像头连接器、桌面连接器）
            </summary>
        </member>
        <member name="E:OMCS.Passive.IVideoConnector.NewFrameReceived">
            <summary>
            当接收到来自Owner的新的一帧图像时，触发此事件。参数：OwnerID - data（不包含头信息，RGBA32数据）。
            </summary>       
        </member>
        <member name="P:OMCS.Passive.IVideoConnector.VideoSize">
            <summary>
            视频的尺寸。
            </summary>      
        </member>
        <member name="T:OMCS.Passive.IMultimediaManager">
            <summary>
            多媒体设备管理器基础接口。用于管理本地的所有多媒体设备。
            注意，在进程关闭之前，一定要调用Dispose方法释放资源，否则，进程可能无法正常关闭。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.ServerIPE">
            <summary>
            已连接的多媒体服务器的地址。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.SystemToken">
            <summary>
            系统标志。用于区分不同的基于OMCS开发的系统。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.CurrentUserID">
            <summary>
            当前登录用户的ID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.Available">
            <summary>
            当前多媒体管理器是否可用？（与OMCS服务器成功连接？并且设备管理器已经初始化完成？）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.Working">
            <summary>
            当前多媒体管理器是否正在工作？
            如果没有任何guest连接到本地多媒体设备，并且自己也没有连接到别人的设备，则返回false。否则返回true。
            </summary>      
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.AutoReconnect">
            <summary>
            掉线后，是否自动重连。（如果要set该属性，则必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.AccessController">
            <summary>
            设备访问控制器，用于控制哪些guest能访问自己的设备（麦克风、摄像头、桌面）。如果不需要控制，则设置为null。默认值：null。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.ChatGroupEntrance">
            <summary>
            语音视频聊天组入口。（只有多媒体管理器初始化成功之后，该属性才有效）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.AudioMessageController">
            <summary>
            语音消息控制器。在当前多媒体设备管理器初始化成功之前，该属性将返回null。
            注意：在正式使用语音消息控制器之前，先要调用IAudioMessageController的Initialize方法将其初始化。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.Advanced">
            <summary>
            OMCS高级控制选项。如果要修改AdvancedOptions的某些属性值，必须在调用Initialize方法之前设置才有效。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.AudioCapturerFactory">
            <summary>
            用于注入自定义的声音采集器工厂。（必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.MicrophoneDeviceIndex">
            <summary>
            要使用的麦克风的索引。如果设置为-1，则表示使用采集声卡得到的声音（win7及以上系统）。该属性的值可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.SpeakerIndex">
            <summary>
            要使用的扬声器的索引。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.OutputAudio">
            <summary>
            是否将话筒采集到的音频输出给Guest。（必须在初始化完成之后设置才有效，可动态修改。）
            如果为true，表示输出；否则，表示将采集到的音频数据丢弃，不发送给guest。默认值为true。（比如在视频会议中，只将发言人的OutputAudio设为true，以减少带宽和避免杂音）
            </summary>       
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.VolumeAmplifyFactor">
            <summary>
            播放音量的放大系数。取值范围1~10。默认值1(表示不放大)。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.Mute">
            <summary>
            是否静音（来自任何owner的声音都不播放）。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.IsSpeakerWorkWell">
            <summary>
            OMCS是否正在使用扬声器正常播放声音？
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.AudioInputMode">
            <summary>
            OMCS使用的音源输入模式。默认值为OnlyMicrophone。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.SoundcardVolumeCoef">
            <summary>
            当AudioInputMode为BothSoundcardAndMicrophone或BothExtendAndMicrophone时，用于控制声卡或自定义扩展音源的声音的放大系数。默认值为0.5。（一般声卡或自定义扩展音源播放的是作为背景音乐存在的）
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.AudioPlayed">
            <summary>
            刚刚播放的音频帧（10ms的PCM数据）。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.AudioCaptured">
            <summary>
            刚刚从麦克风或自定义声音采集器采集的音频帧（10ms的PCM数据）。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.MaxVoiceSpeakerNotified">
            <summary>
            如果连接到了多个人的麦克风，此事件用于定时通知最大声音的说话者（每秒钟触发5次）。参数：SpeakerID - 声音的分贝值。
            当没有人说话时，SpeakerID 为 null。
            注：只有当Advanced.AudioMixedStrategy的值不是AudioMixedStrategy.All时，才会触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.SpeakerVoiceNotified">
            <summary>
            如果连接到了一个或多个人的麦克风，此事件用于定时通知每个发言人的声音分贝值（每秒钟触发5次）。如果事件参数list中不包含某个人的ID，表示该人的分贝值为0。
            注：只有当Advanced.AudioMixedStrategy的值不是AudioMixedStrategy.All时，才会触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.VideoCapturerFactory">
            <summary>
            用于注入自定义的视频采集器工厂。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.VideoCodecFactory">
            <summary> 
            用于注入自定义的视频编解码器工厂。（必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.CameraDeviceIndex">
            <summary>
            要使用的摄像头的索引。默认值为0。如果不想使用摄像头，可以设置为-1。可以在运行时动态修改。        
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.CameraVideoSize">
            <summary>
            摄像头采集视频的大小。如果当前摄像头不支持指定的尺寸，则会自动匹配到最相近的分辨率。默认为640*480。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.MaxCameraFrameRate">
            <summary>
            摄像头的最大帧频。默认值：15。（必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.CameraEncodeQuality">
            <summary>
            摄像头视频的编码质量。取值0~31，默认值18。取值越小，越清晰。可以在运行时动态修改。           
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.AutoAdjustCameraEncodeQuality">
            <summary>
            [从Owner的角度]是否根据音频反馈以及视频丢帧情况自动调整视频编码质量。默认值为false。（以保证音频连贯性）。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.OutputVideo">
            <summary>
            是否将摄像头集到的视频输出给Guest。 默认值为true。（必须在初始化完成之后设置才有效，可动态修改。）
            如果为true，表示输出；否则，表示将采集到的视频数据丢弃，不发送给guest。默认值为true。
            </summary> 
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.CameraIndexChanged">
            <summary>
            当摄像头切换完成以后，触发此事件。参数为：切换之前摄像头索引 - 切换后的摄像头索引
            </summary>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.ChangeCameraDeviceAsyn(System.Int32)">
            <summary>
            切换摄像头【异步调用】。如果切换成功，将触发CameraIndexChanged事件。
            </summary>
            <param name="deviceIndex">要切换到的目标摄像头的索引</param>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.Window4DesktopCapture">
            <summary>
            在linux上采集屏幕，需要绑定一个Window实例。（必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.MaxDesktopFrameRate">
            <summary>
            桌面的最大帧频。默认值：15。（必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.OutputDesktop">
            <summary>
            是否将桌面图像输出给Guest。默认值为true。（必须在初始化完成之后设置才有效，可动态修改。）        
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.AllowControlDesktop">
            <summary>
            允许guest操作桌面。默认值为true。（必须在初始化完成之后设置才有效，可动态修改。）    
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.DesktopEncodeQuality">
            <summary>
            本地桌面的编码质量。取值0~31，默认值18。取值越小，越清晰。可以在运行时动态修改。
            </summary>       
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.DesktopIndex">
            <summary>
            要使用的桌面屏幕的索引。默认值：0。（如果DesktopIndex不为0，将忽略DesktopRegion属性的值。）
            特别注意：如果有多个屏幕，所有屏幕的放大率（Win桌面右键快捷菜单->屏幕分辨率->放大或缩小文本和其它项目）必须是一致的。        
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.DesktopRegion">
            <summary>
            要捕捉的屏幕的区域。
            如果set为null，则表示捕捉整个屏幕。可以在运行时动态修改。【桌面采集器会将长和宽修正为8的整数倍】
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.DesktopZoomCoef">
            <summary>
            输出桌面分辨率的缩小系数。默认值：1。取值范围：大于等于0.1且小于等于1。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.CoursewaresRootPath">
            <summary>
            用于缓存白板课件的根目录。默认值为运行目录下的"Coursewares"文件夹。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.ImageConverterFactory">
            <summary>
            用于注入自定义的图片转换器工厂。（必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.ChannelMode">
            <summary>
            [从Owner的角度]Owner发送帧数据给Guest时，通道的选择模型。默认值为P2PDisabled。必须在初始化前设置才有效。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.OmcsLogPath">
            <summary>
            记录OMCS日志的文件路径，默认值为在运行目录下的OmcsLog.txt文件。（运行目录下可能没有写权限）。
            设为null（且OmcsLogger也设为null），表示不记录任何日志（包括SecurityLogEnabled属性控制的安全日志）。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.OmcsLogger">
            <summary>
            如果被赋非null值，则OmcsLogPath属性将无效。（必须在调用Initialize方法之前设置才有效。）
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaManager.SecurityLogEnabled">
            <summary>
            是否记录安全日志（多媒体管理器的在线状态、每次连接他人设备的连接器状态）。默认值为true。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.ConnectionInterrupted">
            <summary>
            当与目标媒体服务器的连接断开时，触发此事件。事件参数：目标多媒体服务器的地址。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.ConnectionRebuildSucceed">
            <summary>
            当与目标媒体服务器重连成功时，触发此事件。事件参数：目标多媒体服务器的地址。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.DeviceConnected">
            <summary>
            当某个guest连接到当前设备时，触发此事件。参数为guestID - MultimediaDeviceType
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.DeviceDisconnected">
            <summary>
            当某个guest从当前设备断开时，触发此事件。参数为guestID - MultimediaDeviceType
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.DeviceErrorOccurred">
            <summary>
            当本地多媒体设备报错时，会触发该事件。参数为 MultimediaDeviceType - DeviceIndex - 错误描述
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.ConnectorDisconnected">
            <summary>
            当连接器与目标设备之间的连接断开时，触发此事件。参数为： 断开的连接器 - 断开的原因
            </summary>
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.Disposed">
            <summary>
            当多媒体管理器关闭并释放时，触发此事件。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.Initialize(System.String,System.String,System.String,System.Int32)">
            <summary>
            与多媒体服务器建立连接，并初始化本地多媒体管理器。
            如果与服务器连接失败，将抛出网络异常。       
            </summary>     
            <param name="userID">当前登录的用户ID。</param>
            <param name="password">当前登录的用户的密码。</param>
            <param name="serverIP">OMCS服务器IP</param>
            <param name="serverPort">OMCS服务器端口</param>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.Initialize(System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{OMCS.MultimediaDeviceType,OMCS.Communication.Basic.AgileIPE})">
            <summary>
            与多媒体服务器建立连接，并初始化本地多媒体管理器。
            如果与服务器连接失败，将抛出网络异常。       
            </summary>     
            <param name="userID">当前登录的用户ID。</param>
            <param name="password">当前登录的用户的密码。</param>
            <param name="serverIP">OMCS主服务器IP</param>
            <param name="serverPort">OMCS主服务器端口</param>
            <param name="deviceChannelDic">如果想分离某个设备的数据走专用的信道，则可以在此配置其设备类型及其对应的信道服务器地址。</param>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.DisconnectGuest(System.String,OMCS.MultimediaDeviceType,System.Boolean)">
            <summary>
            主动断开来访者guest到本地多媒体设备的连接。
            </summary>
            <param name="guestID">来访者的用户ID</param>
            <param name="deviceType">设备类型</param>
            <param name="notifyGuest">是否通知对方。如果通知对方，对方的连接器将触发Disconnected事件。</param>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.DisconnectGuest(System.Boolean)">
            <summary>
            主动断开所有来访者到本地多媒体设备的连接。
            </summary>       
            <param name="notifyGuest">是否通知对方。如果通知对方，对方的连接器将触发Disconnected事件。</param>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.GetGuests(OMCS.MultimediaDeviceType)">
            <summary>
            获取所有连接到当前多媒体设备的Guest列表。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.GetOwners(OMCS.MultimediaDeviceType)">
            <summary>
            查看已经连接了哪些用户的指定设备？
            </summary>       
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.DeviceIsWorking(OMCS.MultimediaDeviceType)">
            <summary>
            查询本地的某设备是否正在工作？
            </summary>        
            <param name="deviceType">设备类型</param>
            <returns>工作中？</returns>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.IsP2PChannelExist(System.String)">
            <summary>
            和目标用户之间是否打通了P2P通道？
            </summary>
            <param name="destUserID">目标用户的ID</param>       
        </member>
        <member name="E:OMCS.Passive.IMultimediaManager.CustomizedMessageReceived">
            <summary>
            当收到来自服务器或其它客户端的自定义消息时，触发此事件。参数：string srcUserID, int msgType, byte[] msg, string tag。
            如果srcUserID为null，表示消息来自服务器。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IMultimediaManager.SendCustomizedMessage(System.String,System.Int32,System.Byte[],System.String)">
            <summary>
            向服务器或其它在线用户发送自定义消息。
            </summary>
            <param name="targetUserID">消息接收者。如果为null，表示发送给服务器。</param>      
        </member>
        <member name="T:OMCS.Passive.ChannelMode">
            <summary>
            Owner发送帧数据给Guest时，通道的选择模型。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ChannelMode.P2PDisabled">
            <summary>
            不启用P2P。即所有消息都经过OMCS服务器中转。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ChannelMode.P2PChannelFirst">
            <summary>
            启用P2P。如果成功创建P2P通道，则使用P2P通道发送消息。
            </summary>
        </member>
        <member name="T:OMCS.Passive.FrameDisardedMode">
            <summary>
            智能丢帧模式。
            </summary>
        </member>
        <member name="F:OMCS.Passive.FrameDisardedMode.DontDiscard">
            <summary>
            不允许丢帧
            </summary>
        </member>
        <member name="F:OMCS.Passive.FrameDisardedMode.DiscardALittle">
            <summary>
            尽可能少的丢帧。
            </summary>
        </member>
        <member name="F:OMCS.Passive.FrameDisardedMode.DiscardStandard">
            <summary>
            中等程度的丢帧。（位于DiscardALittle与DiscardWhenNeed之间）
            </summary>
        </member>
        <member name="F:OMCS.Passive.FrameDisardedMode.DiscardWhenNeed">
            <summary>
            需要时，就丢帧。
            </summary>
        </member>
        <member name="T:OMCS.Passive.AudioInputMode">
            <summary>
            OMCS使用的音源模式。
            </summary>
        </member>
        <member name="F:OMCS.Passive.AudioInputMode.OnlyMicrophone">
            <summary>
            仅仅使用内置的麦克风输入。
            </summary>
        </member>
        <member name="F:OMCS.Passive.AudioInputMode.OnlyExtendAudioCapturer">
            <summary>
            仅仅使用自定义的扩展音源输入
            </summary>
        </member>
        <member name="F:OMCS.Passive.AudioInputMode.BothSoundcardAndMicrophone">
            <summary>
            将麦克风和声卡混音的结果作为输入
            </summary>
        </member>
        <member name="F:OMCS.Passive.AudioInputMode.BothExtendAndMicrophone">
            <summary>
            将麦克风和自定义音频混音的结果作为输入
            </summary>
        </member>
        <member name="T:OMCS.Passive.ConnectorDisconnectedType">
            <summary>
            连接器与目标多媒体设备之间连接断开的原因。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectorDisconnectedType.GuestOffline">
            <summary>
            Guest(连接器)掉线。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectorDisconnectedType.OwnerOffline">
            <summary>
            Owner(设备)掉线。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectorDisconnectedType.GuestActiveDisconnect">
            <summary>
            Guest(连接器)主动断开到设备的连接。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectorDisconnectedType.OwnerActiveDisconnect">
            <summary>
            Owner(设备)主动断开Guest(连接器)到设备连接。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectorDisconnectedType.TrialTimeout">
            <summary>
            试用超时。
            </summary>
        </member>
        <member name="T:OMCS.Passive.GuestsManager">
            <summary>
            多媒体设备使用该类来管理所有连上来的的Guest。【目前仅仅用于管理摄像头设备】
            </summary>
        </member>
        <member name="T:OMCS.Passive.IChannelCallbck">
            <summary>
            当通道接收到来自Guest的指令时，将回调该接口的方法进行处理。即，所有的方法都是被Owner角色处理。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IChannelCallbck.OnConnect(System.String,OMCS.MultimediaDeviceType)">
            <summary>
            Owner处理来自Guest的连接某设备的请求。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.IChannelCallbck.OnDisconnect(System.String,OMCS.MultimediaDeviceType)">
            <summary>
            Owner处理来自Guest的断开某设备的请求。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IChannelCallbck.OnCommand(System.String,OMCS.MultimediaDeviceType,System.Int32,System.Byte[])">
            <summary>
            Owner执行来自Guest的指令。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.IChannelCallbck.OnQuery(System.String,OMCS.MultimediaDeviceType,System.Int32,System.Byte[])">
            <summary>
            Owner处理来自Guest的查询。
            </summary>  
        </member>
        <member name="M:OMCS.Passive.IChannelCallbck.OnForceIFrameNotify(OMCS.MultimediaDeviceType)">
            <summary>
            处理来自服务端的强制输出I帧的通知。
            </summary>   
        </member>
        <member name="T:OMCS.Passive.ConnectResult">
            <summary>
            尝试连接目标设备的结果。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.Timeout">
            <summary>
            等待回复超时
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.TargetUserOffline">
            <summary>
            目标用户不在线
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.DeviceInvalid">
            <summary>
            对方设备不存在或出错
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.OwnerNotInitialized">
            <summary>
            对方设备管理器还未完成初始化
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.ExceptionOccured">
            <summary>
            本地出现异常
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.SelfOffline">
            <summary>
            在连接目标设备的过程中自己掉线
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.ChannelUnavailable">
            <summary>
            通道不可用（当前客户端与OMCS之间的TCP连接断开了，或者TCP连接尚未建立）
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.CantConnectRepeatly">
            <summary>
            不能重复连接同一用户的同一设备
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.DeviceUnauthorized">
            <summary>
            本次OMCS授权不包含目标设备类型
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.DeviceInUsing">
            <summary>
            对方的目标设备已经被其它程序占用
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.OwnerReject">
            <summary>
            对方拒绝了设备访问请求。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.TryMinutesLimit">
            <summary>
            试用版超过试用分钟数。
            </summary>
        </member>
        <member name="F:OMCS.Passive.ConnectResult.DontSupportMtoM">
            <summary>
            只支持一对一，不支持多对多。
            </summary>
        </member>
        <member name="T:OMCS.Passive.IMultimediaDevice">
            <summary>
            多媒体设备基础接口。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaDevice.MultimediaDeviceType">
            <summary>
            当前多媒体设备的类型。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaDevice.IsValid">
            <summary>
            设备是否运行正常。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IMultimediaDevice.DeviceInUsing">
            <summary>
            设备是否被其它进程独占。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IMultimediaDevice.AddGuest(System.String)">
            <summary>
            添加一个连接到当前设备的客人。
            </summary>
            <param name="guestID">客人的UserID</param>
        </member>
        <member name="M:OMCS.Passive.IMultimediaDevice.RemoveGuest(System.String)">
            <summary>
            从当前设备的客人列表中移除目标客人。
            </summary>
            <param name="guestID"></param>
        </member>
        <member name="M:OMCS.Passive.IMultimediaDevice.ContainsGuest(System.String)">
            <summary>
            当前设备的客人列表中是否包含目标客人。
            </summary>
            <param name="guestID">客人的UserID</param>       
        </member>
        <member name="M:OMCS.Passive.IMultimediaDevice.GetGuests">
            <summary>
            获取所有连接到当前设备的客人的UserID列表。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.IMultimediaDevice.OnCommand(System.String,System.Int32,System.Byte[])">
            <summary>
            处理来自Guest的命令。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.IMultimediaDevice.OnQuery(System.String,System.Int32,System.Byte[])">
            <summary>
            处理来自Guest的查询。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.IMultimediaDevice.OnForceIFrameNotify">
            <summary>
            处理来自服务端的其中强制输出I帧的通知。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.IMultimediaDevice.OnSelfOffline">
            <summary>
            当自己掉线时。
            </summary>
        </member>
        <member name="T:OMCS.Passive.MultimediaChannel">
            <summary>
            与OMCS服务器之间的通道。在访问某个用户的多媒体设备之前，先必须连接上目标用户的主OMCS服务器，并创建多媒体通道。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaChannel.VideoFrameReceived">
            <summary>
            当接收到来自Owner的视频帧数据时，guest端触发此事件。OwnerID - MultimediaDeviceType - frameIndex - videoQuality- frame 。 注意：frameIndex=0 表示为I帧，如果为P帧或B帧，则顺序递增。当又遇到I帧时，frameIndex又重置为0。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaChannel.AudioFrameReceived">
            <summary>
            当接收到来自Owner的音频帧数据时，guest端触发此事件。OwnerID -  frame 。 
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaChannel.DisconnectNotified">
            <summary>
            当Owner主动断开guest的连接时，guest端触发此事件。 
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaChannel.NotifyReceived">
            <summary>
            当接收到来自Owner的通知时，guest端触发此事件。 OwnerID - MultimediaDeviceType - NotifyType - NotifyContent
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaChannel.AudioMessageReceived">
            <summary>
            当收到语音消息时，触发此事件。 
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaChannel.CurrentUserID">
            <summary>
            当前登录用户的ID。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultimediaChannel.CloseConnection(System.Boolean)">
            <summary>
            主动关闭与服务器的连接,将引发自动重连。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultimediaChannel.GetOwners(OMCS.MultimediaDeviceType)">
            <summary>
            已经连接了哪些Owner的多媒体设备。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultimediaChannel.Connect(System.String,OMCS.MultimediaDeviceType)">
            <summary>
            Guest -> Owner
            </summary> 
        </member>
        <member name="M:OMCS.Passive.MultimediaChannel.Disconnect(System.String,OMCS.MultimediaDeviceType)">
            <summary>
            Guest -> Owner
            </summary> 
        </member>
        <member name="M:OMCS.Passive.MultimediaChannel.SendCommand(System.String,OMCS.MultimediaDeviceType,System.Int32,System.Byte[])">
            <summary>
            Guest -> Owner
            </summary>      
        </member>
        <member name="M:OMCS.Passive.MultimediaChannel.Query(System.String,OMCS.MultimediaDeviceType,System.Int32,System.Byte[])">
            <summary>
            Guest -> Owner
            </summary> 
        </member>
        <member name="M:OMCS.Passive.MultimediaChannel.Notify(System.String,OMCS.MultimediaDeviceType,System.Int32,System.Byte[],System.Boolean)">
            <summary>
            Owner ->  Guest
            </summary>       
        </member>
        <member name="T:OMCS.Passive.MultimediaManager">
            <summary>
            多媒体管理器。用于管理本地的所有多媒体设备。
            (1)多媒体设备管理器初始化时与某个OMCS服务器连接，则该OMCS服务器称为当前用户的主OMCS服务器。
            (2)可以建立更多的指向不同OMCS服务器的通道，且可以将指定的设备绑定到某个通道。
            (3)按需分配：在客户端需要多媒体通信时，才连接OMCS服务器。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaManager.ConnectionInterrupted">
            <summary>
            当与媒体服务器的连接断开时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaManager.ConnectionRebuildSucceed">
            <summary>
            当与媒体服务器重连成功时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaManager.DeviceConnected">
            <summary>
            当Guest连接到当前设备时，触发此事件。参数为guestID - MultimediaDeviceType
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaManager.DeviceDisconnected">
            <summary>
            当Guest从当前设备断开时，触发此事件。参数为guestID - MultimediaDeviceType
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaManager.AudioPlayed">
            <summary>
            刚刚播放的音频帧。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaManager.AudioCaptured">
            <summary>
            刚刚从话筒采集的音频帧。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultimediaManager.DeviceErrorOccurred">
            <summary>
            当本地多媒体设备报错时，会触发该事件。参数为 MultimediaDeviceType - 错误描述
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.OmcsLogPath">
            <summary>
            记录OMCS日志的文件路径，默认值为在运行目录下的OmcsLog.txt文件。设为null，表示不记录任何日志。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.OmcsLogger">
            <summary>
            如果被赋非null值，则LogFilePath属性将无效。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.CurrentUserID">
            <summary>
            当前登录用户的ID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.CameraDeviceIndex">
            <summary>
            要使用的摄像头的索引。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.MicrophoneDeviceIndex">
            <summary>
            要使用的麦克风的索引。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.SpeakerIndex">
            <summary>
            要使用的扬声器的索引。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.AutoAdjustCameraEncodeQuality">
            <summary>
             [从Owner的角度]是否根据音频反馈以及视频丢帧情况自动调整视频编码质量。默认值为true。（以保证音频连贯性）。可以在运行时动态修改。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.CameraVideoSize">
            <summary>
            摄像头采集视频的大小。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.Window4DesktopCapture">
            <summary>
            在linux上采集屏幕，需要绑定一个Window实例。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.SecurityLogEnabled">
            <summary>
            是否记录用户安全日志。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultimediaManager.AutoReconnect">
            <summary>
            掉线后，是否自动重连。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultimediaManager.Initialize(System.String,System.String,System.String,System.Int32)">
            <summary>
            与多媒体服务器建立连接，并初始化本地多媒体管理器。
            </summary>      
        </member>
        <member name="M:OMCS.Passive.MultimediaManager.Initialize(System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{OMCS.MultimediaDeviceType,OMCS.Communication.Basic.AgileIPE})">
            <summary>
            与多媒体服务器建立连接，并初始化本地多媒体管理器。
            </summary>      
        </member>
        <member name="M:OMCS.Passive.MultimediaManager.GetGuests(OMCS.MultimediaDeviceType)">
            <summary>
            获取所有连接到当前多媒体设备的用户列表。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.MultimediaManager.DisconnectGuest(System.String,OMCS.MultimediaDeviceType,System.Boolean)">
            <summary>
            主动断开来访者到本地多媒体设备的连接。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.MultimediaManager.CloseConnection(System.Boolean)">
            <summary>
            主动关闭与服务器的连接,将引发自动重连。
            </summary>
        </member>
        <member name="T:OMCS.Passive.MultimediaManagerFactory">
            <summary>
            用于创建或获取MultimediaManager单例。
            保证在整个Appdomain中只有一个IMultimediaManager实例。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultimediaManagerFactory.GetSingleton">
            <summary>
            获取多媒体管理器的单件实例。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.MultimediaManagerFactory.GetSingleton(System.Boolean)">
            <summary>
            获取多媒体管理器的单件实例。
            </summary>
            <param name="createNew">是否创建一个新的单件实例。如果原先的Singleton已经被释放，则传入true。</param>             
        </member>
        <member name="M:OMCS.Passive.MultimediaManagerFactory.CreateOmcsService4Web">
            <summary>
            创建OMCS视频服务Web插件。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.MFactory.GetSingleton">
            <summary>
            获取多媒体管理器的单件实例。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.MFactory.GetSingleton(System.Boolean)">
            <summary>
            获取多媒体管理器的单件实例。
            </summary>
            <param name="createNew">是否创建一个新的单件实例。如果原先的Singleton已经被释放，则传入true。</param>             
        </member>
        <member name="M:OMCS.Passive.MFactory.CreateOmcsService4Web">
            <summary>
            创建OMCS视频服务Web插件。
            </summary>       
        </member>
        <member name="M:OMCS.Passive.RgbaHelper.CopyPartOfBitmap(System.Boolean,System.Drawing.Size,System.Byte[],System.Drawing.Rectangle,System.Byte[])">
            <summary>
            拷贝位图的某个区域的RGBA数据。
            </summary>
            <param name="copyFromBigToSmall">true表示从big的指定区域smallRect拷贝数据到small中；false表示将small数据拷贝到big的指定区域smallRect</param>
            <param name="sizeBig">大图的尺寸</param>
            <param name="big">大图的RGBA数据</param>
            <param name="smallRect">小图在大图中的区域</param>
            <param name="small">小图的RGBA数据</param>
        </member>
        <member name="T:OMCS.Passive.IAccessController">
            <summary>
            设备访问控制器接口。用于控制哪些guest能访问自己的设备（麦克风、摄像头、桌面）
            </summary>
        </member>
        <member name="M:OMCS.Passive.IAccessController.AllowAccess(System.String,OMCS.MultimediaDeviceType)">
            <summary>
            是否允许guest访问自己的设备。
            </summary>
            <param name="guestID">guest的UserID</param>
            <param name="type">设备的类型</param>
            <returns>true表示允许访问；false表示拒绝访问</returns>
        </member>
        <member name="T:OMCS.Passive.DefaultAccessController">
            <summary>
            默认的设备访问控制器。默认允许任何guest对所有设备的访问。
            </summary>
        </member>
        <member name="T:OMCS.Passive.MultiChat.IChatGroup">
            <summary>
            封装一个聊天组的信息。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultiChat.IChatGroup.SomeoneJoin">
            <summary>
            当有新成员加入聊天组时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultiChat.IChatGroup.SomeoneExit">
            <summary>
            当某成员掉线或离开聊天组时，触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.IChatGroup.GroupID">
            <summary>
            聊天组的ID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.IChatGroup.ChatType">
            <summary>
            聊天组的类型。如果为语音聊天，则DynamicCameraConnector为null。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.IChatGroup.MyChatUnit">
            <summary>
            自己的Unit对象（当第一次调用时创建）。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultiChat.IChatGroup.GetMember(System.String)">
            <summary>
            获取组成员的信息。
            </summary> 
        </member>
        <member name="M:OMCS.Passive.MultiChat.IChatGroup.GetOtherMembers">
            <summary>
            获取组内除自己之外的其它成员的信息。
            </summary>
        </member>
        <member name="T:OMCS.Passive.MultiChat.ChatGroup">
            <summary>
            封装一个聊天组的信息。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultiChat.ChatGroup.SomeoneJoin">
            <summary>
            当有新成员加入聊天组时，将触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.MultiChat.ChatGroup.SomeoneExit">
            <summary>
            当某成员掉线或离开聊天组时，触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.ChatGroup.GroupID">
            <summary>
            聊天组的ID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.ChatGroup.ChatType">
            <summary>
            聊天组的类型。如果为语音聊天，则DynamicCameraConnector为null。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultiChat.ChatGroup.GetOtherMembers">
            <summary>
            获取组内除自己之外的其它成员的信息。
            </summary>      
        </member>
        <member name="M:OMCS.Passive.MultiChat.ChatGroup.GetMember(System.String)">
            <summary>
            获取组成员的信息。
            </summary> 
        </member>
        <member name="M:OMCS.Passive.MultiChat.ChatGroup.DisconnectAllConnectors">
            <summary>
            断开属于当前组的所有连接器。
            </summary>
        </member>
        <member name="T:OMCS.Passive.MultiChat.IChatGroupEntrance">
            <summary>
            多人语音/视频聊天组入口。
            注意：如果客户端掉线，将自动从所有聊天组中退出。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultiChat.IChatGroupEntrance.Join(OMCS.Contracts.ChatType,System.String)">
            <summary>
            加入某个聊天组。如果目标组不存在，将自动创建目标组。
            </summary>
            <param name="chatType">聊天组的类型。</param>
            <param name="chatGroupID">目标组ID。</param>      
        </member>
        <member name="M:OMCS.Passive.MultiChat.IChatGroupEntrance.Exit(OMCS.Contracts.ChatType,System.String)">
            <summary>
            离开聊天组。如果掉线，也会自动从聊天组中退出。
            </summary>
            <param name="chatType">聊天组的类型。</param>
            <param name="chatGroupID">目标组ID。</param>     
        </member>
        <member name="T:OMCS.Passive.MultiChat.IChatUnit">
            <summary>
            用于封装聊天组一个成员的相关信息的单元。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.IChatUnit.MemberID">
            <summary>
            对应的组成员的ID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.IChatUnit.Valid">
            <summary>
            是否有效？如果对应的组成员退出组或者掉线，则将返回false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.IChatUnit.DynamicCameraConnector">
            <summary>
            摄像头连接器。（可将其连接到对应组成员的摄像头）。如果为语音聊天，则DynamicCameraConnector为null。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.IChatUnit.MicrophoneConnector">
            <summary>
            麦克风连接器。（可将其连接到对应组成员的麦克风）
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultiChat.IChatUnit.Close">
            <summary>
            断开连接器的连接。
            </summary>
        </member>
        <member name="T:OMCS.Passive.MultiChat.ChatUnit">
            <summary>
            用于封装聊天组一个成员的相关信息的单元。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.ChatUnit.Valid">
            <summary>
            如果组成员（MemberID）退出组或者掉线，则将返回false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.ChatUnit.MicrophoneConnector">
            <summary>
            麦克风连接器，连接到组成员（MemberID）的麦克风。
            </summary>
        </member>
        <member name="P:OMCS.Passive.MultiChat.ChatUnit.DynamicCameraConnector">
            <summary>
            摄像头连接器，连接到组成员（MemberID）的摄像头。如果为语音聊天，则DynamicCameraConnector为null。
            </summary>
        </member>
        <member name="M:OMCS.Passive.MultiChat.ChatUnit.Close">
            <summary>
            断开连接器的连接。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopInfoContract.AllowControl">
            <summary>
            允许guest操作桌面。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.KeyboardCommandContract.Down">
            <summary>
            按下还是Up
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.KeyboardCommandContract.KeyValue">
            <summary>
            按键的值。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.MousePressCommandContract.Down">
            <summary>
            按下还是Up
            </summary>
        </member>
        <member name="T:OMCS.Passive.RemoteDesktop.DesktopCapturer">
            <summary>
            用于连续捕捉当前桌面为视频帧。
            </summary>  
        </member>
        <member name="F:OMCS.Passive.RemoteDesktop.DesktopCapturer.originCapturerRect">
            <summary>
            用户指定的要捕捉的区域。
            </summary>
        </member>
        <member name="E:OMCS.Passive.RemoteDesktop.DesktopCapturer.VideoSizeChanged">
            <summary>
            当检测到屏幕分辨率发生变化时，触发此事件。 参数为新的分辨率。
            </summary>
        </member>
        <member name="E:OMCS.Passive.RemoteDesktop.DesktopCapturer.VideoCaptured">
            <summary>
            采集到的原始视频帧。没有xvid，没有丢帧。
            </summary>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DesktopCapturer.ChangeCaptureRegion(System.Int32,System.Nullable{System.Drawing.Rectangle},System.Single)">
            <summary>
            当屏幕分辨率发生变化，或修改捕捉区域时，调用该方法。（可在捕捉的过程中动态调用）
            如果捕捉区域超出了屏幕范围，将会自动修正。
            </summary>       
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopCapturer.CaptureRegion">
            <summary>
            实际捕捉的区域（修正之后的）。
            </summary>
        </member>
        <member name="T:OMCS.Passive.RemoteDesktop.DesktopDevice">
            <summary>
            用于表示当前桌面的设备。   
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopDevice.DeviceInUsing">
            <summary>
            设备是否被其它进程独占。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopDevice.OutputDesktop">
            <summary>
            是否将桌面图像输出给guest。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopDevice.EncodeQuality">
            <summary>
            采集的视频的编码质量。取值0~31。取值越小，越清晰。可以在运行时动态修改。
            </summary>       
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DesktopDevice.AllowControl">
            <summary>
            允许guest操作桌面。
            </summary>
        </member>
        <member name="T:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector">
            <summary>
            动态远程桌面连接器。可以动态修改绘制的面板。
            </summary>
        </member>
        <member name="E:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.OwnerAllowControlChanged">
            <summary>
            当Owner允许guest操作桌面的授权改变时，触发此事件。【对应于Owner端的多媒体管理器的AllowControl属性的修改】
            </summary>       
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.OwnerAllowControl">
            <summary>
            Owner是否允许操作桌面。【对应于Owner端的多媒体管理器的AllowControl属性】。注意其与WatchingOnly的区别：只有OwnerAllowControl为true的前提下，WatchingOnly的属性设置才有效果。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.WatchingOnly">
            <summary>
            是否仅仅允许查看远程桌面，但是不能进行操作。 默认值为true。注意：该属性用于guest端控制，前提是Owner端的AllowControl必须为true，才有效；否则，即使WatchingOnly为false，仍然不能操作桌面。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.ShowMouseCursor">
            <summary>
            是否在远程桌面上显示Owner的鼠标光标。默认值为false。
            注意：前提是WatchingOnly为true时，该属性设置才有效。
            </summary>        
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.MouseCursorLocation">
            <summary>
            远程鼠标光标的最新位置。
            </summary>
        </member>
        <member name="F:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.panelRenderRect">
            <summary>
            要在目标控件表面的哪个区域来显示整张桌面图像（当为VideoDrawMode.Origin时，该区域可能会超出控件的表面）。
            </summary>
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.VideoDrawMode">
            <summary>
            视频图像绘制模式。
            </summary>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.ComputeRectangle(OMCS.Passive.VideoDrawMode)">
            <summary>
            根据不同的VideoDrawMode，计算出要在目标控件表面的哪个区域来显示整张桌面图像（当为VideoDrawMode.Origin时，得到的区域可能会超出控件的表面）。
            </summary>    
        </member>
        <member name="P:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.KeyboardHookUsed">
            <summary>
            是否开启键盘拦截？（如果开启，当操作远程桌面时，将关闭输入法、并拦截Windows、ALT+TAB等键。）
            </summary>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.SetViewer(OMCS.Passive.RemoteDesktop.IDesktopPanel)">
            <summary>
            设置用于显示桌面的控件。必须要在UI线程中调用该方法。
            注意：请启用控件的双缓冲绘制，以避免闪烁。调用SetStyle(ControlStyles.OptimizedDoubleBuffer, true);
            </summary>
            <param name="newPanel">要绘制视频的控件。可以为null。</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.ChangeOwnerOutput(System.Boolean)">
            <summary>
            修改Owner的桌面的输出控制。如果Owner方修改成功，将会触发本地的OwnerOutputChanged事件。
            </summary>
            <param name="output">是否输出桌面</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.ChangeOwnerDesktopEncodeQuality(System.Int32)">
            <summary>
            修改Owner的桌面编码质量。
            </summary>
            <param name="quality">编码质量。取值0~31，值越小，越清晰。</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.SendMouseOperation(System.Drawing.Point,System.Boolean,System.Boolean)">
            <summary>
            修改Owner的桌面输出的缩放系数。如果Owner方修改成功，将会触发本地的OwnerDesktopSizeChanged事件。
            </summary>
            <param name="coef">桌面的缩放系数。取值范围：0.1~1。</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.CtrlGoToMainDesktop">
            <summary>
            控制安卓手机回到主桌面。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.CtrlGoBack">
            <summary>
            控制安卓手机回到上一级。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.CtrlGoToRunningAppList">
            <summary>
            控制安卓手机调出运行的APP列表。
            </summary>        
        </member>
        <member name="F:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.DynamicDesktopConnector.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:OMCS.Passive.RemoteDesktop.IDesktopPanel">
            <summary>
            OMCS桌面连接器用到的渲染控件的基础接口。
            </summary>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.IDesktopPanel.DrawImage(System.Byte[],System.Drawing.Size,System.Drawing.Rectangle,OMCS.Passive.VideoParameters,System.Nullable{System.Drawing.Point})">
            <summary>
            绘制桌面图像。
            </summary>
            <param name="argb">RGBA32数据</param>       
            <param name="imgSize">图像尺寸</param>
            <param name="panelRenderRect">要在目标控件表面的哪个区域来显示整张桌面图像</param>
            <param name="para">视频参数信息</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.IDesktopPanel.SetImageRect(System.Drawing.Rectangle)">
            <summary>
            设置绘制图像的矩形区域。
            </summary>
            <param name="imageRect">绘制图像的矩形区域</param>
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.IDesktopPanel.GetWindowHandle">
            <summary>
            获取控件句柄，GPU渲染使用。
            </summary>    
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.IDesktopPanel.Translate4GpuRender(System.Drawing.Rectangle)">
            <summary>
            将以当前控件原点为基点的矩形，转换为以当前控件所在窗体的原点为基点。【仅仅WPF使用】
            </summary>               
        </member>
        <member name="M:OMCS.Passive.RemoteDesktop.IDesktopPanel.ClearImage">
            <summary>
            清屏（框架将连接器断开时调用）
            </summary>
        </member>
        <member name="T:OMCS.Passive.ShortMessages.AudioMessagePlayer">
            <summary>
            短信播放器。
            </summary>
        </member>
        <member name="T:OMCS.Passive.ShortMessages.IAudioMessageController">
            <summary>
            语音消息控制器。
            （1）可以采集当前用户麦克风的数据，以构造一个语音消息，并将其发送给目标用户。。   
            （2）当收到来自其它用户的语音消息时，将触发AudioMessageReceived事件。 
            注意：当IAudioMessageController完成初始化后，将会持续占用麦克风，直到将IAudioMessageController释放。
            </summary>
        </member>
        <member name="E:OMCS.Passive.ShortMessages.IAudioMessageController.AudioMessageReceived">
            <summary>
            当接收到目标用户的语音消息时，触发该事件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.IAudioMessageController.Initialized">
            <summary>
            是否已经初始化？
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.IAudioMessageController.IsCapturing">
            <summary>
            是否正在采集？
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.IAudioMessageController.AudioMessagePlayer">
            <summary>
            语音消息播放器。（在IAudioMessageController初始化后，才可使用。）
            </summary>
        </member>
        <member name="M:OMCS.Passive.ShortMessages.IAudioMessageController.Initialize">
            <summary>
            初始化语音消息控制器。
            如果不再使用短信组件，则请调用Dispose方法，以释放对设备的占用。
            调用Dispose方法释放后，可以在需要的时候重新调用Initialize，再次进行初始化。
            </summary>
        </member>
        <member name="M:OMCS.Passive.ShortMessages.IAudioMessageController.StartCapture">
            <summary>
            开始采集。
            </summary>
        </member>
        <member name="M:OMCS.Passive.ShortMessages.IAudioMessageController.StopCapture">
            <summary>
            结束采集。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.ShortMessages.IAudioMessageController.Send(OMCS.Passive.ShortMessages.AudioMessage,System.String)">
            <summary>
            发送语音消息。发送完毕，该调用才会返回，如果不想阻塞当前线程，可考虑异步调用本方法。
            注：实现群内语音消息时，可将 destUserID 设为null，AudioMessage.Tag设置为群ID。在服务端监听IMultimediaServer的AudioMessagePostFailed事件。
            </summary>
            <param name="audioMessage">语音消息</param>
            <param name="destUserID">接收者ID</param>
        </member>
        <member name="T:OMCS.Passive.ShortMessages.AudioMessage">
            <summary>
            语音短信。
            </summary>
        </member>
        <member name="E:OMCS.Passive.ShortMessages.AudioMessage.PlayStarted">
            <summary>
            当开始播放一个语音消息时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.ShortMessages.AudioMessage.PlayFinished">
            <summary>
            当一个语音消息播放完毕时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.ShortMessages.AudioMessage.PlayInterrupted">
            <summary>
            当一个语音消息播放被中断时，触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.AudioMessage.ID">
            <summary>
            语音消息编号。
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.AudioMessage.CreatorID">
            <summary>
            短信创建者的ID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.AudioMessage.SpanInMSecs">
            <summary>
            时长。单位：毫秒。
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.AudioMessage.AudioList">
            <summary>
            语音数据列表。
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.AudioMessage.Tag">
            <summary>
            携带的数据。（比如可用于在群内语音消息）
            </summary>
        </member>
        <member name="M:OMCS.Passive.ShortMessages.AudioMessage.GetUniqueID">
            <summary>
            获取唯一编号。CreatorID - ID
            </summary>
            <returns></returns>
        </member>
        <member name="T:OMCS.Passive.ShortMessages.IAudioMessagePlayer">
            <summary>
            语音消息播放器。
            </summary>
        </member>
        <member name="P:OMCS.Passive.ShortMessages.IAudioMessagePlayer.IsPlaying">
            <summary>
            是否正在播放？
            </summary>
        </member>
        <member name="M:OMCS.Passive.ShortMessages.IAudioMessagePlayer.Play(OMCS.Passive.ShortMessages.AudioMessage)">
            <summary>
            播放指定的语音消息。如果正在播放其它语音消息，则先停止，然后再播放目标语音消息。
            </summary>
        </member>
        <member name="M:OMCS.Passive.ShortMessages.IAudioMessagePlayer.Stop">
            <summary>
            中断正在播放的语音消息。
            </summary>
        </member>
        <member name="E:OMCS.Passive.ShortMessages.IAudioMessagePlayer.PlayStarted">
            <summary>
            当开始播放一个语音消息时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.ShortMessages.IAudioMessagePlayer.PlayFinished">
            <summary>
            当一个语音消息播放完毕时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.ShortMessages.IAudioMessagePlayer.PlayInterrupted">
            <summary>
            当一个语音消息播放被中断时，触发此事件。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Video.CameraDevice">
            <summary>
            摄像头设备。（可根据Guest的观看窗口大小自动调整分辨率）
            1280x720，摄像头采集大概消耗4%的CPU，H264编码消耗5%的CPU。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Video.CameraDevice.FrameDiscarded">
            <summary>
            在过去的10秒内丢失的帧数。参数：total - discarded
            </summary>
        </member>
        <member name="E:OMCS.Passive.Video.CameraDevice.VideoSizeChanged">
            <summary>
            当摄像头的采集分辨率发生变化时，触发此事件。 参数为新的分辨率。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Video.CameraDevice.AutoAdjustQualityCommand">
            <summary>
            当收到来自guest的控制是否自动调整视频质量的命令时，触发此事件。参数：guestID - autoAdjust
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.CameraDevice.DeviceInUsing">
            <summary>
            设备是否被其它进程独占。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.CameraDevice.EncodeQuality">
            <summary>
            采集的视频的编码质量。取值0~31。取值越小，越清晰。可以在运行时动态修改。
            </summary>       
        </member>
        <member name="T:OMCS.Passive.Video.DynamicCameraConnector">
            <summary>
            动态摄像头连接器。可以动态修改绘制的面板。
            </summary>
        </member>
        <member name="P:OMCS.Passive.Video.DynamicCameraConnector.VideoDrawMode">
            <summary>
            视频图像绘制模式。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.SetViewer(OMCS.Passive.Video.ICameraPanel)">
            <summary>
            设置用于显示桌面的控件。必须要在UI线程中调用该方法。
            注意：请启用控件的双缓冲绘制，以避免闪烁。调用SetStyle(ControlStyles.OptimizedDoubleBuffer, true);
            </summary>
            <param name="newPanel">要绘制视频的控件。可以为null。</param>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.ChangeOwnerCameraVideoSize(System.Drawing.Size)">
            <summary>
            修改Owner的摄像头的采集分辨率。如果其摄像头不支持该分辨率，则将切换到最接近指定值的分辨率上。如果Owner方修改成功，将会触发本地的OwnerCameraVideoSizeChanged事件。
            </summary>
            <param name="newSize">新的采集分辨率</param>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.ChangeOwnerCameraVideoSize(System.Int32)">
            <summary>
            修改Owner的摄像头的采集分辨率。如果其摄像头不支持该分辨率，则将切换到最接近指定值的分辨率上。如果Owner方修改成功，将会触发本地的OwnerCameraVideoSizeChanged事件。
            </summary>
            <param name="widthAddHeight">新的采集分辨率的宽和高之和。比如分辨率为（320*240），则该参数为320+240=560</param>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.ChangeOwnerAutoAdjustCameraEncodeQuality(System.Boolean)">
            <summary>
            修改Owner的是否自动调节视频编码质量的控制。
            </summary>
            <param name="autoAdjust">是否自动调节</param>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.ChangeOwnerOutput(System.Boolean)">
            <summary>
            修改Owner的摄像头的输出控制。如果Owner方修改成功，将会触发本地的OwnerOutputChanged事件。
            </summary>
            <param name="output">是否输出视频</param>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.ChangeOwnerCameraEncodeQuality(System.Int32)">
            <summary>
            修改Owner的视频编码质量。
            </summary>
            <param name="quality">编码质量。取值0~31，值越小，越清晰。</param>
        </member>
        <member name="F:OMCS.Passive.Video.DynamicCameraConnector.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:OMCS.Passive.Video.DynamicCameraConnector.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:OMCS.Passive.Video.ICameraPanel">
            <summary>
            用于DynamicCameraConnector显示对方摄像头图像的渲染控件基础接口。
            </summary>
        </member>
        <member name="E:OMCS.Passive.Video.ICameraPanel.PanelSizeChanged">
            <summary>
            控件尺寸发生变化时，触发此事件。
            </summary>
        </member>
        <member name="M:OMCS.Passive.Video.ICameraPanel.DrawImage(System.Byte[],System.Drawing.Size,System.Drawing.Rectangle,OMCS.Passive.VideoParameters)">
            <summary>
            绘制摄像头视频图像。
            </summary>
            <param name="rgba">RGBA32数据</param>       
        </member>
        <member name="M:OMCS.Passive.Video.ICameraPanel.GetWindowHandle">
            <summary>
            获取控件句柄，GPU渲染使用。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.Video.ICameraPanel.Translate4GpuRender(System.Drawing.Rectangle)">
            <summary>
            将以当前控件原点为基点的矩形，转换为以当前控件所在窗体的原点为基点。【仅仅WPF使用】
            </summary>               
        </member>
        <member name="M:OMCS.Passive.Video.ICameraPanel.ClearImage">
            <summary>
            清屏（框架将连接器断开时调用）
            </summary>
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.CoursewareController">
            <summary>
            课件管理控件。用于管理课件的上传、下载、转换等。
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.CoursewareController.coursewareImageManager">
            <summary>
            课件图片管理器，支持延迟加载。coursewareImageManager为null，表示没有使用课件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.CoursewareController.AutoAdaptiveCoursewareImageSize">
            <summary>
            加载课件时，是否将白板边界自动设定为课件图的大小。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.CoursewareController.CoursewareUsed">
            <summary>
            是否正在使用课件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.CoursewareController.CurrentPageIndex">
            <summary>
            获取或设置当前页。
            </summary>
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.ICoursewareImageManager">
            <summary>
            课件图片管理器，支持LazyLoad
            </summary>
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector">
            <summary>
            电子白板连接器核心实现。支持掉线自动重连。   
            </summary>
        </member>
        <member name="E:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.DrawCustomizedBackground">
            <summary>
            在绘制白板内容之前触发此事件。可在此事件中绘制自定义的白板背景。
            </summary>
        </member>
        <member name="E:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.ConnectEnded">
            <summary>
            当连接目标多媒体设备的尝试（由BeginConnect发起）结束时，触发此事件。事件参数说明了连接的结果。
            </summary>
        </member>
        <member name="E:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.Disconnected">
            <summary>
            当与目标多媒体设备的连接断开时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.AutoReconnectStart">
            <summary>
            在AutoReconnect为true的情况下，当开始自动重连目标多媒体设备时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.AutoReconnectSucceed">
            <summary>
            在AutoReconnect为true的情况下，当自动重连目标多媒体设备成功时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.AutoReconnectFailed">
            <summary>
            在AutoReconnect为true的情况下，当自动重连目标多媒体设备失败时，触发该事件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.OwnerID">
            <summary>
            设备主人的UserID。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.MultimediaDeviceType">
            <summary>
            目标多媒体设备的类型。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.Connected">
            <summary>
            与目标设备是否已连接？
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.RecordRTParameters">
            <summary>
            是否实时统计接收到的来自Owner端的帧数据。默认值：false。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.BeginConnect(System.String)">
            <summary>
            尝试连接目标多媒体设备。如果多媒体设备未被授权、或多媒体管理器未成功初始化、或当前连接器正在工作、或目标多媒体设备已经被连接、或上次的连接尝试还未结束，则将抛出相应的异常。
            </summary>       
            <param name="destUserID">目标用户的UserID</param>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.Disconnect">
            <summary>
            与目标用户的多媒体设备断开连接，并释放通道。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.GetChannelQuality">
            <summary>
            获取通道质量（从Owner到当前Guest的通道传输质量）。
            取值：0~10。值越大，表示通道质量越好。
            </summary>    
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.Timeout4LoadContent">
            <summary>
            初始加载白板内容时的超时，单位：秒。默认值为120秒。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.PageSize">
            <summary>
            白板页的尺寸。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.BackImageOfPage">
            <summary>
            白板页的背景图片（在不使用课件功能的前提下才有效）。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.AutoReconnect">
            <summary>
            在因为自己掉线或Owner掉线而导致当前连接器断开时，是否开启自动重连的功能。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.CoursewareImageLocation">
            <summary>
            课件图片的左上角位置。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.LazyLoadCoursewareImage">
            <summary>
            是否启用延迟加载课件图片。默认：true。
            </summary>    
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.GetPageCount">
            <summary>
            获取当前白板的总页数。
            </summary>   
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.DynamicWhiteBoardConnector.SetBackVideoConnector(OMCS.Passive.IVideoConnector)">
            <summary>
            设置视频连接器以启用视频标绘/标注功能。
            将使用IVideoConnector的视频图像作为白板的背景图像。
            </summary>
            <param name="connector">视频连接器（如摄像头连接器、桌面连接器）</param>
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.IImageConverter">
            <summary>
            将文档转换为图片的基础接口。
            </summary>
        </member>
        <member name="E:OMCS.Passive.WhiteBoard.IImageConverter.ProgressChanged">
            <summary>
            当成功转换一页时，触发此事件。参数：已经完成转换的页数（doneCount） - 总页数（totalCount）
            </summary>
        </member>
        <member name="E:OMCS.Passive.WhiteBoard.IImageConverter.ConvertSucceed">
            <summary>
            转换完成时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.WhiteBoard.IImageConverter.ConvertFailed">
            <summary>
            转换失败时，触发此事件。事件参数：失败的原因（FailCause）
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IImageConverter.ConvertToImage(System.String,System.String)">
            <summary>
            开始转换。
            </summary>
            <param name="originFilePath">要被转换的文档的全路径。</param>
            <param name="imageOutputDirPath">用于保存转换后的图片的目录的全路径</param>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IImageConverter.Cancel">
            <summary>
            取消转换。    
            </summary>
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.IImageConverterFactory">
            <summary>
            图片转换器工厂。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IImageConverterFactory.CreateImageConverter(System.String)">
            <summary>
            根据文档的扩展名，创建对应的图片转换器。
            </summary>
            <param name="extendName">全小写的扩展名。如“.docx”，“.pdf”等</param>
            <returns>如果不支持对应的文件类型，则返回null。</returns>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IImageConverterFactory.GetSupportedFileTypes">
            <summary>
            获取所有支持的文档类型。返回的集合中的元素为全小写的扩展名。如“.docx”，“.pdf”等。
            </summary>       
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.ImageConvertManager">
            <summary>
            用于管理课件转换过程，并将其与UI显示关联起来。
            </summary>
        </member>
        <member name="E:OMCS.Passive.WhiteBoard.ImageConvertManager.ConvertCompleted">
            <summary>
            事件参数：是否成功？
            </summary>
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.IWhiteBoardConnector">
            <summary>
            白板连接器接口。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.WatchingOnly">
            <summary>
            仅仅允许查看白板，但是不能进行操作。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.ContextMenuEnglish">
            <summary>
            右键菜单文字是否使用英语。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.CoursewareEnabled">
            <summary>
            是否需要开启课件功能（前提当IsManager为true时该属性才有效。）？
            如果不开启课件功能，则只有新建页/删除页 的功能。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.DisplayPageBorder">
            <summary>
            是否显示白板页的边框。默认值：false。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.FocusOnNewViewByOther">
            <summary>
            如果他人新建了一个view，则自动选中该view，并调节滚动条使其在可视区域内。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.IsManager">
            <summary>
            是否为管理员身份。管理员的特殊权限：上传课件、打开课件、删除课件、翻页等。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.PageSize">
            <summary>
            白板页的尺寸。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.AutoAdaptiveCoursewareImageSize">
            <summary>
            加载课件时，是否将白板页的尺寸自动设定为课件图的尺寸。默认值：true。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.Timeout4LoadContent">
            <summary>
            初始加载白板内容时的超时，单位：秒。默认值为120秒。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.ToolBarVisiable">
            <summary>
            工具栏是否可见。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.CoursewareImageLocation">
            <summary>
            课件图片的左上角位置。
            </summary>        
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.BackgroundColor">
            <summary>
            白板背景色。默认：White。
            </summary>        
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.LazyLoadCoursewareImage">
            <summary>
            是否启用延迟加载课件图片。默认：true。
            </summary>    
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.GetPageCount">
            <summary>
            获取当前白板的总页数。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.NewPage">
            <summary>
            新建一页。当白板处于连接状态，且IsManager为true时，调用才生效。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.RemovePage">
            <summary>
            删除当前页。当白板处于连接状态，且IsManager为true时，调用才生效。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SetCurrentViewType(OMCS.Paint.ViewType)">
            <summary>
            [使用自定义工具栏时]设置当前要绘制的View的类型。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SetFilledColor(System.Drawing.Color)">
            <summary>
            [使用自定义工具栏时]设置填充颜色。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SetLineColor(System.Drawing.Color)">
            <summary>
            [使用自定义工具栏时]设置线条颜色。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SetLineDash(System.Boolean)">
            <summary>
            [使用自定义工具栏时]设置线条是否为虚线。
            </summary>   
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SetLineWidth(System.Int32)">
            <summary>
            [使用自定义工具栏时]设置线条的宽度。
            </summary> 
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SetTextBoxMinSize(System.Drawing.Size)">
            <summary>
            [使用自定义工具栏时]设置文本输入框的最小尺寸。
            </summary> 
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SetTextFormat(OMCS.Paint.TextFont)">
            <summary>
            [使用自定义工具栏时]设置文本格式（字体、颜色）。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SortH">
            <summary>
            [使用自定义工具栏时]水平对齐。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.SortV">
            <summary>
            [使用自定义工具栏时]垂直对齐。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.ChangeLaserPointerState">
            <summary>
            [使用自定义工具栏时]开启或关闭激光笔。一般每点击一次工具栏上的“激光笔”按钮就调用该方法一次。第一次调用，将开启；再次调用，将关闭；然后再调用，由开启；如此循环。
            返回值表示调用后激光笔的状态是否为开启？
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.RemoveView(System.Drawing.Point)">
            <summary>
            删除指定位置的View。
            </summary>
            <param name="location">目标位置</param>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.ClearCurrentPage">
            <summary>
            清空当前页的内容。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.InsertImageFromFile">
            <summary>
            [使用自定义工具栏时]插入图片（选择图片文件）。
            </summary>
            <returns>图片元素在白板中的ViewID</returns>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.RotateImage(System.String,OMCS.RotateAngle)">
            <summary>
            旋转图片。
            </summary>
            <param name="imageViewID">白板中图片元素的ViewID</param>
            <param name="angle">旋转的角度</param>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.RemoveSelectedViews">
            <summary>
            删除被选中的图片元素。
            </summary>       
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.ZoomFactor">
            <summary>
            白板页面的缩放比例。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.UploadCourseware">
            <summary>
            上传课件（将弹出选择课件的窗口）。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.UploadCourseware(System.String)">
            <summary>
            上传课件。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.GetCoursewares">
            <summary>
            获取已存在的课件。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.OpenCourseware(System.String)">
            <summary>
            打开目标课件。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.OpenCoursewareFromUrl(System.String)">
            <summary>
            从网络加载课件并打开。
            </summary>        
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.CloseCurrentCourseware">
            <summary>
            关闭当前课件。
            </summary>
        </member>
        <member name="M:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.DeleteCourseware(System.String)">
            <summary>
            删除课件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.WhiteBoard.IWhiteBoardConnector.CoursewareOpened">
            <summary>
            当课件打开完成时，触发此事件。参数：string - 课件文件的名称。
            </summary>
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor">
            <summary>
            白板页面的缩放系数。
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor.Percent25">
            <summary>
            0.25
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor.Percent50">
            <summary>
            0.5
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor.Percent75">
            <summary>
            0.75
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor.Percent100">
            <summary>
            1.0
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor.Percent125">
            <summary>
            1.25
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor.Percent150">
            <summary>
            1.5
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.WhiteBoardZoomFactor.Percent200">
            <summary>
            2.0
            </summary>
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.CoursewareProcessState">
            <summary>
            当前加载课件的进度。
            </summary>
        </member>
        <member name="F:OMCS.Passive.WhiteBoard.CoursewareProcessState.Damaged">
            <summary>
            损坏
            </summary>
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.IWhiteBoardPanel">
            <summary>
            电子白板连接器的UI控件接口。
            </summary>
        </member>
        <member name="T:OMCS.Passive.WhiteBoard.WhiteBoardDevice">
            <summary>
            电子白板设备。
            </summary>
        </member>
        <member name="P:OMCS.Passive.WhiteBoard.WhiteBoardDevice.DeviceInUsing">
            <summary>
            设备是否被其它进程独占。
            </summary>
        </member>
        <member name="T:OMCS.Passive.IPanel">
            <summary>
            跨平台的控件基础接口。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IPanel.MouseDown">
            <summary>
            鼠标按下时触发此事件。参数：leftButton - location
            </summary>
        </member>
        <member name="E:OMCS.Passive.IPanel.MouseUp">
            <summary>
            鼠标松开时触发此事件。参数：leftButton - location
            </summary>
        </member>
        <member name="E:OMCS.Passive.IPanel.MouseMove">
            <summary>
            鼠标移动时，触发此事件。参数：location
            </summary>
        </member>
        <member name="E:OMCS.Passive.IPanel.PreviewKeyDown">
            <summary>
            键盘按下时触发此事件。参数：KeyValue - ctrl
            </summary>
        </member>
        <member name="E:OMCS.Passive.IPanel.KeyDown">
            <summary>
            键盘按下时触发此事件。参数：KeyValue（winform、wpf、cpf-win、cpf-linux 的键值不一样，要以Winform键值为准）。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IPanel.KeyUp">
            <summary>
            键盘松开时触发此事件。参数：KeyValue（winform、wpf、cpf-win、cpf-linux 的键值不一样，要以Winform键值为准）。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IPanel.MouseWheel">
            <summary>
            鼠标滚轮滚动时，触发此事件。参数：滚轮滚动的增量。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IPanel.Scroll">
            <summary>
            滚动条滚动时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Passive.IPanel.SizeChanged">
            <summary>
            控件尺寸发生变化时，触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IPanel.AutoScrollPosition">
            <summary>
            当前滚动条的位置。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IPanel.Size">
            <summary>
            控件的尺寸。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IPanel.AutoScroll">
            <summary>
            是否启动滚动条。
            </summary>
        </member>
        <member name="P:OMCS.Passive.IPanel.AutoScrollMinSize">
            <summary>
            开始滚动的最小尺寸。
            </summary>
        </member>
        <member name="M:OMCS.Passive.IPanel.ActionOnUI(ESBasic.CbGeneric)">
            <summary>
            在UI线程上执行目标方法。
            </summary>        
        </member>
        <member name="T:OMCS.Passive.IScalePanel`1">
            <summary>
            控制其内部的TPanelCore的尺寸和位置，以实现VideoDrawMode。
            </summary> 
        </member>
        <member name="T:OMCS.Passive.IScreenCapture">
            <summary>
            跨平台屏幕采集接口。
            </summary>
        </member>
        <member name="T:OMCS.Passive.ISysRender">
            <summary>
            操作系统底层渲染接口。需要在目标平台上实现该接口。
            </summary>
        </member>
        <member name="M:OMCS.Linux.LinuxCamera.GetCameraCapacity(System.Int32,OMCS.Linux.CameraCapacity[],System.Int32@)">
            <summary>
            2023.05.31 修复bug：
            （1）ary长度要足够大，之前是100，结果有的罗技的摄像头超过了200个。
            （2）ary 参数要加[In,Out]，否则，C++那边给数组中对象的字段赋值了不会传出来，在C#这边拿到的元素仍然是默认值。
            （3）最后一个count参数也要加[In, Out]，否则，在C++那边拿到的这个值是0。
            </summary>       
        </member>
        <member name="T:OMCS.Linux.AlsaDeviceInfo">
            <summary>
            alsa设备信息
            </summary>
        </member>
        <member name="F:OMCS.Linux.AlsaDeviceInfo.deviceID">
            <summary>
            设备ID 
            </summary>
        </member>
        <member name="F:OMCS.Linux.AlsaDeviceInfo.name">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="F:OMCS.Linux.AlsaDeviceInfo.index">
            <summary>
            设备索引
            </summary>
        </member>
        <member name="F:OMCS.Linux.AlsaDeviceInfo.defaultDevice">
            <summary>
            默认设备
            </summary>
        </member>
        <member name="T:OMCS.Linux.CameraDeviceInfo">
            <summary>
            摄像头设备信息
            </summary>
        </member>
        <member name="F:OMCS.Linux.CameraDeviceInfo.name">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="F:OMCS.Linux.CameraDeviceInfo.index">
            <summary>
            设备索引
            </summary>
        </member>
        <member name="F:OMCS.Linux.CameraDeviceInfo.vendor_id">
            <summary>
            厂商ID
            </summary>
        </member>
        <member name="F:OMCS.Linux.CameraDeviceInfo.product_id">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="T:OMCS.Linux.AlsaDeviceType">
            <summary>
            alsa设备类型
            </summary>
        </member>
        <member name="F:OMCS.Linux.AlsaDeviceType.player">
            <summary>
            扬声器
            </summary>
        </member>
        <member name="F:OMCS.Linux.AlsaDeviceType.capture">
            <summary>
            麦克风
            </summary>
        </member>
        <member name="T:OMCS.Linux.SoundDevice">
            <summary>
            音频设备。用于获取本地所有音频设备信息。
            </summary>
        </member>
        <member name="M:OMCS.Linux.SoundDevice.GetMicrophoneCount">
            <summary>
            获取麦克风的数量。
            </summary>
            <returns></returns>
        </member>
        <member name="M:OMCS.Linux.SoundDevice.GetFirstAvailableMicrophoneIndex">
            <summary>
            获取第一个可用的麦克风的index。
            </summary>        
        </member>
        <member name="M:OMCS.Linux.SoundDevice.GetMicrophones">
            <summary>
            枚举当前计算机上的所有麦克风设备。
            </summary>        
        </member>
        <member name="M:OMCS.Linux.SoundDevice.GetSpeakerCount">
            <summary>
            获取扬声器的数量。
            </summary>
            <returns></returns>
        </member>
        <member name="M:OMCS.Linux.SoundDevice.GetFirstAvailableSpeakerIndex">
            <summary>
            获取第一个可用的扬声器的index。
            </summary>        
        </member>
        <member name="M:OMCS.Linux.SoundDevice.GetSpeakers">
            <summary>
            枚举当前计算机上的所有扬声器设备。
            </summary>        
        </member>
        <member name="M:OMCS.Linux.SoundDevice.IsSoundCardInstalled">
            <summary>
            当前计算机是否安装了声卡。
            </summary>        
        </member>
        <member name="T:OMCS.Linux.CameraConnector">
            <summary>
            【Linux】摄像头连接器。
            </summary>
        </member>
        <member name="P:OMCS.Linux.CameraConnector.Connected">
            <summary>
            与目标设备是否已连接？
            </summary>       
        </member>
        <member name="E:OMCS.Linux.CameraConnector.ConnectEnded">
            <summary>
            当连接目标用户的摄像头的尝试（由BeginConnect发起）结束时，触发此事件。事件参数说明了连接的结果：OwnerID - ConnectResult。
            </summary>
        </member>
        <member name="E:OMCS.Linux.CameraConnector.Disconnected">
            <summary>
            当与目标设备的连接断开时，触发该事件。
            </summary>      
        </member>
        <member name="P:OMCS.Linux.CameraConnector.Core">
            <summary>
            摄像头连接器内部的核心DynamicCameraConnector组件。可通过该Core属性使用摄像头连接器的更多功能。
            </summary>
        </member>
        <member name="P:OMCS.Linux.CameraConnector.VideoPanel">
            <summary>
            摄像头连接器内部的渲染控件。
            </summary>
        </member>
        <member name="M:OMCS.Linux.CameraConnector.BeginConnect(System.String)">
            <summary>
            尝试连接目标用户的摄像头。
            </summary>       
            <param name="destUserID">目标用户的UserID</param>
        </member>
        <member name="M:OMCS.Linux.CameraConnector.Disconnect">
            <summary>
            与目标用户的摄像头断开连接，并释放通道。
            </summary>
        </member>
        <member name="T:OMCS.Linux.Pen">
            <summary>
            自定义画笔
            </summary>
        </member>
        <member name="M:OMCS.Linux.CpfRenderHelper.Convert4Rectangle(System.Drawing.Rectangle)">
            <summary>
            将System.Drawing.Rectangle转化为 CPF.Drawing.Rect
            </summary>
            <param name="rectangle"></param>
            <returns></returns>
        </member>
        <member name="M:OMCS.Linux.CpfRenderHelper.FindAssetsBitmap(System.String)">
            <summary>
            获取Resources资源目录下的图片
            </summary>
            <param name="filePath">Resources下的文件路径（不需填写Resources之前的 如 32.ioc 或者 Head/0.png）</param>
            <returns></returns>
        </member>
        <member name="M:OMCS.Linux.CpfRenderHelper.Convert4System_Point(System.Drawing.Point)">
            <summary>
            将System.Drawing.Point转化为 CPF.Drawing.Point
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:OMCS.Linux.CpfRenderHelper.Convert4CPF_Point(CPF.Drawing.Point)">
            <summary>
            将CPF.Drawing.Point转化为 System.Drawing.Point 
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:OMCS.Linux.DesktopConnector">
            <summary>
            【Linux】桌面连接器。
            </summary>
        </member>
        <member name="P:OMCS.Linux.DesktopConnector.Connected">
            <summary>
            与目标设备是否已连接？
            </summary>       
        </member>
        <member name="E:OMCS.Linux.DesktopConnector.ConnectEnded">
            <summary>
            当连接目标用户的桌面的尝试（由BeginConnect发起）结束时，触发此事件。事件参数说明了连接的结果：OwnerID - ConnectResult。
            </summary>
        </member>
        <member name="E:OMCS.Linux.DesktopConnector.Disconnected">
            <summary>
            当与目标设备的连接断开时，触发该事件。
            </summary>      
        </member>
        <member name="P:OMCS.Linux.DesktopConnector.Core">
            <summary>
            桌面连接器内部的核心DynamicDesktopConnector1组件。可通过该Core属性使用桌面连接器的更多功能。
            </summary>
        </member>
        <member name="P:OMCS.Linux.DesktopConnector.VideoPanel">
            <summary>
            桌面连接器内部的渲染控件。
            </summary>
        </member>
        <member name="M:OMCS.Linux.DesktopConnector.BeginConnect(System.String)">
            <summary>
            尝试连接目标用户的桌面。
            </summary>       
            <param name="destUserID">目标用户的UserID</param>
        </member>
        <member name="M:OMCS.Linux.DesktopConnector.Disconnect">
            <summary>
            与目标用户的桌面断开连接，并释放通道。
            </summary>
        </member>
        <member name="M:OMCS.Linux.DesktopInnerPanel.ClearImage">
            <summary>
            清除控件最后渲染的视频图像。
            </summary>
        </member>
        <member name="M:OMCS.Linux.Extension.Save(CPF.Drawing.Image,System.String)">
            <summary>
            保存为位图
            </summary>
            <param name="image"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:OMCS.Linux.Extension.SetCenterInParent(CPF.Controls.Window,CPF.Controls.Window)">
            <summary>
            设置窗体在owner窗体的正中， 一般用于在owner窗体上 弹出新的窗体
            </summary>
            <param name="window"></param>
            <param name="owner"></param>
        </member>
        <member name="M:OMCS.Linux.FileHelper.OpenFileDialog(CPF.Controls.Window,System.String,System.String[])">
            <summary>
            打开选择文件对话框 (指定扩展名)
            </summary>
            <param name="parent">父窗体</param>
            <param name="title">对话框标题</param>
            <param name="extensions">后缀名</param>       
            <returns></returns>
        </member>
        <member name="M:OMCS.Linux.KeyInterop.VirtualKeyFromKey(CPF.Input.Keys)">
            <summary>
            将CPF的Key转化为WinForm的key值
            </summary>        
        </member>
        <member name="E:OMCS.Linux.PaintHelper.SpecialKeyboardEvent">
            <summary>
            拦截的特殊键经过处理后输出。
            </summary>
        </member>
        <member name="M:OMCS.Linux.PaintHelper.GetZoomSize(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取图片的指定最大长度的尺寸
            </summary>       
        </member>
        <member name="M:OMCS.Linux.PaintHelper.Zoom(CPF.Drawing.Image,System.Drawing.Size)">
            <summary>
            缩放图片。
            </summary>       
        </member>
        <member name="M:OMCS.Linux.BitmapHelper.GetBitmapMaxSize(CPF.Drawing.Image,System.Int32)">
            <summary>
            指定最大长度，获取图片对尺寸 （超过最大长度，以最长边的长度 为最大长度值）
            </summary>
            <param name="bitmap"></param>
            <param name="maxSize"></param>
            <returns></returns>
        </member>
        <member name="M:OMCS.Linux.IKeyMouseMocker.MouseClickEvent(System.Boolean,System.Boolean,System.Drawing.Point)">
            <summary>
            鼠标单击。
            </summary>
            <param name="leftButton">true为左键，false为右键</param>
            <param name="isDown">true为按下，false为弹起</param>
            <param name="location">位置</param>
        </member>
        <member name="M:OMCS.Linux.IKeyMouseMocker.MouseMoveEvent(System.Drawing.Point)">
            <summary>
            鼠标移动
            </summary>
            <param name="location">位置</param>
        </member>
        <member name="M:OMCS.Linux.IKeyMouseMocker.MouseWheelEvent(System.Int32)">
            <summary>
            鼠标滚轮滚动
            </summary>
            <param name="delt">滚动距离</param>
        </member>
        <member name="M:OMCS.Linux.IKeyMouseMocker.KeybdEvent(System.Byte,System.Boolean)">
            <summary>
            键盘输入。
            </summary>
            <param name="keyVale">键的值</param>
            <param name="down">true为按下，false为弹起</param>
        </member>
        <member name="T:OMCS.Linux.UIThreadPoster">
            <summary>
            用于将CbGeneric从后台线程转发到UI线程执行。
            </summary>
        </member>
        <member name="T:OMCS.Linux.UIThreadPoster`1">
            <summary>
            用于将CbGeneric从后台线程转发到UI线程执行。
            </summary>
        </member>
        <member name="T:OMCS.Linux.UIThreadPoster`2">
            <summary>
            用于将CbGeneric从后台线程转发到UI线程执行。
            </summary>
        </member>
        <member name="T:OMCS.Linux.UIThreadPoster`3">
            <summary>
            用于将CbGeneric从后台线程转发到UI线程执行。
            </summary>
        </member>
        <member name="T:OMCS.Linux.UIThreadPoster`4">
            <summary>
            用于将CbGeneric从后台线程转发到UI线程执行。
            </summary>
        </member>
        <member name="F:OMCS.Linux.WhiteBoard.CoursewarePanel.coursewareImageManager">
            <summary>
            课件图片管理器，支持延迟加载。coursewareImageManager为null，表示没有使用课件。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoard.CoursewarePanel.AutoAdaptiveCoursewareImageSize">
            <summary>
            加载课件时，是否将白板边界自动设定为课件图的大小。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoard.CoursewarePanel.IsManager">
            <summary>
            是否为管理员身份。管理员的特殊权限：翻页、上传课件。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoard.CoursewarePanel.CoursewareEnabled">
            <summary>
            前提是IsManager为true时该属性才有效。是否需要开启课件功能？如果不开启，则只有新建页/删除页 的功能。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoard.CoursewarePanel.CoursewareUsed">
            <summary>
            是否正在使用课件。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoard.CoursewarePanel.ReloadCoursewareSubMenuItem">
            <summary>
            重新加载 “打开课件”和“删除课件”的子菜单
            </summary> 
        </member>
        <member name="M:OMCS.Linux.WhiteBoard.CoursewarePanel.OnCoursewareUsed(System.Boolean)">
            <summary>
            是否使用了课件？ 控制：
            （1）设置“重下当前课件”的菜单是否可见。
            （2）“新建页”、“删除页”的菜单是否可见。
            </summary>     
        </member>
        <member name="M:OMCS.Linux.WhiteBoard.CoursewarePanel.SetCoursewareItemChecked(System.String)">
            <summary>
            “打开课件”下勾选正确的课件子菜单。
            </summary>      
        </member>
        <member name="P:OMCS.Linux.WhiteBoard.CoursewarePanel.CurrentPageIndex">
            <summary>
            获取或设置当前页。
            </summary>
        </member>
        <member name="T:OMCS.Linux.WhiteBoard.CoursewareImageManager">
            <summary>
            课件图片管理器，支持LazyLoad
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoard.PageControlPanel.ReadOnly">
            <summary>
            是否为管理员身份。管理员的特殊权限：翻页、上传课件。
            </summary>
        </member>
        <member name="T:OMCS.Linux.WhiteBoard.IPageController">
            <summary>
            分页控制器接口。将被PageControlPanel使用。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoard.IPageController.PageCount">
            <summary>
            总页数。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoard.IPageController.CurrentPageIndex">
            <summary>
            当前页的索引。
            </summary>
        </member>
        <member name="E:OMCS.Linux.WhiteBoard.IPageController.PageCountChanged">
            <summary>
            当总页数发生变化时，触发此事件。
            </summary>
        </member>
        <member name="E:OMCS.Linux.WhiteBoard.IPageController.CurrentPageIndexChanged">
            <summary>
            当当前页发生变化时，触发此事件。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoard.ViewEditor.ToolBarVisiable">
            <summary>
            工具栏是否可见。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoard.ViewEditor.PagedMenuVisiable">
            <summary>
            是否可以看到“新建一页”、“删除本页”的菜单。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoard.ViewEditor.toolStripMenuItemZoom_MouseDown(System.Object,CPF.Input.MouseButtonEventArgs)">
            <summary>
            显示比例
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.ParentWindow">
            <summary>
            当前控件所在的宿主Window，必须在调用BeginConnect方法之前设置。
            </summary>
        </member>
        <member name="E:OMCS.Linux.WhiteBoardConnector.ConnectEnded">
            <summary>
            当连接目标多媒体设备的尝试（由BeginConnect发起）结束时，触发此事件。事件参数说明了连接的结果。
            </summary>
        </member>
        <member name="E:OMCS.Linux.WhiteBoardConnector.Disconnected">
            <summary>
            当与目标多媒体设备的连接断开时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Linux.WhiteBoardConnector.AutoReconnectStart">
            <summary>
            在AutoReconnect为true的情况下，当开始自动重连目标多媒体设备时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Linux.WhiteBoardConnector.AutoReconnectSucceed">
            <summary>
            在AutoReconnect为true的情况下，当自动重连目标多媒体设备成功时，触发该事件。
            </summary>
        </member>
        <member name="E:OMCS.Linux.WhiteBoardConnector.AutoReconnectFailed">
            <summary>
            在AutoReconnect为true的情况下，当自动重连目标多媒体设备失败时，触发该事件。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.OwnerID">
            <summary>
            设备主人的UserID。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.MultimediaDeviceType">
            <summary>
            目标多媒体设备的类型。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.Connected">
            <summary>
            与目标设备是否已连接？
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.RecordRTParameters">
            <summary>
            是否实时统计接收到的来自Owner端的帧数据。默认值：false。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.BeginConnect(System.String)">
            <summary>
            尝试连接目标多媒体设备。如果多媒体设备未被授权、或多媒体管理器未成功初始化、或当前连接器正在工作、或目标多媒体设备已经被连接、或上次的连接尝试还未结束，则将抛出相应的异常。
            </summary>       
            <param name="destUserID">目标用户的UserID</param>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.Disconnect">
            <summary>
            与目标用户的多媒体设备断开连接，并释放通道。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.GetChannelQuality">
            <summary>
            获取通道质量（从Owner到当前Guest的通道传输质量）。
            取值：0~10。值越大，表示通道质量越好。
            </summary>    
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.ToolBarVisiable">
            <summary>
            工具栏是否可见。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.Timeout4LoadContent">
            <summary>
            初始加载白板内容时的超时，单位：秒。默认值为120秒。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.AutoReconnect">
            <summary>
            在因为自己掉线或Owner掉线而导致当前连接器断开时，是否开启自动重连的功能。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.WatchingOnly">
            <summary>
            仅仅允许查看白板，但是不能进行操作。默认值为false。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.IsManager">
            <summary>
            是否为管理员身份。管理员的特殊权限：上传课件、打开课件、删除课件、翻页等。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.CoursewareEnabled">
            <summary>
            是否需要开启课件功能（前提当IsManager为true时该属性才有效。）？
            如果不开启课件功能，则只有新建页/删除页 的功能。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.BackImageOfPage">
            <summary>
            白板页的背景图片（在不使用课件功能的前提下才有效）。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.PageSize">
            <summary>
            白板页的尺寸。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.AutoAdaptiveCoursewareImageSize">
            <summary>
            加载课件时，是否将白板页的尺寸自动设定为课件图的尺寸。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.ContextMenuEnglish">
            <summary>
            右键菜单文字是否使用英语。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.FocusOnNewViewByOther">
            <summary>
            如果他人新建了一个view，则自动选中该view，并调节滚动条使其在可视区域内。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.DisplayPageBorder">
            <summary>
            是否显示白板页的边框。默认值：false。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.ZoomFactor">
            <summary>
            白板页面的缩放比例。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.BackgroundColor">
            <summary>
            白板背景色。默认：White。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.CoursewareImageLocation">
            <summary>
            课件图片的左上角位置。
            </summary>
        </member>
        <member name="P:OMCS.Linux.WhiteBoardConnector.LazyLoadCoursewareImage">
            <summary>
            是否启用延迟加载课件图片。默认：true。
            </summary>    
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.GetCurrentImage">
            <summary>
            将当前白板页保存为一张位图。 
            </summary>      
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.GetPageImage(System.Int32)">
            <summary>
            将指定的白板页保存为一张位图。 
            </summary>      
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.RemoveView(System.Drawing.Point)">
            <summary>
            删除指定位置的View。
            </summary>
            <param name="location">目标位置</param>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.RemovePage">
            <summary>
            删除当前页。当白板处于连接状态，且IsManager为true时，调用才生效。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.ClearCurrentPage">
            <summary>
            清空当前页的内容。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.NewPage">
            <summary>
            新建一页。当白板处于连接状态，且IsManager为true时，调用才生效。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.SortH">
            <summary>
            水平对齐。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.SortV">
            <summary>
            垂直对齐。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.ChangeLaserPointerState">
            <summary>
            开启或关闭激光笔。一般每点击一次工具栏上的“激光笔”按钮就调用该方法一次。第一次调用，将开启；再次调用，将关闭；然后再调用，由开启；如此循环。
            返回值表示调用后激光笔的状态是否为开启？
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.InsertImage(CPF.Drawing.Image)">
            <summary>
            在白板的左上角位置插入图片。
            </summary>
            <param name="img">被插入的图片</param>
            <returns>图片元素在白板中的ViewID</returns>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.InsertImage(CPF.Drawing.Image,System.Drawing.Point)">
            <summary>
            在指定位置插入图片。
            </summary>
            <param name="img">被插入的图片</param>
            <param name="location">插入的位置</param>
            <returns>图片元素在白板中的ViewID</returns>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.InsertImageFromFile">
            <summary>
            插入图片（选择图片文件）。
            </summary>
            <returns>图片元素在白板中的ViewID</returns>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.RotateImage(System.String,OMCS.RotateAngle)">
            <summary>
            旋转图片。
            </summary>
            <param name="imageViewID">白板中图片元素的ViewID</param>
            <param name="angle">旋转的角度</param>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.RemoveSelectedViews">
            <summary>
            删除被选中的图片元素。
            </summary>       
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.SetCurrentViewType(OMCS.Paint.ViewType)">
            <summary>
            设置当前要绘制的View的类型。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.SetLineDash(System.Boolean)">
            <summary>
            设置线条是否为虚线。
            </summary>   
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.SetLineWidth(System.Int32)">
            <summary>
            设置线条的宽度。
            </summary> 
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.SetTextBoxMinSize(System.Drawing.Size)">
            <summary>
            设置文本输入框的最小尺寸。
            </summary>        
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.SetFilledColor(System.Drawing.Color)">
            <summary>
            设置填充颜色。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.SetLineColor(System.Drawing.Color)">
            <summary>
            设置线条颜色。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.SetTextFormat(CPF.Drawing.Font,System.Drawing.Color)">
            <summary>
            设置文本格式（字体、颜色）。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.UploadCourseware">
            <summary>
            上传课件。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.UploadCourseware(System.String)">
            <summary>
            上传课件。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.GetCoursewares">
            <summary>
            获取已存在的课件。
            </summary>        
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.OpenCourseware(System.String)">
            <summary>
            打开目标课件。
            </summary>        
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.OpenCoursewareFromUrl(System.String)">
            <summary>
            从网络加载课件并打开。
            </summary>        
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.CloseCurrentCourseware">
            <summary>
            关闭当前课件。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.DeleteCourseware(System.String)">
            <summary>
            删除课件。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.GetPageCount">
            <summary>
            获取当前白板的总页数。
            </summary>   
        </member>
        <member name="E:OMCS.Linux.WhiteBoardConnector.CoursewareOpened">
            <summary>
            当课件打开完成时，触发此事件。参数：string - 课件文件的名称。
            </summary>
        </member>
        <member name="M:OMCS.Linux.WhiteBoardConnector.SetBackVideoConnector(OMCS.Passive.IVideoConnector)">
            <summary>
            设置视频连接器以启用视频标绘/标注功能。
            将使用IVideoConnector的视频图像作为白板的背景图像。
            </summary>
            <param name="connector">视频连接器（如摄像头连接器、桌面连接器）</param>
        </member>
        <member name="T:OMCS.Windows.Camera">
            <summary>
            摄像头。用于获取本地所有摄像头的设备信息。
            </summary>
        </member>
        <member name="M:OMCS.Windows.Camera.GetCameras">
            <summary>
            枚举当前计算机上的所有摄像头设备。
            </summary>        
        </member>
        <member name="M:OMCS.Windows.Camera.GetCameraCapability(System.Int32)">
            <summary>
            获取目标摄像头的能力信息（分辨率、最大帧频）
            </summary>
            <param name="cameraDeviceIndex">目标摄像头的索引</param>        
        </member>
        <member name="M:OMCS.Windows.Camera.Support(System.Int32,System.Drawing.Size)">
            <summary>
            目标摄像头是否支持采集指定的分辨率。
            </summary>     
        </member>
        <member name="M:OMCS.Windows.Camera.Support(System.Int32,System.Drawing.Size,System.Int32@)">
            <summary>
            目标摄像头是否支持采集指定的分辨率。
            </summary>     
        </member>
        <member name="M:OMCS.Windows.Camera.GetCameraState(System.Int32)">
            <summary>
            获取摄像头的状态。
            </summary>
            <param name="cameraDeviceIndex">目标摄像头的索引</param>
            <returns>摄像头的状态</returns>
        </member>
        <member name="M:OMCS.Windows.Camera.SupportOutputFormat(System.Int32,System.Guid,System.Drawing.Size,System.Int32)">
            <summary>
            检测摄像头是否支持指定的输出格式。
            </summary>        
        </member>
        <member name="M:OMCS.Windows.Camera.GetFirstValidCamera">
            <summary>
            获取第一个有效的摄像头索引。
            </summary>        
        </member>
        <member name="T:OMCS.Windows.WinCamera">
            <summary>
            摄像头采集器。
            2020.03.04 我笔记本的摄像头最高支持1280*720的30fps，格式为MJPEG。
            使用1280*720的分辨率，如果用使用RGB24去采集，也是可以成功的，但是帧频就降到了10fps。如果用MJPEG去采集，帧频就是30fps。
            几乎所有摄像头都支持RGB24采集，但是要注意，相比于摄像头的原始格式，帧频可能会降下来。经测试后判断，帧频之所以会降下来，是因为将原始格式转化为RGB24时，占用了采集线程的时间。
            2022.01.04 摄像头原始支持的格式是YUY2和MJPEG，H264/H265编码接受的数据格式为I420（YUV420P)。
            2022.01.17 统一输出RGB24。
            2022.04.07 改为输出RGBA32。
            </summary>
        </member>
        <member name="M:OMCS.Windows.WinCamera.Stop">
            <summary>
            停止设备。
            </summary>
        </member>
        <member name="T:OMCS.Windows.InterceptionKeyboard2">
            <summary>
            远程控制时，拦截Windows、ALT+TAB等键。
            </summary>
        </member>
        <member name="E:OMCS.Windows.InterceptionKeyboard2.KeyChange4Keyboard">
            <summary>
            拦截的特殊键经过处理后输出。
            </summary>
        </member>
        <member name="P:OMCS.Windows.InterceptionKeyboard2.Singleton">
            <summary>
            单例模式。
            </summary>
        </member>
        <member name="T:OMCS.Windows.SoundDevice">
            <summary>
            音频设备。用于获取本地所有音频设备信息。
            </summary>
        </member>
        <member name="M:OMCS.Windows.SoundDevice.GetMicrophoneCount">
            <summary>
            获取麦克风的数量。
            </summary>
            <returns></returns>
        </member>
        <member name="M:OMCS.Windows.SoundDevice.GetMicrophones2">
            <summary>
            枚举当前计算机上的所有麦克风设备。
            </summary>        
        </member>
        <member name="M:OMCS.Windows.SoundDevice.GetFirstAvailableMicrophoneIndex">
            <summary>
            获取第一个可用的麦克风的index。
            </summary>        
        </member>
        <member name="M:OMCS.Windows.SoundDevice.GetSpeakerCount">
            <summary>
            获取扬声器的数量。
            </summary>
            <returns></returns>
        </member>
        <member name="M:OMCS.Windows.SoundDevice.GetSpeakers">
            <summary>
            枚举当前计算机上的所有扬声器设备。
            </summary>        
        </member>
        <member name="M:OMCS.Windows.SoundDevice.GetFirstAvailableSpeakerIndex">
            <summary>
            获取第一个可用的扬声器的index。
            </summary>        
        </member>
        <member name="M:OMCS.Windows.SoundDevice.IsSoundCardInstalled">
            <summary>
            当前计算机是否安装了声卡。
            </summary>        
        </member>
        <member name="T:OMCS.Windows.WindowsInputsHelper">
            <summary>
            用于取代ESBasic的WindowsHelper，ESBasic的KeybdEvent以x64进程运行时，不仅不起作用，而且会把系统搞死机。
            *** 如果某些电脑作为被控端，在控制端鼠标键盘操作都不起作用时，应该是被控端电脑上开了360等杀毒软件。 ***
            </summary>
        </member>
        <member name="M:OMCS.Windows.WindowsInputsHelper.SetCursorPos(System.Int32,System.Int32)">
            <summary>
            SetCursorPos 设置光标的绝对位置
            </summary>  
        </member>
        <member name="M:OMCS.Windows.WindowsInputsHelper.KeybdEvent4String(System.String)">
            <summary>
            模拟键盘输入，支持unicode（中文）。2020.07.10
            </summary>       
        </member>
        <member name="T:OMCS.Engine.DShow.FilterCategory">
            <summary>
            DirectShow filter categories.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.FilterCategory.AudioInputDevice">
            <summary>
            Audio input device category.Equals to CLSID_AudioInputDeviceCategory.
            </summary>       
        </member>
        <member name="F:OMCS.Engine.DShow.FilterCategory.VideoInputDevice">
            <summary>
            Video input device category. Equals to CLSID_VideoInputDeviceCategory.
            </summary>       
        </member>
        <member name="F:OMCS.Engine.DShow.FilterCategory.VideoCompressorCategory">
            <summary>
            Video compressor category. Equals to CLSID_VideoCompressorCategory.
            </summary>       
        </member>
        <member name="F:OMCS.Engine.DShow.FilterCategory.AudioCompressorCategory">
            <summary>
            Audio compressor category. Equals to CLSID_AudioCompressorCategory.
            </summary>        
        </member>
        <member name="T:OMCS.Engine.DShow.FilterInfo">
            <summary>
            DirectShow filter information.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.FilterInfo.Name">
            <summary>
            Filter name.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.FilterInfo.MonikerString">
            <summary>
            Filters's moniker string.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.FilterInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OMCS.Engine.DShow.FilterInfo"/> class.
            </summary>
            
            <param name="monikerString">Filters's moniker string.</param>
            
        </member>
        <member name="M:OMCS.Engine.DShow.FilterInfo.#ctor(System.Runtime.InteropServices.ComTypes.IMoniker)">
            <summary>
            Initializes a new instance of the <see cref="T:OMCS.Engine.DShow.FilterInfo"/> class.
            </summary>
            
            <param name="moniker">Filter's moniker object.</param>
            
        </member>
        <member name="M:OMCS.Engine.DShow.FilterInfo.CompareTo(System.Object)">
            <summary>
            Compare the object with another instance of this class.
            </summary>
            
            <param name="value">Object to compare with.</param>
            
            <returns>A signed number indicating the relative values of this instance and <b>value</b>.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.FilterInfo.CreateFilter(System.String)">
            <summary>
            Create an instance of the filter.
            </summary>
            
            <param name="filterMoniker">Filter's moniker string.</param>
            
            <returns>Returns filter's object, which implements <b>IBaseFilter</b> interface.</returns>
            
            <remarks>The returned filter's object should be released using <b>Marshal.ReleaseComObject()</b>.</remarks>
            
        </member>
        <member name="T:OMCS.Engine.DShow.FilterInfoCollection">
            <summary>
            Collection of filters' information objects.
            </summary>
            
            <remarks><para>The class allows to enumerate DirectShow filters of specified category. For
            a list of categories see <see cref="T:OMCS.Engine.DShow.FilterCategory"/>.</para>
            
            <para>Sample usage:</para>
            <code>
            // enumerate video devices
            videoDevices = new FilterInfoCollection( FilterCategory.VideoInputDevice );
            // list devices
            foreach ( FilterInfo device in videoDevices )
            {
                // ...
            }
            </code>
            </remarks>
            
        </member>
        <member name="M:OMCS.Engine.DShow.FilterInfoCollection.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:OMCS.Engine.DShow.FilterInfoCollection"/> class.
            </summary>
            
            <param name="category">Guid of DirectShow filter category. See <see cref="T:OMCS.Engine.DShow.FilterCategory"/>.</param>
            
            <remarks>Build collection of filters' information objects for the
            specified filter category.</remarks>
            
        </member>
        <member name="P:OMCS.Engine.DShow.FilterInfoCollection.Item(System.Int32)">
            <summary>
            Get filter information object.
            </summary>
            
            <param name="index">Index of filter information object to retrieve.</param>
            
            <returns>Filter information object.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IAMStreamConfig">
            <summary>
            This interface sets the output format on certain capture and compression filters,
            for both audio and video.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IAMStreamConfig.SetFormat(OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Set the output format on the pin.
            </summary>
            
            <param name="mediaType">Media type to set.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IAMStreamConfig.GetFormat(OMCS.Engine.DShow.Core.AMMediaType@)">
            <summary>
            Retrieves the audio or video stream's format.
            </summary>
            
            <param name="mediaType">Retrieved media type.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IAMStreamConfig.GetNumberOfCapabilities(System.Int32@,System.Int32@)">
            <summary>
            Retrieve the number of format capabilities that this pin supports.
            </summary>
            
            <param name="count">Variable that receives the number of format capabilities.</param>
            <param name="size">Variable that receives the size of the configuration structure in bytes.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IAMStreamConfig.GetStreamCaps(System.Int32,OMCS.Engine.DShow.Core.AMMediaType@,OMCS.Engine.DShow.Core.VideoStreamConfigCaps)">
            <summary>
            Retrieve a set of format capabilities.
            </summary>
            
            <param name="index">Specifies the format capability to retrieve, indexed from zero.</param>
            <param name="mediaType">Retrieved media type.</param>
            <param name="streamConfigCaps">Byte array, which receives information about capabilities.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IBaseFilter">
            <summary>
            The IBaseFilter interface provides methods for controlling a filter.
            All DirectShow filters expose this interface
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.GetClassID(System.Guid@)">
            <summary>
            Returns the class identifier (CLSID) for the component object.
            </summary>
            
            <param name="ClassID">Points to the location of the CLSID on return.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.Stop">
            <summary>
            Stops the filter.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.Pause">
            <summary>
            Pauses the filter.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.Run(System.Int64)">
            <summary>
            Runs the filter.
            </summary>
            
            <param name="start">Reference time corresponding to stream time 0.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.GetState(System.Int32,System.Int32@)">
            <summary>
            Retrieves the state of the filter (running, stopped, or paused).
            </summary>
            
            <param name="milliSecsTimeout">Time-out interval, in milliseconds.</param>
            <param name="filterState">Pointer to a variable that receives filter's state.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.SetSyncSource(System.IntPtr)">
            <summary>
            Sets the reference clock for the filter or the filter graph.
            </summary>
            
            <param name="clock">Pointer to the clock's <b>IReferenceClock</b> interface, or NULL. </param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.GetSyncSource(System.IntPtr@)">
            <summary>
            Retrieves the current reference clock.
            </summary>
            
            <param name="clock">Address of a variable that receives a pointer to the clock's IReferenceClock interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.EnumPins(OMCS.Engine.DShow.Core.IEnumPins@)">
            <summary>
            Enumerates the pins on this filter.
            </summary>
            
            <param name="enumPins">Address of a variable that receives a pointer to the IEnumPins interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.FindPin(System.String,OMCS.Engine.DShow.Core.IPin@)">
            <summary>
            Retrieves the pin with the specified identifier.
            </summary>
            
            <param name="id">Pointer to a constant wide-character string that identifies the pin.</param>
            <param name="pin">Address of a variable that receives a pointer to the pin's IPin interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.QueryFilterInfo(OMCS.Engine.DShow.Core.FilterInfo2@)">
            <summary>
            Retrieves information about the filter.
            </summary>
            
            <param name="filterInfo">Pointer to <b>FilterInfo</b> structure.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.JoinFilterGraph(OMCS.Engine.DShow.Core.IFilterGraph,System.String)">
            <summary>
            Notifies the filter that it has joined or left the filter graph.
            </summary>
            
            <param name="graph">Pointer to the Filter Graph Manager's <b>IFilterGraph</b> interface, or NULL
            if the filter is leaving the graph.</param>
            <param name="name">String that specifies a name for the filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IBaseFilter.QueryVendorInfo(System.String@)">
            <summary>
            Retrieves a string containing vendor information.
            </summary>
            
            <param name="vendorInfo">Receives a string containing the vendor information.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2">
            <summary>
            This interface builds capture graphs and other custom filter graphs. 
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.SetFiltergraph(OMCS.Engine.DShow.Core.IGraphBuilder)">
            <summary>
            Specify filter graph for the capture graph builder to use.
            </summary>
            
            <param name="graphBuilder">Filter graph's interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.GetFiltergraph(OMCS.Engine.DShow.Core.IGraphBuilder@)">
            <summary>
            Retrieve the filter graph that the builder is using.
            </summary>
            
            <param name="graphBuilder">Filter graph's interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.SetOutputFileName(System.Guid,System.String,OMCS.Engine.DShow.Core.IBaseFilter@,System.IntPtr@)">
            <summary>
            Create file writing section of the filter graph.
            </summary>
            
            <param name="type">GUID that represents either the media subtype of the output or the
            class identifier (CLSID) of a multiplexer filter or file writer filter.</param>
            <param name="fileName">Output file name.</param>
            <param name="baseFilter">Receives the multiplexer's <see cref="T:OMCS.Engine.DShow.Core.IBaseFilter"/> interface.</param>
            <param name="fileSinkFilter">Receives the file writer's IFileSinkFilter interface. Can be NULL.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.FindInterface(System.Guid,System.Guid,OMCS.Engine.DShow.Core.IBaseFilter,System.Guid,System.Object@)">
            <summary>
            Searche the graph for a specified interface, starting from a specified filter.
            </summary>
            
            <param name="category">GUID that specifies the search criteria.</param>
            <param name="type">GUID that specifies the major media type of an output pin, or NULL.</param>
            <param name="baseFilter"><see cref="T:OMCS.Engine.DShow.Core.IBaseFilter"/> interface of the filter. The method begins searching from this filter.</param>
            <param name="interfaceID">Interface identifier (IID) of the interface to locate.</param>
            <param name="retInterface">Receives found interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.RenderStream(System.Guid,System.Guid,System.Object,OMCS.Engine.DShow.Core.IBaseFilter,OMCS.Engine.DShow.Core.IBaseFilter)">
            <summary>
            Connect an output pin on a source filter to a rendering filter, optionally through a compression filter.
            </summary>
            
            <param name="category">Pin category.</param>
            <param name="mediaType">Major-type GUID that specifies the media type of the output pin.</param>
            <param name="source">Starting filter for the connection.</param>
            <param name="compressor">Interface of an intermediate filter, such as a compression filter. Can be NULL.</param>
            <param name="renderer">Sink filter, such as a renderer or mux filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.ControlStream(System.Guid,System.Guid,OMCS.Engine.DShow.Core.IBaseFilter,System.Int64,System.Int64,System.Int16,System.Int16)">
            <summary>
            Set the start and stop times for one or more streams of captured data.
            </summary>
            
            <param name="category">Pin category.</param>
            <param name="mediaType">Major-type GUID that specifies the media type.</param>
            <param name="filter"><see cref="T:OMCS.Engine.DShow.Core.IBaseFilter"/> interface that specifies which filter to control.</param>
            <param name="start">Start time.</param>
            <param name="stop">Stop time.</param>
            <param name="startCookie">Value that is sent as the second parameter of the
            EC_STREAM_CONTROL_STARTED event notification.</param>
            <param name="stopCookie">Value that is sent as the second parameter of the
            EC_STREAM_CONTROL_STOPPED event notification.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.AllocCapFile(System.String,System.Int64)">
            <summary>
            Preallocate a capture file to a specified size.
            </summary>
            
            <param name="fileName">File name to create or resize.</param>
            <param name="size">Size of the file to allocate, in bytes.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.CopyCaptureFile(System.String,System.String,System.Boolean,System.IntPtr)">
            <summary>
            Copy the valid media data from a capture file.
            </summary>
            
            <param name="oldFileName">Old file name.</param>
            <param name="newFileName">New file name.</param>
            <param name="allowEscAbort">Boolean value that specifies whether pressing the ESC key cancels the copy operation.</param>
            <param name="callback">IAMCopyCaptureFileProgress interface to display progress information, or NULL.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICaptureGraphBuilder2.FindPin(System.Object,OMCS.Engine.DShow.Core.PinDirection,System.Guid,System.Guid,System.Boolean,System.Int32,OMCS.Engine.DShow.Core.IPin@)">
            <summary>
            
            </summary>
            
            <param name="source">Interface on a filter, or to an interface on a pin.</param>
            <param name="pinDirection">Pin direction (input or output).</param>
            <param name="category">Pin category.</param>
            <param name="mediaType">Media type.</param>
            <param name="unconnected">Boolean value that specifies whether the pin must be unconnected.</param>
            <param name="index">Zero-based index of the pin to retrieve, from the set of matching pins.</param>
            <param name="pin">Interface of the matching pin.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.ICreateDevEnum">
            <summary>
            The <b>ICreateDevEnum</b> interface creates an enumerator for devices within a particular category,
            such as video capture devices, audio capture devices, video compressors, and so forth.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ICreateDevEnum.CreateClassEnumerator(System.Guid@,System.Runtime.InteropServices.ComTypes.IEnumMoniker@,System.Int32)">
            <summary>
            Creates a class enumerator for a specified device category.
            </summary>
            
            <param name="type">Specifies the class identifier of the device category.</param>
            <param name="enumMoniker">Address of a variable that receives an <b>IEnumMoniker</b> interface pointer</param>
            <param name="flags">Bitwise combination of zero or more flags. If zero, the method enumerates every filter in the category.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IEnumFilters">
            <summary>
            This interface is used by applications or other filters to determine
            what filters exist in the filter graph.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumFilters.Next(System.Int32,OMCS.Engine.DShow.Core.IBaseFilter[],System.Int32@)">
            <summary>
            Retrieves the specified number of filters in the enumeration sequence.
            </summary>
            
            <param name="cFilters">Number of filters to retrieve.</param>
            <param name="filters">Array in which to place <see cref="T:OMCS.Engine.DShow.Core.IBaseFilter"/> interfaces.</param>
            <param name="filtersFetched">Actual number of filters placed in the array.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumFilters.Skip(System.Int32)">
            <summary>
            Skips a specified number of filters in the enumeration sequence.
            </summary>
            
            <param name="cFilters">Number of filters to skip.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumFilters.Reset">
            <summary>
            Resets the enumeration sequence to the beginning.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumFilters.Clone(OMCS.Engine.DShow.Core.IEnumFilters@)">
            <summary>
            Makes a copy of the enumerator with the same enumeration state.
            </summary>
            
            <param name="enumFilters">Duplicate of the enumerator.</param>
            
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IEnumPins">
            <summary>
            Enumerates pins on a filter.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumPins.Next(System.Int32,OMCS.Engine.DShow.Core.IPin[],System.Int32@)">
            <summary>
            Retrieves a specified number of pins.
            </summary>
            
            <param name="cPins">Number of pins to retrieve.</param>
            <param name="pins">Array of size <b>cPins</b> that is filled with <b>IPin</b> pointers.</param>
            <param name="pinsFetched">Receives the number of pins retrieved.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumPins.Skip(System.Int32)">
            <summary>
            Skips a specified number of pins in the enumeration sequence.
            </summary>
            
            <param name="cPins">Number of pins to skip.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumPins.Reset">
            <summary>
            Resets the enumeration sequence to the beginning.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IEnumPins.Clone(OMCS.Engine.DShow.Core.IEnumPins@)">
            <summary>
            Makes a copy of the enumerator with the same enumeration state. 
            </summary>
            
            <param name="enumPins">Duplicate of the enumerator.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IFileSourceFilter">
            <summary>
            The interface is exposed by source filters to set the file name and media type of the media file that they are to render.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFileSourceFilter.Load(System.String,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Loads the source filter with the file.
            </summary>
            
            <param name="fileName">The name of the file to open.</param>
            <param name="mediaType">Media type of the file. This can be null.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFileSourceFilter.GetCurFile(System.String@,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Retrieves the current file.
            </summary>
            
            <param name="fileName">Name of media file.</param>
            <param name="mediaType">Receives media type.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IFilterGraph">
            <summary>
            The interface provides methods for building a filter graph. An application can use it to add filters to
            the graph, connect or disconnect filters, remove filters, and perform other basic operations. 
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.AddFilter(OMCS.Engine.DShow.Core.IBaseFilter,System.String)">
            <summary>
            Adds a filter to the graph and gives it a name.
            </summary>
            
            <param name="filter">Filter to add to the graph.</param>
            <param name="name">Name of the filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.RemoveFilter(OMCS.Engine.DShow.Core.IBaseFilter)">
            <summary>
            Removes a filter from the graph.
            </summary>
            
            <param name="filter">Filter to be removed from the graph.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.EnumFilters(System.IntPtr@)">
            <summary>
            Provides an enumerator for all filters in the graph.
            </summary>
            
            <param name="enumerator">Filter enumerator.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.FindFilterByName(System.String,OMCS.Engine.DShow.Core.IBaseFilter@)">
            <summary>
            Finds a filter that was added with a specified name.
            </summary>
            
            <param name="name">Name of filter to search for.</param>
            <param name="filter">Interface of found filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.ConnectDirect(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Connects two pins directly (without intervening filters).
            </summary>
            
            <param name="pinOut">Output pin.</param>
            <param name="pinIn">Input pin.</param>
            <param name="mediaType">Media type to use for the connection.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.Reconnect(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Breaks the existing pin connection and reconnects it to the same pin.
            </summary>
            
            <param name="pin">Pin to disconnect and reconnect.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.Disconnect(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Disconnects a specified pin.
            </summary>
            
            <param name="pin">Pin to disconnect.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph.SetDefaultSyncSource">
            <summary>
            Sets the reference clock to the default clock.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IFilterGraph2">
            <summary>
            This interface extends the <see cref="T:OMCS.Engine.DShow.Core.IFilterGraph"/> and <see cref="T:OMCS.Engine.DShow.Core.IGraphBuilder"/>
            interfaces, which contain methods for building filter graphs.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.AddFilter(OMCS.Engine.DShow.Core.IBaseFilter,System.String)">
            <summary>
            Adds a filter to the graph and gives it a name.
            </summary>
            
            <param name="filter">Filter to add to the graph.</param>
            <param name="name">Name of the filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.RemoveFilter(OMCS.Engine.DShow.Core.IBaseFilter)">
            <summary>
            Removes a filter from the graph.
            </summary>
            
            <param name="filter">Filter to be removed from the graph.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.EnumFilters(OMCS.Engine.DShow.Core.IEnumFilters@)">
            <summary>
            Provides an enumerator for all filters in the graph.
            </summary>
            
            <param name="enumerator">Filter enumerator.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.FindFilterByName(System.String,OMCS.Engine.DShow.Core.IBaseFilter@)">
            <summary>
            Finds a filter that was added with a specified name.
            </summary>
            
            <param name="name">Name of filter to search for.</param>
            <param name="filter">Interface of found filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.ConnectDirect(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Connects two pins directly (without intervening filters).
            </summary>
            
            <param name="pinOut">Output pin.</param>
            <param name="pinIn">Input pin.</param>
            <param name="mediaType">Media type to use for the connection.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.Reconnect(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Breaks the existing pin connection and reconnects it to the same pin.
            </summary>
            
            <param name="pin">Pin to disconnect and reconnect.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.Disconnect(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Disconnects a specified pin.
            </summary>
            
            <param name="pin">Pin to disconnect.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.SetDefaultSyncSource">
            <summary>
            Sets the reference clock to the default clock.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.Connect(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Connects two pins. If they will not connect directly, this method connects them with intervening transforms.
            </summary>
            
            <param name="pinOut">Output pin.</param>
            <param name="pinIn">Input pin.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.Render(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Adds a chain of filters to a specified output pin to render it.
            </summary>
            
            <param name="pinOut">Output pin.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.RenderFile(System.String,System.String)">
            <summary>
            Builds a filter graph that renders the specified file.
            </summary>
            
            <param name="file">Specifies a string that contains file name or device moniker.</param>
            <param name="playList">Reserved.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.AddSourceFilter(System.String,System.String,OMCS.Engine.DShow.Core.IBaseFilter@)">
            <summary>
            Adds a source filter to the filter graph for a specific file.
            </summary>
            
            <param name="fileName">Specifies the name of the file to load.</param>
            <param name="filterName">Specifies a name for the source filter.</param>
            <param name="filter">Variable that receives the interface of the source filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.SetLogFile(System.IntPtr)">
            <summary>
            Sets the file for logging actions taken when attempting to perform an operation.
            </summary>
            
            <param name="hFile">Handle to the log file.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.Abort">
            <summary>
            Requests that the graph builder return as soon as possible from its current task.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.ShouldOperationContinue">
            <summary>
            Queries whether the current operation should continue.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.AddSourceFilterForMoniker(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IBindCtx,System.String,OMCS.Engine.DShow.Core.IBaseFilter@)">
            <summary>
            
            </summary>
            
            <param name="moniker">Moniker interface.</param>
            <param name="bindContext">Bind context interface.</param>
            <param name="filterName">Name for the filter.</param>
            <param name="filter"> Receives source filter's IBaseFilter interface.
            The caller must release the interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.ReconnectEx(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Breaks the existing pin connection and reconnects it to the same pin,
            using a specified media type.
            </summary>
            
            <param name="pin">Pin to disconnect and reconnect.</param>
            <param name="mediaType">Media type to reconnect with.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IFilterGraph2.RenderEx(OMCS.Engine.DShow.Core.IPin,System.Int32,System.IntPtr)">
            <summary>
            Render an output pin, with an option to use existing renderers only.
            </summary>
            
            <param name="outputPin">Interface of the output pin.</param>
            <param name="flags">Flag that specifies how to render the pin.</param>
            <param name="context">Reserved.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IGraphBuilder">
            <summary>
            This interface provides methods that enable an application to build a filter graph.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.AddFilter(OMCS.Engine.DShow.Core.IBaseFilter,System.String)">
            <summary>
            Adds a filter to the graph and gives it a name.
            </summary>
            
            <param name="filter">Filter to add to the graph.</param>
            <param name="name">Name of the filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.RemoveFilter(OMCS.Engine.DShow.Core.IBaseFilter)">
            <summary>
            Removes a filter from the graph.
            </summary>
            
            <param name="filter">Filter to be removed from the graph.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.EnumFilters(OMCS.Engine.DShow.Core.IEnumFilters@)">
            <summary>
            Provides an enumerator for all filters in the graph.
            </summary>
            
            <param name="enumerator">Filter enumerator.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.FindFilterByName(System.String,OMCS.Engine.DShow.Core.IBaseFilter@)">
            <summary>
            Finds a filter that was added with a specified name.
            </summary>
            
            <param name="name">Name of filter to search for.</param>
            <param name="filter">Interface of found filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.ConnectDirect(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Connects two pins directly (without intervening filters).
            </summary>
            
            <param name="pinOut">Output pin.</param>
            <param name="pinIn">Input pin.</param>
            <param name="mediaType">Media type to use for the connection.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.Reconnect(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Breaks the existing pin connection and reconnects it to the same pin.
            </summary>
            
            <param name="pin">Pin to disconnect and reconnect.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.Disconnect(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Disconnects a specified pin.
            </summary>
            
            <param name="pin">Pin to disconnect.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.SetDefaultSyncSource">
            <summary>
            Sets the reference clock to the default clock.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.Connect(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Connects two pins. If they will not connect directly, this method connects them with intervening transforms.
            </summary>
            
            <param name="pinOut">Output pin.</param>
            <param name="pinIn">Input pin.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.Render(OMCS.Engine.DShow.Core.IPin)">
            <summary>
            Adds a chain of filters to a specified output pin to render it.
            </summary>
            
            <param name="pinOut">Output pin.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.RenderFile(System.String,System.String)">
            <summary>
            Builds a filter graph that renders the specified file.
            </summary>
            
            <param name="file">Specifies a string that contains file name or device moniker.</param>
            <param name="playList">Reserved.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.AddSourceFilter(System.String,System.String,OMCS.Engine.DShow.Core.IBaseFilter@)">
            <summary>
            Adds a source filter to the filter graph for a specific file.
            </summary>
            
            <param name="fileName">Specifies the name of the file to load.</param>
            <param name="filterName">Specifies a name for the source filter.</param>
            <param name="filter">Variable that receives the interface of the source filter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.SetLogFile(System.IntPtr)">
            <summary>
            Sets the file for logging actions taken when attempting to perform an operation.
            </summary>
            
            <param name="hFile">Handle to the log file.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.Abort">
            <summary>
            Requests that the graph builder return as soon as possible from its current task.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IGraphBuilder.ShouldOperationContinue">
            <summary>
            Queries whether the current operation should continue.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IMediaControl">
            <summary>
            The interface provides methods for controlling the flow of data through the filter graph.
            It includes methods for running, pausing, and stopping the graph.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.Run">
            <summary>
            Runs all the filters in the filter graph.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.Pause">
            <summary>
            Pauses all filters in the filter graph.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.Stop">
            <summary>
            Stops all the filters in the filter graph.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.GetState(System.Int32,System.Int32@)">
            <summary>
            Retrieves the state of the filter graph.
            </summary>
            
            <param name="timeout">Duration of the time-out, in milliseconds, or INFINITE to specify an infinite time-out.</param>
            <param name="filterState">蘟riable that receives a member of the <b>FILTER_STATE</b> enumeration.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.RenderFile(System.String)">
            <summary>
            Builds a filter graph that renders the specified file.
            </summary>
            
            <param name="fileName">Name of the file to render</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.AddSourceFilter(System.String,System.Object@)">
            <summary>
            Adds a source filter to the filter graph, for a specified file.
            </summary>
            
            <param name="fileName">Name of the file containing the source video.</param>
            <param name="filterInfo">Receives interface of filter information object.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.get_FilterCollection(System.Object@)">
            <summary>
            Retrieves a collection of the filters in the filter graph.
            </summary>
            
            <param name="collection">Receives the <b>IAMCollection</b> interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.get_RegFilterCollection(System.Object@)">
            <summary>
            Retrieves a collection of all the filters listed in the registry.
            </summary>
            
            <param name="collection">Receives the <b>IDispatch</b> interface of <b>IAMCollection</b> object.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaControl.StopWhenReady">
            <summary>
            Pauses the filter graph, allowing filters to queue data, and then stops the filter graph.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IMediaEventEx">
            <summary>
            The interface inherits contains methods for retrieving event notifications and for overriding the
            filter graph's default handling of events.
            </summary>
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.GetEventHandle(System.IntPtr@)">
            <summary>
            Retrieves a handle to a manual-reset event that remains signaled while the queue contains event notifications.
            </summary>
            <param name="hEvent">Pointer to a variable that receives the event handle.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.GetEvent(OMCS.Engine.DShow.Core.DsEvCode@,System.Int32@,System.Int32@,System.Int32)">
            <summary>
            Retrieves the next event notification from the event queue.
            </summary>
            
            <param name="lEventCode">Variable that receives the event code.</param>
            <param name="lParam1">Pointer to a variable that receives the first event parameter.</param>
            <param name="lParam2">Pointer to a variable that receives the second event parameter.</param>
            <param name="msTimeout">Time-out interval, in milliseconds.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.WaitForCompletion(System.Int32,System.Int32@)">
            <summary>
            Waits for the filter graph to render all available data.
            </summary>
            
            <param name="msTimeout">Time-out interval, in milliseconds. Pass zero to return immediately.</param>
            <param name="pEvCode">Pointer to a variable that receives an event code.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.CancelDefaultHandling(System.Int32)">
            <summary>
            Cancels the Filter Graph Manager's default handling for a specified event.
            </summary>
            
            <param name="lEvCode">Event code for which to cancel default handling.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.RestoreDefaultHandling(System.Int32)">
            <summary>
            Restores the Filter Graph Manager's default handling for a specified event.
            </summary>
            <param name="lEvCode">Event code for which to restore default handling.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.FreeEventParams(OMCS.Engine.DShow.Core.DsEvCode,System.Int32,System.Int32)">
            <summary>
            Frees resources associated with the parameters of an event.
            </summary>
            <param name="lEvCode">Event code.</param>
            <param name="lParam1">First event parameter.</param>
            <param name="lParam2">Second event parameter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.SetNotifyWindow(System.IntPtr,System.Int32,System.IntPtr)">
            <summary>
            Registers a window to process event notifications.
            </summary>
            
            <param name="hwnd">Handle to the window, or <see cref="F:System.IntPtr.Zero"/> to stop receiving event messages.</param>
            <param name="lMsg">Window message to be passed as the notification.</param>
            <param name="lInstanceData">Value to be passed as the <i>lParam</i> parameter for the <i>lMsg</i> message.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.SetNotifyFlags(System.Int32)">
            <summary>
            Enables or disables event notifications.
            </summary>
            
            <param name="lNoNotifyFlags">Value indicating whether to enable or disable event notifications.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IMediaEventEx.GetNotifyFlags(System.Int32@)">
            <summary>
            Determines whether event notifications are enabled.
            </summary>
            
            <param name="lplNoNotifyFlags">Variable that receives current notification status.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IPin">
            <summary>
            This interface is exposed by all input and output pins of DirectShow filters.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.Connect(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Connects the pin to another pin.
            </summary>
            
            <param name="receivePin">Other pin to connect to.</param>
            <param name="mediaType">Type to use for the connections (optional).</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.ReceiveConnection(OMCS.Engine.DShow.Core.IPin,OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Makes a connection to this pin and is called by a connecting pin.
            </summary>
            
            <param name="receivePin">Connecting pin.</param>
            <param name="mediaType">Media type of the samples to be streamed.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.Disconnect">
            <summary>
            Breaks the current pin connection.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.ConnectedTo(OMCS.Engine.DShow.Core.IPin@)">
            <summary>
            Returns a pointer to the connecting pin.
            </summary>
            
            <param name="pin">Receives <b>IPin</b> interface of connected pin (if any).</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.ConnectionMediaType(OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Returns the media type of this pin's connection.
            </summary>
            
            <param name="mediaType">Pointer to an <see cref="T:OMCS.Engine.DShow.Core.AMMediaType"/> structure. If the pin is connected,
            the media type is returned. Otherwise, the structure is initialized to a default state in which
            all elements are 0, with the exception of <b>lSampleSize</b>, which is set to 1, and
            <b>FixedSizeSamples</b>, which is set to <b>true</b>.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.QueryPinInfo(OMCS.Engine.DShow.Core.PinInfo@)">
            <summary>
            Retrieves information about this pin (for example, the name, owning filter, and direction).
            </summary>
            
            <param name="pinInfo"><see cref="T:OMCS.Engine.DShow.Core.PinInfo"/> structure that receives the pin information.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.QueryDirection(OMCS.Engine.DShow.Core.PinDirection@)">
            <summary>
            Retrieves the direction for this pin.
            </summary>
            
            <param name="pinDirection">Receives direction of the pin.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.QueryId(System.String@)">
            <summary>
            Retrieves an identifier for the pin.
            </summary>
            
            <param name="id">Pin identifier.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.QueryAccept(OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Queries whether a given media type is acceptable by the pin.
            </summary>
            
            <param name="mediaType"><see cref="T:OMCS.Engine.DShow.Core.AMMediaType"/> structure that specifies the media type.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.EnumMediaTypes(System.IntPtr)">
            <summary>
            Provides an enumerator for this pin's preferred media types.
            </summary>
            
            <param name="enumerator">Address of a variable that receives a pointer to the <b>IEnumMediaTypes</b> interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.QueryInternalConnections(System.IntPtr,System.Int32@)">
            <summary>
            Provides an array of the pins to which this pin internally connects.
            </summary>
            
            <param name="apPin">Address of an array of <b>IPin</b> pointers.</param>
            <param name="nPin">On input, specifies the size of the array. When the method returns,
            the value is set to the number of pointers returned in the array.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.EndOfStream">
            <summary>
            Notifies the pin that no additional data is expected.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.BeginFlush">
            <summary>
            Begins a flush operation.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.EndFlush">
            <summary>
            Ends a flush operation.
            </summary>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPin.NewSegment(System.Int64,System.Int64,System.Double)">
            <summary>
            Specifies that samples following this call are grouped as a segment with a given start time, stop time, and rate.
            </summary>
            
            <param name="start">Start time of the segment, relative to the original source, in 100-nanosecond units.</param>
            <param name="stop">End time of the segment, relative to the original source, in 100-nanosecond units.</param>
            <param name="rate">Rate at which this segment should be processed, as a percentage of the original rate.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IPropertyBag">
            <summary>
            The <b>IPropertyBag</b> interface provides an object with a property bag in
            which the object can persistently save its properties. 
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPropertyBag.Read(System.String,System.Object@,System.IntPtr)">
            <summary>
            Read a property from property bag.
            </summary>
            
            <param name="propertyName">Property name to read.</param>
            <param name="pVar">Property value.</param>
            <param name="pErrorLog">Caller's error log.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IPropertyBag.Write(System.String,System.Object@)">
            <summary>
            Write property to property bag.
            </summary>
            
            <param name="propertyName">Property name to read.</param>
            <param name="pVar">Property value.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.ISampleGrabber">
            <summary>
            The interface is exposed by the Sample Grabber Filter. It enables an application to retrieve
            individual media samples as they move through the filter graph.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabber.SetOneShot(System.Boolean)">
            <summary>
            Specifies whether the filter should stop the graph after receiving one sample.
            </summary>
            
            <param name="oneShot">Boolean value specifying whether the filter should stop the graph after receiving one sample.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabber.SetMediaType(OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Specifies the media type for the connection on the Sample Grabber's input pin.
            </summary>
            
            <param name="mediaType">Specifies the required media type.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabber.GetConnectedMediaType(OMCS.Engine.DShow.Core.AMMediaType)">
            <summary>
            Retrieves the media type for the connection on the Sample Grabber's input pin.
            </summary>
            
            <param name="mediaType"><see cref="T:OMCS.Engine.DShow.Core.AMMediaType"/> structure, which receives media type.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabber.SetBufferSamples(System.Boolean)">
            <summary>
            Specifies whether to copy sample data into a buffer as it goes through the filter.
            </summary>
            
            <param name="bufferThem">Boolean value specifying whether to buffer sample data.
            If <b>true</b>, the filter copies sample data into an internal buffer.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabber.GetCurrentBuffer(System.Int32@,System.IntPtr)">
            <summary>
            Retrieves a copy of the sample that the filter received most recently.
            </summary>
            
            <param name="bufferSize">Pointer to the size of the buffer. If pBuffer is NULL, this parameter receives the required size.</param>
            <param name="buffer">Pointer to a buffer to receive a copy of the sample, or NULL.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabber.GetCurrentSample(System.IntPtr)">
            <summary>
            Not currently implemented.
            </summary>
            
            <param name="sample"></param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabber.SetCallback(OMCS.Engine.DShow.Core.ISampleGrabberCB,System.Int32)">
            <summary>
            Specifies a callback method to call on incoming samples.
            </summary>
            
            <param name="callback"><see cref="T:OMCS.Engine.DShow.Core.ISampleGrabberCB"/> interface containing the callback method, or NULL to cancel the callback.</param>
            <param name="whichMethodToCallback">Index specifying the callback method.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.ISampleGrabberCB">
            <summary>
            The interface provides callback methods for the <see cref="M:OMCS.Engine.DShow.Core.ISampleGrabber.SetCallback(OMCS.Engine.DShow.Core.ISampleGrabberCB,System.Int32)"/> method.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabberCB.SampleCB(System.Double,System.IntPtr)">
            <summary>
            Callback method that receives a pointer to the media sample.
            </summary>
            
            <param name="sampleTime">Starting time of the sample, in seconds.</param>
            <param name="sample">Pointer to the sample's <b>IMediaSample</b> interface.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISampleGrabberCB.BufferCB(System.Double,System.IntPtr,System.Int32)">
            <summary>
            Callback method that receives a pointer to the sample buffer?
            </summary>
            
            <param name="sampleTime">Starting time of the sample, in seconds.</param>
            <param name="buffer">Pointer to a buffer that contains the sample data.</param>
            <param name="bufferLen">Length of the buffer pointed to by <b>buffer</b>, in bytes</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.ISpecifyPropertyPages">
            <summary>
            The interface indicates that an object supports property pages.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.ISpecifyPropertyPages.GetPages(OMCS.Engine.DShow.Core.CAUUID@)">
            <summary>
            Fills a counted array of GUID values where each GUID specifies the
            CLSID of each property page that can be displayed in the property
            sheet for this object.
            </summary>
            
            <param name="pPages">Pointer to a CAUUID structure that must be initialized
            and filled before returning.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.IVideoWindow">
            <summary>
            The interface sets properties on the video window.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_Caption(System.String)">
            <summary>
            Sets the video window caption.
            </summary>
            
            <param name="caption">Caption.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_Caption(System.String@)">
            <summary>
            Retrieves the video window caption.
            </summary>
            
            <param name="caption">Caption.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_WindowStyle(System.Int32)">
            <summary>
            Sets the window style on the video window.
            </summary>
            
            <param name="windowStyle">Window style flags.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_WindowStyle(System.Int32@)">
            <summary>
            Retrieves the window style on the video window.
            </summary>
            
            <param name="windowStyle">Window style flags.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_WindowStyleEx(System.Int32)">
            <summary>
            Sets the extended window style on the video window.
            </summary>
            
            <param name="windowStyleEx">Window extended style flags.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_WindowStyleEx(System.Int32@)">
            <summary>
            Retrieves the extended window style on the video window.
            </summary>
            
            <param name="windowStyleEx">Window extended style flags.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_AutoShow(System.Boolean)">
            <summary>
            Specifies whether the video renderer automatically shows the video window when it receives video data.
            </summary>
            
            <param name="autoShow">Specifies whether the video renderer automatically shows the video window.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_AutoShow(System.Boolean@)">
            <summary>
            Queries whether the video renderer automatically shows the video window when it receives video data.
            </summary>
            
            <param name="autoShow">REceives window auto show flag.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_WindowState(System.Int32)">
            <summary>
            Shows, hides, minimizes, or maximizes the video window.
            </summary>
            
            <param name="windowState">Window state.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_WindowState(System.Int32@)">
            <summary>
            Queries whether the video window is visible, hidden, minimized, or maximized.
            </summary>
            
            <param name="windowState">Window state.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_BackgroundPalette(System.Boolean)">
            <summary>
            Specifies whether the video window realizes its palette in the background.
            </summary>
            
            <param name="backgroundPalette">Value that specifies whether the video renderer realizes it palette in the background.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_BackgroundPalette(System.Boolean@)">
            <summary>
            Queries whether the video window realizes its palette in the background.
            </summary>
            
            <param name="backgroundPalette">Receives state of background palette flag.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_Visible(System.Boolean)">
            <summary>
            Shows or hides the video window.
            </summary>
            
            <param name="visible">Value that specifies whether to show or hide the window.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_Visible(System.Boolean@)">
            <summary>
            Queries whether the video window is visible.
            </summary>
            
            <param name="visible">Visibility flag.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_Left(System.Int32)">
            <summary>
            Sets the video window's x-coordinate.
            </summary>
            
            <param name="left">Specifies the x-coordinate, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_Left(System.Int32@)">
            <summary>
            Retrieves the video window's x-coordinate.
            </summary>
            
            <param name="left">x-coordinate, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_Width(System.Int32)">
            <summary>
            Sets the width of the video window.
            </summary>
            
            <param name="width">Specifies the width, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_Width(System.Int32@)">
            <summary>
            Retrieves the width of the video window.
            </summary>
            
            <param name="width">Width, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_Top(System.Int32)">
            <summary>
            Sets the video window's y-coordinate.
            </summary>
            
            <param name="top">Specifies the y-coordinate, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_Top(System.Int32@)">
            <summary>
            Retrieves the video window's y-coordinate.
            </summary>
            
            <param name="top">y-coordinate, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_Height(System.Int32)">
            <summary>
            Sets the height of the video window.
            </summary>
            
            <param name="height">Specifies the height, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_Height(System.Int32@)">
            <summary>
            Retrieves the height of the video window.
            </summary>
            
            <param name="height">Height, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_Owner(System.IntPtr)">
            <summary>
            Specifies a parent window for the video window?
            </summary>
            
            <param name="owner">Specifies a handle to the parent window.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_Owner(System.IntPtr@)">
            <summary>
            Retrieves the video window's parent window, if any?
            </summary>
            
            <param name="owner">Parent window's handle.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_MessageDrain(System.IntPtr)">
            <summary>
            Specifies a window to receive mouse and keyboard messages from the video window.
            </summary>
            
            <param name="drain">Specifies a handle to the window.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_MessageDrain(System.IntPtr@)">
            <summary>
            Retrieves the window that receives mouse and keyboard messages from the video window, if any.
            </summary>
            
            <param name="drain">Window's handle.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_BorderColor(System.Int32@)">
            <summary>
            Retrieves the color that appears around the edges of the destination rectangle.
            </summary>
            
            <param name="color">Border's color.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_BorderColor(System.Int32)">
            <summary>
            Sets the color that appears around the edges of the destination rectangle.
            </summary>
            
            <param name="color">Specifies the border color.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.get_FullScreenMode(System.Boolean@)">
            <summary>
            Queries whether the video renderer is in full-screen mode.
            </summary>
            
            <param name="fullScreenMode">Full-screen mode.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.put_FullScreenMode(System.Boolean)">
            <summary>
            Enables or disables full-screen mode.
            </summary>
            
            <param name="fullScreenMode">Boolean value that specifies whether to enable or disable full-screen mode.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.SetWindowForeground(System.Int32)">
            <summary>
            Places the video window at the top of the Z order.
            </summary>
            
            <param name="focus">Value that specifies whether to give the window focus.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.NotifyOwnerMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Forwards a message to the video window.
            </summary>
            
            <param name="hwnd">Handle to the window.</param>
            <param name="msg">Specifies the message.</param>
            <param name="wParam">Message parameter.</param>
            <param name="lParam">Message parameter.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.SetWindowPosition(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the position of the video window?
            </summary>
            
            <param name="left">Specifies the x-coordinate, in pixels.</param>
            <param name="top">Specifies the y-coordinate, in pixels.</param>
            <param name="width">Specifies the width, in pixels.</param>
            <param name="height">Specifies the height, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.GetWindowPosition(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Retrieves the position of the video window.
            </summary>
            
            <param name="left">x-coordinate, in pixels.</param>
            <param name="top">y-coordinate, in pixels.</param>
            <param name="width">Width, in pixels.</param>
            <param name="height">Height, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.GetMinIdealImageSize(System.Int32@,System.Int32@)">
            <summary>
            Retrieves the minimum ideal size for the video image.
            </summary>
            
            <param name="width">Receives the minimum ideal width, in pixels.</param>
            <param name="height">Receives the minimum ideal height, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.GetMaxIdealImageSize(System.Int32@,System.Int32@)">
            <summary>
            Retrieves the maximum ideal size for the video image.
            </summary>
            
            <param name="width">Receives the maximum ideal width, in pixels.</param>
            <param name="height">Receives the maximum ideal height, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.GetRestorePosition(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Retrieves the restored window position.
            </summary>
            
            <param name="left">x-coordinate, in pixels.</param>
            <param name="top">y-coordinate, in pixels.</param>
            <param name="width">Width, in pixels.</param>
            <param name="height">Height, in pixels.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.HideCursor(System.Boolean)">
            <summary>
            Hides the cursor.
            </summary>
            
            <param name="hideCursor">Specifies whether to hide or display the cursor.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.IVideoWindow.IsCursorHidden(System.Boolean@)">
            <summary>
            Queries whether the cursor is hidden.
            </summary>
            
            <param name="hideCursor">Specifies if cursor is hidden or not.</param>
            
            <returns>Return's <b>HRESULT</b> error code.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.PinDirection">
            <summary>
            This enumeration indicates a pin's direction.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.PinDirection.Input">
            <summary>
            Input pin.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.PinDirection.Output">
            <summary>
            Output pin.
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.AMMediaType">
            <summary>
            The structure describes the format of a media sample.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.MajorType">
            <summary>
            Globally unique identifier (GUID) that specifies the major type of the media sample.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.SubType">
            <summary>
            GUID that specifies the subtype of the media sample.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.FixedSizeSamples">
            <summary>
            If <b>true</b>, samples are of a fixed size.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.TemporalCompression">
            <summary>
            If <b>true</b>, samples are compressed using temporal (interframe) compression.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.SampleSize">
            <summary>
            Size of the sample in bytes. For compressed data, the value can be zero.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.FormatType">
            <summary>
            GUID that specifies the structure used for the format block.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.unkPtr">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.FormatSize">
            <summary>
            Size of the format block, in bytes.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.AMMediaType.FormatPtr">
            <summary>
            Pointer to the format block.
            </summary>
        </member>
        <member name="M:OMCS.Engine.DShow.Core.AMMediaType.Finalize">
            <summary>
            Destroys the instance of the <see cref="T:OMCS.Engine.DShow.Core.AMMediaType"/> class.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.AMMediaType.Dispose">
             <summary>
             Dispose the object.
             </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.AMMediaType.Dispose(System.Boolean)">
            <summary>
            Dispose the object
            </summary>
            
            <param name="disposing">Indicates if disposing was initiated manually.</param>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.PinInfo">
            <summary>
            The structure contains information about a pin.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.PinInfo.Filter">
            <summary>
            Owning filter.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.PinInfo.Direction">
            <summary>
            Direction of the pin.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.PinInfo.Name">
            <summary>
            Name of the pin.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.FilterInfo2.Name">
            <summary>
            Filter's name.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.FilterInfo2.FilterGraph">
            <summary>
            Owning graph.
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.VideoInfoHeader">
            <summary>
            The structure describes the bitmap and color information for a video image.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.VideoInfoHeader.SrcRect">
            <summary>
            <see cref="T:OMCS.Engine.DShow.Core.RECT"/> structure that specifies the source video window.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.VideoInfoHeader.TargetRect">
            <summary>
            <see cref="T:OMCS.Engine.DShow.Core.RECT"/> structure that specifies the destination video window.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.VideoInfoHeader.BitRate">
            <summary>
            Approximate data rate of the video stream, in bits per second.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.VideoInfoHeader.BitErrorRate">
            <summary>
            Data error rate, in bit errors per second.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.VideoInfoHeader.AverageTimePerFrame">
            <summary>
            The desired average display time of the video frames, in 100-nanosecond units.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.VideoInfoHeader.BmiHeader">
            <summary>
            <see cref="T:OMCS.Engine.DShow.Core.BitmapInfoHeader"/> structure that contains color and dimension information for the video image bitmap.
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.BitmapInfoHeader">
            <summary>
            The structure contains information about the dimensions and color format of a device-independent bitmap (DIB).
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.Size">
            <summary>
            Specifies the number of bytes required by the structure.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.Width">
            <summary>
            Specifies the width of the bitmap.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.Height">
            <summary>
            Specifies the height of the bitmap, in pixels.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.Planes">
            <summary>
            Specifies the number of planes for the target device. This value must be set to 1.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.BitCount">
            <summary>
            Specifies the number of bits per pixel.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.Compression">
            <summary>
            If the bitmap is compressed, this member is a <b>FOURCC</b> the specifies the compression.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.ImageSize">
            <summary>
            Specifies the size, in bytes, of the image.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.XPelsPerMeter">
            <summary>
            Specifies the horizontal resolution, in pixels per meter, of the target device for the bitmap.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.YPelsPerMeter">
            <summary>
            Specifies the vertical resolution, in pixels per meter, of the target device for the bitmap.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.ColorsUsed">
            <summary>
            Specifies the number of color indices in the color table that are actually used by the bitmap.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.BitmapInfoHeader.ColorsImportant">
            <summary>
            Specifies the number of color indices that are considered important for displaying the bitmap.
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.RECT">
            <summary>
            The structure defines the coordinates of the upper-left and lower-right corners of a rectangle.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.RECT.Left">
            <summary>
            Specifies the x-coordinate of the upper-left corner of the rectangle.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.RECT.Top">
            <summary>
            Specifies the y-coordinate of the upper-left corner of the rectangle. 
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.RECT.Right">
            <summary>
            Specifies the x-coordinate of the lower-right corner of the rectangle.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.RECT.Bottom">
            <summary>
            Specifies the y-coordinate of the lower-right corner of the rectangle.
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.CAUUID">
            <summary>
            The CAUUID structure is a Counted Array of UUID or GUID types.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.CAUUID.cElems">
            <summary>
            Size of the array pointed to by <b>pElems</b>.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.CAUUID.pElems">
            <summary>
            Pointer to an array of UUID values, each of which specifies UUID.
            </summary>
        </member>
        <member name="M:OMCS.Engine.DShow.Core.CAUUID.ToGuidArray">
            <summary>
            Performs manual marshaling of <b>pElems</b> to retrieve an array of Guid objects.
            </summary>
            
            <returns>A managed representation of <b>pElems</b>.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.DsEvCode">
            <summary>
            Enumeration of DirectShow event codes.
            </summary>
        </member>
        <member name="T:OMCS.Engine.DShow.Core.Tools">
            <summary>
            Some miscellaneous functions.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.Tools.GetPin(OMCS.Engine.DShow.Core.IBaseFilter,OMCS.Engine.DShow.Core.PinDirection,System.Int32)">
            <summary>
            Get filter's pin.
            </summary>
            
            <param name="filter">Filter to get pin of.</param>
            <param name="dir">Pin's direction.</param>
            <param name="num">Pin's number.</param>
            
            <returns>Returns filter's pin.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.Tools.GetInPin(OMCS.Engine.DShow.Core.IBaseFilter,System.Int32)">
            <summary>
            Get filter's input pin.
            </summary>
            
            <param name="filter">Filter to get pin of.</param>
            <param name="num">Pin's number.</param>
            
            <returns>Returns filter's pin.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.Tools.GetOutPin(OMCS.Engine.DShow.Core.IBaseFilter,System.Int32)">
            <summary>
            Get filter's output pin.
            </summary>
            
            <param name="filter">Filter to get pin of.</param>
            <param name="num">Pin's number.</param>
            
            <returns>Returns filter's pin.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.Clsid">
            <summary>
            DirectShow class IDs.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.Core.Clsid.SystemDeviceEnum">
            <summary>
            System device enumerator.
            </summary>
            
            <remarks>Equals to CLSID_SystemDeviceEnum.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.Clsid.FilterGraph">
            <summary>
            Filter graph.
            </summary>
            
            <remarks>Equals to CLSID_FilterGraph.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.Clsid.SampleGrabber">
            <summary>
            Sample grabber.
            </summary>
            
            <remarks>Equals to CLSID_SampleGrabber.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.Clsid.CaptureGraphBuilder2">
            <summary>
            Capture graph builder.
            </summary>
            
            <remarks>Equals to CLSID_CaptureGraphBuilder2.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.Clsid.AsyncReader">
            <summary>
            Async reader.
            </summary>
            
            <remarks>Equals to CLSID_AsyncReader.</remarks>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.MediaType">
            <summary>
            DirectShow media types?
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.MediaType.Video">
            <summary>
            Video.
            </summary>
            
            <remarks>Equals to MEDIATYPE_Video.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.MediaType.Interleaved">
            <summary>
            Interleaved. Used by Digital Video (DV).
            </summary>
            
            <remarks>Equals to MEDIATYPE_Interleaved.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.MediaType.Audio">
            <summary>
            Audio.
            </summary>
            
            <remarks>Equals to MEDIATYPE_Audio.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.MediaType.Text">
            <summary>
            Text.
            </summary>
            
            <remarks>Equals to MEDIATYPE_Text.</remarks>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.MediaType.Stream">
            <summary>
            Byte stream with no time stamps.
            </summary>
            
            <remarks>Equals to MEDIATYPE_Stream.</remarks>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.PinCategory">
            <summary>
            DirectShow pin categories.
            </summary>
            
        </member>
        <member name="F:OMCS.Engine.DShow.Core.PinCategory.Capture">
            <summary>
            Capture pin.
            </summary>
            
            <remarks>Equals to PIN_CATEGORY_CAPTURE.</remarks>
            
        </member>
        <member name="T:OMCS.Engine.DShow.Core.Win32">
            <summary>
            Some Win32 API used internally.
            </summary>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.Win32.CreateBindCtx(System.Int32,System.Runtime.InteropServices.ComTypes.IBindCtx@)">
            <summary>
            Supplies a pointer to an implementation of <b>IBindCtx</b> (a bind context object).
            This object stores information about a particular moniker-binding operation.
            </summary>
            
            <param name="reserved">Reserved for future use; must be zero.</param>
            <param name="ppbc">Address of <b>IBindCtx*</b> pointer variable that receives the
            interface pointer to the new bind context object.</param>
            
            <returns>Returns <b>S_OK</b> on success.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.Win32.MkParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <summary>
            Converts a string into a moniker that identifies the object named by the string.
            </summary>
            
            <param name="pbc">Pointer to the IBindCtx interface on the bind context object to be used in this binding operation.</param>
            <param name="szUserName">Pointer to a zero-terminated wide character string containing the display name to be parsed. </param>
            <param name="pchEaten">Pointer to the number of characters of szUserName that were consumed.</param>
            <param name="ppmk">Address of <b>IMoniker*</b> pointer variable that receives the interface pointer
            to the moniker that was built from <b>szUserName</b>.</param>
            
            <returns>Returns <b>S_OK</b> on success.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.Win32.memcpy(System.Int32,System.Int32,System.Int32)">
            <summary>
            Copy a block of memory.
            </summary>
            
            <param name="dst">Destination pointer.</param>
            <param name="src">Source pointer.</param>
            <param name="count">Memory block's length to copy.</param>
            
            <returns>Return's the value of <b>dst</b> - pointer to destination.</returns>
            
        </member>
        <member name="M:OMCS.Engine.DShow.Core.Win32.OleCreatePropertyFrame(System.IntPtr,System.Int32,System.Int32,System.String,System.Int32,System.Object@,System.Int32,System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Invokes a new property frame, that is, a property sheet dialog box.
            </summary>
            
            <param name="hwndOwner">Parent window of property sheet dialog box.</param>
            <param name="x">Horizontal position for dialog box.</param>
            <param name="y">Vertical position for dialog box.</param>
            <param name="caption">Dialog box caption.</param>
            <param name="cObjects">Number of object pointers in <b>ppUnk</b>.</param>
            <param name="ppUnk">Pointer to the objects for property sheet.</param>
            <param name="cPages">Number of property pages in <b>lpPageClsID</b>.</param>
            <param name="lpPageClsID">Array of CLSIDs for each property page.</param>
            <param name="lcid">Locale identifier for property sheet locale.</param>
            <param name="dwReserved">Reserved.</param>
            <param name="lpvReserved">Reserved.</param>
            
            <returns>Returns <b>S_OK</b> on success.</returns>
            
        </member>
        <member name="T:OMCS.Engine.DShow.VideoCapabilities">
            <summary>
            Capabilities of video device such as frame size and frame rate.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.VideoCapabilities.FrameSize">
            <summary>
            Frame size supported by video device.
            </summary>
        </member>
        <member name="F:OMCS.Engine.DShow.VideoCapabilities.MaxFrameRate">
            <summary>
            Maximum frame rate supported by video device for corresponding <see cref="F:OMCS.Engine.DShow.VideoCapabilities.FrameSize">frame size</see>.
            </summary>
        </member>
    </members>
</doc>
